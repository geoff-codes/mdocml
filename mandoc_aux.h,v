head	1.4;
access;
symbols
	VERSION_1_13_3:1.3
	VERSION_1_13_2:1.3
	VERSION_1_12_4:1.2
	VERSION_1_13_1:1.2
	VERSION_1_12:1.2.0.2;
locks; strict;
comment	@ * @;


1.4
date	2015.11.07.14.01.16;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2014.12.01.04.05.32;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2014.04.23.21.06.41;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2014.03.23.11.59.17;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.4
log
@In private header files, __BEGIN_DECLS and __END_DECLS are pointless.
Because these work slightly differently on different systems,
they are becoming a maintenance burden in the portable version,
so delete them.

Besides, one of the chief design goals of the mandoc toolbox is to
make sure that nothing related to documentation requires C++.
Consequently, linking mandoc against any kind of C++ program would
defeat the purpose and is not supported.
I don't understand why kristaps@@ added them in the first place.
@
text
@/*	$Id: mandoc_aux.h,v 1.3 2014/12/01 04:05:32 schwarze Exp $ */
/*
 * Copyright (c) 2009, 2011 Kristaps Dzonsons <kristaps@@bsd.lv>
 * Copyright (c) 2014 Ingo Schwarze <schwarze@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

int		  mandoc_asprintf(char **, const char *, ...);
void		 *mandoc_calloc(size_t, size_t);
void		 *mandoc_malloc(size_t);
void		 *mandoc_realloc(void *, size_t);
void		 *mandoc_reallocarray(void *, size_t, size_t);
char		 *mandoc_strdup(const char *);
char		 *mandoc_strndup(const char *, size_t);
@


1.3
log
@remove unneccessary inclusion protection; patch from deraadt@@
@
text
@d1 1
a1 1
/*	$Id: mandoc_aux.h,v 1.2 2014/04/23 21:06:41 schwarze Exp $ */
a18 2
__BEGIN_DECLS

a25 2

__END_DECLS
@


1.2
log
@Audit malloc(3)/calloc(3)/realloc(3) usage.
* Change eight reallocs to reallocarray to be safe from overflows.
* Change one malloc to reallocarray to be safe from overflows.
* Change one calloc to reallocarray, no zeroing needed.
* Change the order of arguments of three callocs (aesthetical).
@
text
@d1 1
a1 1
/*	$Id: mandoc_aux.h,v 1.1 2014/03/23 11:59:17 schwarze Exp $ */
a17 2
#ifndef MANDOC_AUX_H
#define MANDOC_AUX_H
a29 2

#endif /*!MANDOC_AUX_H*/
@


1.1
log
@The files mandoc.c and mandoc.h contained both specialised low-level
functions used for multiple languages (mdoc, man, roff), for example
mandoc_escape(), mandoc_getarg(), mandoc_eos(), and generic auxiliary
functions.  Split the auxiliaries out into their own file and header.
@
text
@d1 1
a1 1
/*	$Id: mandoc.h,v 1.61 2014/03/19 22:20:36 schwarze Exp $ */
d27 1
@
