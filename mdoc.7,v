head	1.257;
access;
symbols
	VERSION_1_13_3:1.252
	VERSION_1_13_2:1.245
	VERSION_1_12_4:1.235
	VERSION_1_13_1:1.234
	VERSION_1_12_3:1.223
	VERSION_1_12_2:1.220
	VERSION_1_12:1.235.0.2
	VERSION_1_12_1:1.214
	VERSION_1_12_0:1.212
	VERSION_1_11_7:1.208
	VERSION_1_11_6:1.199
	VERSION_1_11_5:1.191
	VERSION_1_11_4:1.189
	VERSION_1_11_3:1.188
	VERSION_1_11_2:1.186
	VERSION_1_11_1:1.184
	VERSION_1_10_10:1.182
	VERSION_1_10_9:1.174
	VERSION_1_10_8:1.171
	VERSION_1_10_7:1.169
	VERSION_1_10_6:1.161
	VERSION_1_10_5:1.142
	VERSION_1_10_5_PREPDF:1.140
	VERSION_1_10_4:1.133
	VERSION_1_10_3:1.127
	VERSION_1_10_2:1.126
	VERSION_1_10_1:1.124
	VERSION_1_9_24:1.98
	VERSION_1_9_25:1.101
	VERSION_1_9_23:1.91
	VERSION_1_9_22:1.87
	VERSION_1_9_21:1.86
	VERSION_1_9_20:1.86
	VERSION_1_9_19:1.86
	VERSION_1_9_18:1.86
	VERSION_1_9_17:1.85
	VERSION_1_9_16:1.85
	VERSION_1_9_15:1.84
	VERSION_1_9_15-pre2:1.81
	VERSION_1_9_15-pre1:1.81
	VERSION_1_9_14:1.78
	VERSION_1_9_13:1.73
	VERSION_1_9_12:1.70
	VERSION_1_9_11:1.70
	VERSION_1_9_10:1.70
	VERSION_1_9_9:1.66
	VERSION_1_9_8:1.60
	VERSION_1_9_7:1.60
	VERSION_1_9_6:1.59
	VERSION_1_9_5:1.59
	VERSION_1_9_2:1.59
	VERSION_1_9_1:1.59
	VERSION_1_9_0:1.56
	VERSION_1_8_5:1.54
	VERSION_1_8_4:1.52
	VERSION_1_8_3:1.50
	VERSION_1_8_2:1.50
	VERSION_1_8_1:1.49
	VERSION_1_8_0:1.43
	VERSION_1_7_24:1.38
	VERSION_1_7_23:1.38
	VERSION_1_7_22:1.37
	VERSION_1_7_21:1.36
	VERSION_1_7_20:1.32
	VERSION_1_7_19:1.30
	VERSION_1_7_17:1.28
	VERSION_1_7_16:1.28
	VERSION_1_7_15:1.28
	VERSION_1_7_14:1.24
	VERSION_1_7_13:1.22
	VERSION_1_7_12:1.19
	OPENBSD_CHECKIN:1.19
	VERSION_1_7_10:1.19
	VERSION_1_7_5:1.15
	VERSION_1_6_5:1.10
	VERSION_1_6_2:1.10
	VERSION_1_5_3:1.6
	VERSION_1_5_1:1.4;
locks; strict;
comment	@# @;


1.257
date	2015.11.05.12.06.45;	author schwarze;	state Exp;
branches;
next	1.256;

1.256
date	2015.10.11.18.56.51;	author schwarze;	state Exp;
branches;
next	1.255;

1.255
date	2015.09.24.18.41.22;	author schwarze;	state Exp;
branches;
next	1.254;

1.254
date	2015.09.14.20.10.19;	author schwarze;	state Exp;
branches;
next	1.253;

1.253
date	2015.03.13.20.20.07;	author schwarze;	state Exp;
branches;
next	1.252;

1.252
date	2015.02.23.13.31.04;	author schwarze;	state Exp;
branches;
next	1.251;

1.251
date	2015.02.15.17.57.45;	author schwarze;	state Exp;
branches;
next	1.250;

1.250
date	2015.01.29.00.33.57;	author schwarze;	state Exp;
branches;
next	1.249;

1.249
date	2015.01.20.19.39.34;	author schwarze;	state Exp;
branches;
next	1.248;

1.248
date	2015.01.03.00.59.13;	author schwarze;	state Exp;
branches;
next	1.247;

1.247
date	2014.12.31.20.42.31;	author schwarze;	state Exp;
branches;
next	1.246;

1.246
date	2014.12.28.15.23.33;	author schwarze;	state Exp;
branches;
next	1.245;

1.245
date	2014.11.30.21.56.18;	author schwarze;	state Exp;
branches;
next	1.244;

1.244
date	2014.11.28.18.36.35;	author schwarze;	state Exp;
branches;
next	1.243;

1.243
date	2014.11.28.18.09.01;	author schwarze;	state Exp;
branches;
next	1.242;

1.242
date	2014.11.27.16.20.31;	author schwarze;	state Exp;
branches;
next	1.241;

1.241
date	2014.11.16.20.46.21;	author schwarze;	state Exp;
branches;
next	1.240;

1.240
date	2014.10.30.20.10.02;	author schwarze;	state Exp;
branches;
next	1.239;

1.239
date	2014.10.20.17.59.20;	author schwarze;	state Exp;
branches;
next	1.238;

1.238
date	2014.10.13.12.46.28;	author schwarze;	state Exp;
branches;
next	1.237;

1.237
date	2014.09.17.00.43.15;	author schwarze;	state Exp;
branches;
next	1.236;

1.236
date	2014.08.28.03.51.56;	author schwarze;	state Exp;
branches;
next	1.235;

1.235
date	2014.08.14.20.57.19;	author schwarze;	state Exp;
branches;
next	1.234;

1.234
date	2014.08.08.16.38.06;	author schwarze;	state Exp;
branches;
next	1.233;

1.233
date	2014.08.08.01.52.40;	author schwarze;	state Exp;
branches;
next	1.232;

1.232
date	2014.07.13.10.24.40;	author schwarze;	state Exp;
branches;
next	1.231;

1.231
date	2014.07.02.03.48.07;	author schwarze;	state Exp;
branches;
next	1.230;

1.230
date	2014.06.24.21.43.08;	author schwarze;	state Exp;
branches;
next	1.229;

1.229
date	2014.06.22.17.07.06;	author schwarze;	state Exp;
branches;
next	1.228;

1.228
date	2014.03.31.01.05.32;	author schwarze;	state Exp;
branches;
next	1.227;

1.227
date	2014.02.16.14.26.55;	author schwarze;	state Exp;
branches;
next	1.226;

1.226
date	2014.01.24.22.54.33;	author schwarze;	state Exp;
branches;
next	1.225;

1.225
date	2014.01.20.00.51.43;	author schwarze;	state Exp;
branches;
next	1.224;

1.224
date	2013.12.31.23.29.41;	author schwarze;	state Exp;
branches;
next	1.223;

1.223
date	2013.12.25.14.09.32;	author schwarze;	state Exp;
branches;
next	1.222;

1.222
date	2013.11.02.20.39.49;	author schwarze;	state Exp;
branches;
next	1.221;

1.221
date	2013.10.06.17.01.52;	author schwarze;	state Exp;
branches;
next	1.220;

1.220
date	2013.08.14.15.08.31;	author schwarze;	state Exp;
branches;
next	1.219;

1.219
date	2013.07.13.19.41.16;	author schwarze;	state Exp;
branches;
next	1.218;

1.218
date	2013.06.19.21.20.27;	author schwarze;	state Exp;
branches;
next	1.217;

1.217
date	2013.04.28.07.54.01;	author schwarze;	state Exp;
branches;
next	1.216;

1.216
date	2012.08.29.23.38.50;	author schwarze;	state Exp;
branches;
next	1.215;

1.215
date	2012.06.20.22.06.30;	author schwarze;	state Exp;
branches;
next	1.214;

1.214
date	2012.01.03.10.18.05;	author kristaps;	state Exp;
branches;
next	1.213;

1.213
date	2011.11.01.14.59.27;	author schwarze;	state Exp;
branches;
next	1.212;

1.212
date	2011.09.27.21.49.23;	author schwarze;	state Exp;
branches;
next	1.211;

1.211
date	2011.09.26.23.07.31;	author schwarze;	state Exp;
branches;
next	1.210;

1.210
date	2011.09.18.07.57.16;	author schwarze;	state Exp;
branches;
next	1.209;

1.209
date	2011.09.16.20.44.57;	author schwarze;	state Exp;
branches;
next	1.208;

1.208
date	2011.09.02.19.37.35;	author kristaps;	state Exp;
branches;
next	1.207;

1.207
date	2011.08.30.13.14.01;	author kristaps;	state Exp;
branches;
next	1.206;

1.206
date	2011.08.30.12.16.36;	author kristaps;	state Exp;
branches;
next	1.205;

1.205
date	2011.08.19.13.07.22;	author kristaps;	state Exp;
branches;
next	1.204;

1.204
date	2011.08.19.12.55.33;	author kristaps;	state Exp;
branches;
next	1.203;

1.203
date	2011.08.19.10.19.55;	author kristaps;	state Exp;
branches;
next	1.202;

1.202
date	2011.08.18.08.58.44;	author kristaps;	state Exp;
branches;
next	1.201;

1.201
date	2011.08.17.22.20.14;	author kristaps;	state Exp;
branches;
next	1.200;

1.200
date	2011.08.17.20.34.53;	author kristaps;	state Exp;
branches;
next	1.199;

1.199
date	2011.08.16.23.44.58;	author schwarze;	state Exp;
branches;
next	1.198;

1.198
date	2011.08.16.23.37.39;	author schwarze;	state Exp;
branches;
next	1.197;

1.197
date	2011.08.10.14.07.23;	author kristaps;	state Exp;
branches;
next	1.196;

1.196
date	2011.08.03.21.25.23;	author schwarze;	state Exp;
branches;
next	1.195;

1.195
date	2011.08.02.01.07.26;	author schwarze;	state Exp;
branches;
next	1.194;

1.194
date	2011.08.01.07.45.11;	author schwarze;	state Exp;
branches;
next	1.193;

1.193
date	2011.07.31.17.42.50;	author schwarze;	state Exp;
branches;
next	1.192;

1.192
date	2011.07.31.17.30.33;	author schwarze;	state Exp;
branches;
next	1.191;

1.191
date	2011.07.18.10.23.02;	author kristaps;	state Exp;
branches;
next	1.190;

1.190
date	2011.07.15.20.40.32;	author schwarze;	state Exp;
branches;
next	1.189;

1.189
date	2011.07.11.08.45.02;	author kristaps;	state Exp;
branches;
next	1.188;

1.188
date	2011.05.26.09.26.16;	author kristaps;	state Exp;
branches;
next	1.187;

1.187
date	2011.05.21.15.55.42;	author schwarze;	state Exp;
branches;
next	1.186;

1.186
date	2011.04.17.11.57.07;	author schwarze;	state Exp;
branches;
next	1.185;

1.185
date	2011.04.06.11.39.25;	author kristaps;	state Exp;
branches;
next	1.184;

1.184
date	2011.04.01.19.50.49;	author kristaps;	state Exp;
branches;
next	1.183;

1.183
date	2011.04.01.19.47.33;	author kristaps;	state Exp;
branches;
next	1.182;

1.182
date	2011.03.17.14.50.14;	author kristaps;	state Exp;
branches;
next	1.181;

1.181
date	2011.03.07.01.35.51;	author schwarze;	state Exp;
branches;
next	1.180;

1.180
date	2011.02.09.10.03.02;	author kristaps;	state Exp;
branches;
next	1.179;

1.179
date	2011.02.07.00.05.40;	author schwarze;	state Exp;
branches;
next	1.178;

1.178
date	2011.02.02.21.40.45;	author kristaps;	state Exp;
branches;
next	1.177;

1.177
date	2011.01.25.00.40.14;	author schwarze;	state Exp;
branches;
next	1.176;

1.176
date	2011.01.22.14.05.33;	author schwarze;	state Exp;
branches;
next	1.175;

1.175
date	2011.01.12.10.43.22;	author kristaps;	state Exp;
branches;
next	1.174;

1.174
date	2011.01.04.23.32.21;	author kristaps;	state Exp;
branches;
next	1.173;

1.173
date	2010.12.29.16.16.50;	author kristaps;	state Exp;
branches;
next	1.172;

1.172
date	2010.12.27.20.39.46;	author kristaps;	state Exp;
branches;
next	1.171;

1.171
date	2010.12.22.23.53.55;	author schwarze;	state Exp;
branches;
next	1.170;

1.170
date	2010.12.18.19.12.00;	author schwarze;	state Exp;
branches;
next	1.169;

1.169
date	2010.12.06.16.37.32;	author kristaps;	state Exp;
branches;
next	1.168;

1.168
date	2010.12.05.15.37.30;	author kristaps;	state Exp;
branches;
next	1.167;

1.167
date	2010.11.30.21.44.59;	author schwarze;	state Exp;
branches;
next	1.166;

1.166
date	2010.11.30.20.45.55;	author schwarze;	state Exp;
branches;
next	1.165;

1.165
date	2010.11.29.16.06.46;	author kristaps;	state Exp;
branches;
next	1.164;

1.164
date	2010.11.29.13.02.47;	author kristaps;	state Exp;
branches;
next	1.163;

1.163
date	2010.10.29.10.38.54;	author schwarze;	state Exp;
branches;
next	1.162;

1.162
date	2010.10.24.14.49.35;	author schwarze;	state Exp;
branches;
next	1.161;

1.161
date	2010.09.27.11.21.39;	author kristaps;	state Exp;
branches;
next	1.160;

1.160
date	2010.09.27.06.56.44;	author kristaps;	state Exp;
branches;
next	1.159;

1.159
date	2010.09.26.19.46.48;	author schwarze;	state Exp;
branches;
next	1.158;

1.158
date	2010.09.04.17.22.41;	author kristaps;	state Exp;
branches;
next	1.157;

1.157
date	2010.08.29.11.28.09;	author kristaps;	state Exp;
branches;
next	1.156;

1.156
date	2010.08.28.22.08.38;	author kristaps;	state Exp;
branches;
next	1.155;

1.155
date	2010.08.24.14.03.46;	author kristaps;	state Exp;
branches;
next	1.154;

1.154
date	2010.08.24.13.39.37;	author kristaps;	state Exp;
branches;
next	1.153;

1.153
date	2010.08.24.13.07.01;	author kristaps;	state Exp;
branches;
next	1.152;

1.152
date	2010.08.24.12.18.49;	author kristaps;	state Exp;
branches;
next	1.151;

1.151
date	2010.08.22.15.49.28;	author kristaps;	state Exp;
branches;
next	1.150;

1.150
date	2010.08.22.14.54.29;	author kristaps;	state Exp;
branches;
next	1.149;

1.149
date	2010.08.09.00.07.51;	author kristaps;	state Exp;
branches;
next	1.148;

1.148
date	2010.08.07.10.31.32;	author kristaps;	state Exp;
branches;
next	1.147;

1.147
date	2010.08.07.10.26.07;	author kristaps;	state Exp;
branches;
next	1.146;

1.146
date	2010.08.07.10.18.36;	author kristaps;	state Exp;
branches;
next	1.145;

1.145
date	2010.08.07.09.56.12;	author kristaps;	state Exp;
branches;
next	1.144;

1.144
date	2010.08.06.17.09.58;	author schwarze;	state Exp;
branches;
next	1.143;

1.143
date	2010.08.06.17.07.11;	author schwarze;	state Exp;
branches;
next	1.142;

1.142
date	2010.07.26.13.45.49;	author kristaps;	state Exp;
branches;
next	1.141;

1.141
date	2010.07.26.12.51.56;	author kristaps;	state Exp;
branches;
next	1.140;

1.140
date	2010.07.19.21.59.48;	author kristaps;	state Exp;
branches;
next	1.139;

1.139
date	2010.07.19.15.43.10;	author kristaps;	state Exp;
branches;
next	1.138;

1.138
date	2010.07.19.15.28.11;	author kristaps;	state Exp;
branches;
next	1.137;

1.137
date	2010.07.19.10.48.36;	author kristaps;	state Exp;
branches;
next	1.136;

1.136
date	2010.07.19.09.19.22;	author kristaps;	state Exp;
branches;
next	1.135;

1.135
date	2010.07.16.21.09.39;	author kristaps;	state Exp;
branches;
next	1.134;

1.134
date	2010.07.15.23.50.15;	author schwarze;	state Exp;
branches;
next	1.133;

1.133
date	2010.07.06.11.07.21;	author kristaps;	state Exp;
branches;
next	1.132;

1.132
date	2010.07.06.10.55.50;	author kristaps;	state Exp;
branches;
next	1.131;

1.131
date	2010.07.05.13.12.32;	author kristaps;	state Exp;
branches;
next	1.130;

1.130
date	2010.07.04.22.04.04;	author schwarze;	state Exp;
branches;
next	1.129;

1.129
date	2010.07.02.13.07.46;	author kristaps;	state Exp;
branches;
next	1.128;

1.128
date	2010.07.01.15.38.56;	author schwarze;	state Exp;
branches;
next	1.127;

1.127
date	2010.06.27.13.30.51;	author schwarze;	state Exp;
branches;
next	1.126;

1.126
date	2010.06.12.11.41.50;	author kristaps;	state Exp;
branches;
next	1.125;

1.125
date	2010.06.12.10.09.19;	author kristaps;	state Exp;
branches;
next	1.124;

1.124
date	2010.06.07.12.20.07;	author kristaps;	state Exp;
branches;
next	1.123;

1.123
date	2010.06.07.11.14.13;	author kristaps;	state Exp;
branches;
next	1.122;

1.122
date	2010.06.07.11.01.15;	author kristaps;	state Exp;
branches;
next	1.121;

1.121
date	2010.06.06.22.25.56;	author kristaps;	state Exp;
branches;
next	1.120;

1.120
date	2010.06.06.10.49.56;	author kristaps;	state Exp;
branches;
next	1.119;

1.119
date	2010.06.04.22.16.27;	author kristaps;	state Exp;
branches;
next	1.118;

1.118
date	2010.06.04.21.49.39;	author kristaps;	state Exp;
branches;
next	1.117;

1.117
date	2010.06.04.20.57.26;	author kristaps;	state Exp;
branches;
next	1.116;

1.116
date	2010.06.03.15.54.27;	author kristaps;	state Exp;
branches;
next	1.115;

1.115
date	2010.06.03.14.52.32;	author kristaps;	state Exp;
branches;
next	1.114;

1.114
date	2010.06.03.14.29.52;	author kristaps;	state Exp;
branches;
next	1.113;

1.113
date	2010.06.02.12.01.00;	author kristaps;	state Exp;
branches;
next	1.112;

1.112
date	2010.05.31.10.19.31;	author kristaps;	state Exp;
branches;
next	1.111;

1.111
date	2010.05.30.11.00.53;	author kristaps;	state Exp;
branches;
next	1.110;

1.110
date	2010.05.26.10.39.35;	author kristaps;	state Exp;
branches;
next	1.109;

1.109
date	2010.05.26.09.35.35;	author kristaps;	state Exp;
branches;
next	1.108;

1.108
date	2010.05.15.16.24.37;	author kristaps;	state Exp;
branches;
next	1.107;

1.107
date	2010.05.15.07.01.51;	author kristaps;	state Exp;
branches;
next	1.106;

1.106
date	2010.05.14.17.31.25;	author kristaps;	state Exp;
branches;
next	1.105;

1.105
date	2010.05.14.16.02.29;	author kristaps;	state Exp;
branches;
next	1.104;

1.104
date	2010.05.14.15.17.23;	author kristaps;	state Exp;
branches;
next	1.103;

1.103
date	2010.05.14.15.02.03;	author kristaps;	state Exp;
branches;
next	1.102;

1.102
date	2010.05.14.14.21.17;	author kristaps;	state Exp;
branches;
next	1.101;

1.101
date	2010.05.12.17.08.03;	author kristaps;	state Exp;
branches;
next	1.100;

1.100
date	2010.05.12.16.45.18;	author kristaps;	state Exp;
branches;
next	1.99;

1.99
date	2010.05.12.08.41.17;	author kristaps;	state Exp;
branches;
next	1.98;

1.98
date	2010.05.08.22.26.39;	author kristaps;	state Exp;
branches;
next	1.97;

1.97
date	2010.05.08.10.28.24;	author kristaps;	state Exp;
branches;
next	1.96;

1.96
date	2010.05.08.08.36.44;	author kristaps;	state Exp;
branches;
next	1.95;

1.95
date	2010.05.07.15.49.36;	author kristaps;	state Exp;
branches;
next	1.94;

1.94
date	2010.04.13.05.26.49;	author kristaps;	state Exp;
branches;
next	1.93;

1.93
date	2010.04.07.19.37.54;	author kristaps;	state Exp;
branches;
next	1.92;

1.92
date	2010.04.07.18.50.35;	author kristaps;	state Exp;
branches;
next	1.91;

1.91
date	2010.04.07.08.17.16;	author kristaps;	state Exp;
branches;
next	1.90;

1.90
date	2010.04.06.17.01.27;	author kristaps;	state Exp;
branches;
next	1.89;

1.89
date	2010.04.06.11.19.57;	author kristaps;	state Exp;
branches;
next	1.88;

1.88
date	2010.04.06.07.17.51;	author kristaps;	state Exp;
branches;
next	1.87;

1.87
date	2010.03.31.07.13.53;	author kristaps;	state Exp;
branches;
next	1.86;

1.86
date	2010.03.26.07.07.58;	author kristaps;	state Exp;
branches;
next	1.85;

1.85
date	2010.03.21.18.16.41;	author kristaps;	state Exp;
branches;
next	1.84;

1.84
date	2010.02.17.19.22.50;	author kristaps;	state Exp;
branches;
next	1.83;

1.83
date	2010.01.30.08.55.39;	author kristaps;	state Exp;
branches;
next	1.82;

1.82
date	2010.01.07.19.10.10;	author kristaps;	state Exp;
branches;
next	1.81;

1.81
date	2010.01.01.16.52.00;	author kristaps;	state Exp;
branches;
next	1.80;

1.80
date	2010.01.01.16.27.32;	author kristaps;	state Exp;
branches;
next	1.79;

1.79
date	2010.01.01.13.35.30;	author kristaps;	state Exp;
branches;
next	1.78;

1.78
date	2009.11.16.09.52.47;	author kristaps;	state Exp;
branches;
next	1.77;

1.77
date	2009.11.12.05.50.12;	author kristaps;	state Exp;
branches;
next	1.76;

1.76
date	2009.11.09.05.11.46;	author kristaps;	state Exp;
branches;
next	1.75;

1.75
date	2009.11.06.10.31.31;	author kristaps;	state Exp;
branches;
next	1.74;

1.74
date	2009.11.05.08.40.16;	author kristaps;	state Exp;
branches;
next	1.73;

1.73
date	2009.11.02.11.39.40;	author kristaps;	state Exp;
branches;
next	1.72;

1.72
date	2009.11.02.06.22.45;	author kristaps;	state Exp;
branches;
next	1.71;

1.71
date	2009.10.31.06.50.25;	author kristaps;	state Exp;
branches;
next	1.70;

1.70
date	2009.10.26.04.09.45;	author kristaps;	state Exp;
branches;
next	1.69;

1.69
date	2009.10.24.05.52.13;	author kristaps;	state Exp;
branches;
next	1.68;

1.68
date	2009.10.22.10.36.20;	author kristaps;	state Exp;
branches;
next	1.67;

1.67
date	2009.10.22.10.33.28;	author kristaps;	state Exp;
branches;
next	1.66;

1.66
date	2009.10.20.05.45.21;	author kristaps;	state Exp;
branches;
next	1.65;

1.65
date	2009.10.19.11.02.23;	author kristaps;	state Exp;
branches;
next	1.64;

1.64
date	2009.10.19.10.18.05;	author kristaps;	state Exp;
branches;
next	1.63;

1.63
date	2009.10.19.07.34.43;	author kristaps;	state Exp;
branches;
next	1.62;

1.62
date	2009.10.18.19.01.24;	author kristaps;	state Exp;
branches;
next	1.61;

1.61
date	2009.10.18.13.58.48;	author kristaps;	state Exp;
branches;
next	1.60;

1.60
date	2009.09.28.22.09.08;	author kristaps;	state Exp;
branches;
next	1.59;

1.59
date	2009.08.20.13.32.09;	author kristaps;	state Exp;
branches;
next	1.58;

1.58
date	2009.08.20.13.22.48;	author kristaps;	state Exp;
branches;
next	1.57;

1.57
date	2009.08.20.12.08.40;	author kristaps;	state Exp;
branches;
next	1.56;

1.56
date	2009.08.18.14.27.16;	author kristaps;	state Exp;
branches;
next	1.55;

1.55
date	2009.07.29.08.58.11;	author kristaps;	state Exp;
branches;
next	1.54;

1.54
date	2009.07.27.12.35.54;	author kristaps;	state Exp;
branches;
next	1.53;

1.53
date	2009.07.26.19.30.50;	author kristaps;	state Exp;
branches;
next	1.52;

1.52
date	2009.07.26.10.14.22;	author kristaps;	state Exp;
branches;
next	1.51;

1.51
date	2009.07.24.12.47.35;	author kristaps;	state Exp;
branches;
next	1.50;

1.50
date	2009.07.20.13.45.11;	author kristaps;	state Exp;
branches;
next	1.49;

1.49
date	2009.07.19.09.17.42;	author kristaps;	state Exp;
branches;
next	1.48;

1.48
date	2009.07.18.23.31.04;	author kristaps;	state Exp;
branches;
next	1.47;

1.47
date	2009.07.18.18.49.19;	author kristaps;	state Exp;
branches;
next	1.46;

1.46
date	2009.07.17.14.51.04;	author kristaps;	state Exp;
branches;
next	1.45;

1.45
date	2009.07.17.12.40.48;	author kristaps;	state Exp;
branches;
next	1.44;

1.44
date	2009.07.17.12.08.08;	author kristaps;	state Exp;
branches;
next	1.43;

1.43
date	2009.07.14.15.57.08;	author kristaps;	state Exp;
branches;
next	1.42;

1.42
date	2009.07.13.07.23.07;	author kristaps;	state Exp;
branches;
next	1.41;

1.41
date	2009.07.12.19.34.51;	author kristaps;	state Exp;
branches;
next	1.40;

1.40
date	2009.07.12.16.34.16;	author kristaps;	state Exp;
branches;
next	1.39;

1.39
date	2009.07.12.15.32.26;	author kristaps;	state Exp;
branches;
next	1.38;

1.38
date	2009.07.06.09.21.24;	author kristaps;	state Exp;
branches;
next	1.37;

1.37
date	2009.07.05.19.25.10;	author kristaps;	state Exp;
branches;
next	1.36;

1.36
date	2009.07.04.11.04.07;	author kristaps;	state Exp;
branches;
next	1.35;

1.35
date	2009.07.04.09.00.41;	author kristaps;	state Exp;
branches;
next	1.34;

1.34
date	2009.06.25.11.35.28;	author kristaps;	state Exp;
branches;
next	1.33;

1.33
date	2009.06.25.10.51.21;	author kristaps;	state Exp;
branches;
next	1.32;

1.32
date	2009.06.22.13.09.17;	author kristaps;	state Exp;
branches;
next	1.31;

1.31
date	2009.06.22.12.22.35;	author kristaps;	state Exp;
branches;
next	1.30;

1.30
date	2009.06.17.14.08.47;	author kristaps;	state Exp;
branches;
next	1.29;

1.29
date	2009.06.16.19.13.28;	author kristaps;	state Exp;
branches;
next	1.28;

1.28
date	2009.06.12.12.40.44;	author kristaps;	state Exp;
branches;
next	1.27;

1.27
date	2009.06.12.09.18.00;	author kristaps;	state Exp;
branches;
next	1.26;

1.26
date	2009.06.11.20.02.37;	author kristaps;	state Exp;
branches;
next	1.25;

1.25
date	2009.06.11.19.56.14;	author kristaps;	state Exp;
branches;
next	1.24;

1.24
date	2009.06.11.07.26.35;	author kristaps;	state Exp;
branches;
next	1.23;

1.23
date	2009.06.10.20.18.43;	author kristaps;	state Exp;
branches;
next	1.22;

1.22
date	2009.04.12.19.45.26;	author kristaps;	state Exp;
branches;
next	1.21;

1.21
date	2009.04.12.19.30.45;	author kristaps;	state Exp;
branches;
next	1.20;

1.20
date	2009.04.12.19.19.57;	author kristaps;	state Exp;
branches;
next	1.19;

1.19
date	2009.03.27.14.56.15;	author kristaps;	state Exp;
branches;
next	1.18;

1.18
date	2009.03.27.13.44.24;	author kristaps;	state Exp;
branches;
next	1.17;

1.17
date	2009.03.26.23.01.26;	author kristaps;	state Exp;
branches;
next	1.16;

1.16
date	2009.03.26.16.23.22;	author kristaps;	state Exp;
branches;
next	1.15;

1.15
date	2009.03.23.16.02.56;	author kristaps;	state Exp;
branches;
next	1.14;

1.14
date	2009.03.23.14.22.11;	author kristaps;	state Exp;
branches;
next	1.13;

1.13
date	2009.03.22.08.52.27;	author kristaps;	state Exp;
branches;
next	1.12;

1.12
date	2009.03.21.13.47.02;	author kristaps;	state Exp;
branches;
next	1.11;

1.11
date	2009.03.21.13.37.31;	author kristaps;	state Exp;
branches;
next	1.10;

1.10
date	2009.03.20.15.14.01;	author kristaps;	state Exp;
branches;
next	1.9;

1.9
date	2009.03.19.20.43.13;	author kristaps;	state Exp;
branches;
next	1.8;

1.8
date	2009.03.19.18.30.26;	author kristaps;	state Exp;
branches;
next	1.7;

1.7
date	2009.03.19.11.49.00;	author kristaps;	state Exp;
branches;
next	1.6;

1.6
date	2009.03.16.23.37.28;	author kristaps;	state Exp;
branches;
next	1.5;

1.5
date	2009.03.16.22.19.19;	author kristaps;	state Exp;
branches;
next	1.4;

1.4
date	2009.03.14.05.21.58;	author kristaps;	state Exp;
branches;
next	1.3;

1.3
date	2009.03.13.13.56.13;	author kristaps;	state Exp;
branches;
next	1.2;

1.2
date	2009.03.13.09.08.59;	author kristaps;	state Exp;
branches;
next	1.1;

1.1
date	2009.03.13.07.46.10;	author kristaps;	state Exp;
branches;
next	;


desc
@@


1.257
log
@specify option ordering in the DESCRIPTION section;
from guenther@@, ok and tweaks jmc@@
@
text
@.\"	$Id: mdoc.7,v 1.256 2015/10/11 18:56:51 schwarze Exp $
.\"
.\" Copyright (c) 2009, 2010, 2011 Kristaps Dzonsons <kristaps@@bsd.lv>
.\" Copyright (c) 2010, 2011, 2013 Ingo Schwarze <schwarze@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: October 11 2015 $
.Dt MDOC 7
.Os
.Sh NAME
.Nm mdoc
.Nd semantic markup language for formatting manual pages
.Sh DESCRIPTION
The
.Nm mdoc
language supports authoring of manual pages for the
.Xr man 1
utility by allowing semantic annotations of words, phrases,
page sections and complete manual pages.
Such annotations are used by formatting tools to achieve a uniform
presentation across all manuals written in
.Nm ,
and to support hyperlinking if supported by the output medium.
.Pp
This reference document describes the structure of manual pages
and the syntax and usage of the
.Nm
language.
The reference implementation of a parsing and formatting tool is
.Xr mandoc 1 ;
the
.Sx COMPATIBILITY
section describes compatibility with other implementations.
.Pp
In an
.Nm
document, lines beginning with the control character
.Sq \&.
are called
.Dq macro lines .
The first word is the macro name.
It consists of two or three letters.
Most macro names begin with a capital letter.
For a list of available macros, see
.Sx MACRO OVERVIEW .
The words following the macro name are arguments to the macro, optionally
including the names of other, callable macros; see
.Sx MACRO SYNTAX
for details.
.Pp
Lines not beginning with the control character are called
.Dq text lines .
They provide free-form text to be printed; the formatting of the text
depends on the respective processing context:
.Bd -literal -offset indent
\&.Sh Macro lines change control state.
Text lines are interpreted within the current state.
.Ed
.Pp
Many aspects of the basic syntax of the
.Nm
language are based on the
.Xr roff 7
language; see the
.Em LANGUAGE SYNTAX
and
.Em MACRO SYNTAX
sections in the
.Xr roff 7
manual for details, in particular regarding
comments, escape sequences, whitespace, and quoting.
However, using
.Xr roff 7
requests in
.Nm
documents is discouraged;
.Xr mandoc 1
supports some of them merely for backward compatibility.
.Sh MANUAL STRUCTURE
A well-formed
.Nm
document consists of a document prologue followed by one or more
sections.
.Pp
The prologue, which consists of the
.Sx \&Dd ,
.Sx \&Dt ,
and
.Sx \&Os
macros in that order, is required for every document.
.Pp
The first section (sections are denoted by
.Sx \&Sh )
must be the NAME section, consisting of at least one
.Sx \&Nm
followed by
.Sx \&Nd .
.Pp
Following that, convention dictates specifying at least the
.Em SYNOPSIS
and
.Em DESCRIPTION
sections, although this varies between manual sections.
.Pp
The following is a well-formed skeleton
.Nm
file for a utility
.Qq progname :
.Bd -literal -offset indent
\&.Dd $\&Mdocdate$
\&.Dt PROGNAME section
\&.Os
\&.Sh NAME
\&.Nm progname
\&.Nd one line about what it does
\&.\e\(dq .Sh LIBRARY
\&.\e\(dq For sections 2, 3, and 9 only.
\&.\e\(dq Not used in OpenBSD.
\&.Sh SYNOPSIS
\&.Nm progname
\&.Op Fl options
\&.Ar
\&.Sh DESCRIPTION
The
\&.Nm
utility processes files ...
\&.\e\(dq .Sh CONTEXT
\&.\e\(dq For section 9 functions only.
\&.\e\(dq .Sh IMPLEMENTATION NOTES
\&.\e\(dq Not used in OpenBSD.
\&.\e\(dq .Sh RETURN VALUES
\&.\e\(dq For sections 2, 3, and 9 function return values only.
\&.\e\(dq .Sh ENVIRONMENT
\&.\e\(dq For sections 1, 6, 7, and 8 only.
\&.\e\(dq .Sh FILES
\&.\e\(dq .Sh EXIT STATUS
\&.\e\(dq For sections 1, 6, and 8 only.
\&.\e\(dq .Sh EXAMPLES
\&.\e\(dq .Sh DIAGNOSTICS
\&.\e\(dq For sections 1, 4, 6, 7, 8, and 9 printf/stderr messages only.
\&.\e\(dq .Sh ERRORS
\&.\e\(dq For sections 2, 3, 4, and 9 errno settings only.
\&.\e\(dq .Sh SEE ALSO
\&.\e\(dq .Xr foobar 1
\&.\e\(dq .Sh STANDARDS
\&.\e\(dq .Sh HISTORY
\&.\e\(dq .Sh AUTHORS
\&.\e\(dq .Sh CAVEATS
\&.\e\(dq .Sh BUGS
\&.\e\(dq .Sh SECURITY CONSIDERATIONS
\&.\e\(dq Not used in OpenBSD.
.Ed
.Pp
The sections in an
.Nm
document are conventionally ordered as they appear above.
Sections should be composed as follows:
.Bl -ohang -offset Ds
.It Em NAME
The name(s) and a one line description of the documented material.
The syntax for this as follows:
.Bd -literal -offset indent
\&.Nm name0 ,
\&.Nm name1 ,
\&.Nm name2
\&.Nd a one line description
.Ed
.Pp
Multiple
.Sq \&Nm
names should be separated by commas.
.Pp
The
.Sx \&Nm
macro(s) must precede the
.Sx \&Nd
macro.
.Pp
See
.Sx \&Nm
and
.Sx \&Nd .
.It Em LIBRARY
The name of the library containing the documented material, which is
assumed to be a function in a section 2, 3, or 9 manual.
The syntax for this is as follows:
.Bd -literal -offset indent
\&.Lb libarm
.Ed
.Pp
See
.Sx \&Lb .
.It Em SYNOPSIS
Documents the utility invocation syntax, function call syntax, or device
configuration.
.Pp
For the first, utilities (sections 1, 6, and 8), this is
generally structured as follows:
.Bd -literal -offset indent
\&.Nm bar
\&.Op Fl v
\&.Op Fl o Ar file
\&.Op Ar
\&.Nm foo
\&.Op Fl v
\&.Op Fl o Ar file
\&.Op Ar
.Ed
.Pp
Commands should be ordered alphabetically.
.Pp
For the second, function calls (sections 2, 3, 9):
.Bd -literal -offset indent
\&.In header.h
\&.Vt extern const char *global;
\&.Ft "char *"
\&.Fn foo "const char *src"
\&.Ft "char *"
\&.Fn bar "const char *src"
.Ed
.Pp
Ordering of
.Sx \&In ,
.Sx \&Vt ,
.Sx \&Fn ,
and
.Sx \&Fo
macros should follow C header-file conventions.
.Pp
And for the third, configurations (section 4):
.Bd -literal -offset indent
\&.Cd \(dqit* at isa? port 0x2e\(dq
\&.Cd \(dqit* at isa? port 0x4e\(dq
.Ed
.Pp
Manuals not in these sections generally don't need a
.Em SYNOPSIS .
.Pp
Some macros are displayed differently in the
.Em SYNOPSIS
section, particularly
.Sx \&Nm ,
.Sx \&Cd ,
.Sx \&Fd ,
.Sx \&Fn ,
.Sx \&Fo ,
.Sx \&In ,
.Sx \&Vt ,
and
.Sx \&Ft .
All of these macros are output on their own line.
If two such dissimilar macros are pairwise invoked (except for
.Sx \&Ft
before
.Sx \&Fo
or
.Sx \&Fn ) ,
they are separated by a vertical space, unless in the case of
.Sx \&Fo ,
.Sx \&Fn ,
and
.Sx \&Ft ,
which are always separated by vertical space.
.Pp
When text and macros following an
.Sx \&Nm
macro starting an input line span multiple output lines,
all output lines but the first will be indented to align
with the text immediately following the
.Sx \&Nm
macro, up to the next
.Sx \&Nm ,
.Sx \&Sh ,
or
.Sx \&Ss
macro or the end of an enclosing block, whichever comes first.
.It Em DESCRIPTION
This begins with an expansion of the brief, one line description in
.Em NAME :
.Bd -literal -offset indent
The
\&.Nm
utility does this, that, and the other.
.Ed
.Pp
It usually follows with a breakdown of the options (if documenting a
command), such as:
.Bd -literal -offset indent
The arguments are as follows:
\&.Bl \-tag \-width Ds
\&.It Fl v
Print verbose information.
\&.El
.Ed
.Pp
List the options in alphabetical order,
uppercase before lowercase for each letter and
with no regard to whether an option takes an argument.
Put digits in ascending order before all letter options.
.Pp
Manuals not documenting a command won't include the above fragment.
.Pp
Since the
.Em DESCRIPTION
section usually contains most of the text of a manual, longer manuals
often use the
.Sx \&Ss
macro to form subsections.
In very long manuals, the
.Em DESCRIPTION
may be split into multiple sections, each started by an
.Sx \&Sh
macro followed by a non-standard section name, and each having
several subsections, like in the present
.Nm
manual.
.It Em CONTEXT
This section lists the contexts in which functions can be called in section 9.
The contexts are autoconf, process, or interrupt.
.It Em IMPLEMENTATION NOTES
Implementation-specific notes should be kept here.
This is useful when implementing standard functions that may have side
effects or notable algorithmic implications.
.It Em RETURN VALUES
This section documents the
return values of functions in sections 2, 3, and 9.
.Pp
See
.Sx \&Rv .
.It Em ENVIRONMENT
Lists the environment variables used by the utility,
and explains the syntax and semantics of their values.
The
.Xr environ 7
manual provides examples of typical content and formatting.
.Pp
See
.Sx \&Ev .
.It Em FILES
Documents files used.
It's helpful to document both the file name and a short description of how
the file is used (created, modified, etc.).
.Pp
See
.Sx \&Pa .
.It Em EXIT STATUS
This section documents the
command exit status for section 1, 6, and 8 utilities.
Historically, this information was described in
.Em DIAGNOSTICS ,
a practise that is now discouraged.
.Pp
See
.Sx \&Ex .
.It Em EXAMPLES
Example usages.
This often contains snippets of well-formed, well-tested invocations.
Make sure that examples work properly!
.It Em DIAGNOSTICS
Documents error messages.
In section 4 and 9 manuals, these are usually messages printed by the
kernel to the console and to the kernel log.
In section 1, 6, 7, and 8, these are usually messages printed by
userland programs to the standard error output.
.Pp
Historically, this section was used in place of
.Em EXIT STATUS
for manuals in sections 1, 6, and 8; however, this practise is
discouraged.
.Pp
See
.Sx \&Bl
.Fl diag .
.It Em ERRORS
Documents
.Xr errno 2
settings in sections 2, 3, 4, and 9.
.Pp
See
.Sx \&Er .
.It Em SEE ALSO
References other manuals with related topics.
This section should exist for most manuals.
Cross-references should conventionally be ordered first by section, then
alphabetically (ignoring case).
.Pp
References to other documentation concerning the topic of the manual page,
for example authoritative books or journal articles, may also be
provided in this section.
.Pp
See
.Sx \&Rs
and
.Sx \&Xr .
.It Em STANDARDS
References any standards implemented or used.
If not adhering to any standards, the
.Em HISTORY
section should be used instead.
.Pp
See
.Sx \&St .
.It Em HISTORY
A brief history of the subject, including where it was first implemented,
and when it was ported to or reimplemented for the operating system at hand.
.It Em AUTHORS
Credits to the person or persons who wrote the code and/or documentation.
Authors should generally be noted by both name and email address.
.Pp
See
.Sx \&An .
.It Em CAVEATS
Common misuses and misunderstandings should be explained
in this section.
.It Em BUGS
Known bugs, limitations, and work-arounds should be described
in this section.
.It Em SECURITY CONSIDERATIONS
Documents any security precautions that operators should consider.
.El
.Sh MACRO OVERVIEW
This overview is sorted such that macros of similar purpose are listed
together, to help find the best macro for any given purpose.
Deprecated macros are not included in the overview, but can be found below
in the alphabetical
.Sx MACRO REFERENCE .
.Ss Document preamble and NAME section macros
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Dd Ta document date: Cm $\&Mdocdate$ | Ar month day , year
.It Sx \&Dt Ta document title: Ar TITLE section Op Ar arch
.It Sx \&Os Ta operating system version: Op Ar system Op Ar version
.It Sx \&Nm Ta document name (one argument)
.It Sx \&Nd Ta document description (one line)
.El
.Ss Sections and cross references
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Sh Ta section header (one line)
.It Sx \&Ss Ta subsection header (one line)
.It Sx \&Sx Ta internal cross reference to a section or subsection
.It Sx \&Xr Ta cross reference to another manual page: Ar name section
.It Sx \&Pp , \&Lp Ta start a text paragraph (no arguments)
.El
.Ss Displays and lists
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Bd , \&Ed Ta display block:
.Fl Ar type
.Op Fl offset Ar width
.Op Fl compact
.It Sx \&D1 Ta indented display (one line)
.It Sx \&Dl Ta indented literal display (one line)
.It Sx \&Ql Ta in-line literal display: Ql text
.It Sx \&Bl , \&El Ta list block:
.Fl Ar type
.Op Fl width Ar val
.Op Fl offset Ar val
.Op Fl compact
.It Sx \&It Ta list item (syntax depends on Fl Ar type )
.It Sx \&Ta Ta table cell separator in Sx \&Bl Fl column No lists
.It Sx \&Rs , \&%* , \&Re Ta bibliographic block (references)
.El
.Ss Spacing control
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Pf Ta prefix, no following horizontal space (one argument)
.It Sx \&Ns Ta roman font, no preceding horizontal space (no arguments)
.It Sx \&Ap Ta apostrophe without surrounding whitespace (no arguments)
.It Sx \&Sm Ta switch horizontal spacing mode: Op Cm on | off
.It Sx \&Bk , \&Ek Ta keep block: Fl words
.It Sx \&br Ta force output line break in text mode (no arguments)
.It Sx \&sp Ta force vertical space: Op Ar height
.El
.Ss Semantic markup for command line utilities:
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Nm Ta start a SYNOPSIS block with the name of a utility
.It Sx \&Fl Ta command line options (flags) (>=0 arguments)
.It Sx \&Cm Ta command modifier (>0 arguments)
.It Sx \&Ar Ta command arguments (>=0 arguments)
.It Sx \&Op , \&Oo , \&Oc Ta optional syntax elements (enclosure)
.It Sx \&Ic Ta internal or interactive command (>0 arguments)
.It Sx \&Ev Ta environmental variable (>0 arguments)
.It Sx \&Pa Ta file system path (>=0 arguments)
.El
.Ss Semantic markup for function libraries:
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Lb Ta function library (one argument)
.It Sx \&In Ta include file (one argument)
.It Sx \&Fd Ta other preprocessor directive (>0 arguments)
.It Sx \&Ft Ta function type (>0 arguments)
.It Sx \&Fo , \&Fc Ta function block: Ar funcname
.It Sx \&Fn Ta function name:
.Op Ar functype
.Ar funcname
.Oo
.Op Ar argtype
.Ar argname
.Oc
.It Sx \&Fa Ta function argument (>0 arguments)
.It Sx \&Vt Ta variable type (>0 arguments)
.It Sx \&Va Ta variable name (>0 arguments)
.It Sx \&Dv Ta defined variable or preprocessor constant (>0 arguments)
.It Sx \&Er Ta error constant (>0 arguments)
.It Sx \&Ev Ta environmental variable (>0 arguments)
.El
.Ss Various semantic markup:
.Bl -column "Brq, Bro, Brc" description
.It Sx \&An Ta author name (>0 arguments)
.It Sx \&Lk Ta hyperlink: Ar uri Op Ar name
.It Sx \&Mt Ta Do mailto Dc hyperlink: Ar address
.It Sx \&Cd Ta kernel configuration declaration (>0 arguments)
.It Sx \&Ad Ta memory address (>0 arguments)
.It Sx \&Ms Ta mathematical symbol (>0 arguments)
.El
.Ss Physical markup
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Em Ta italic font or underline (emphasis) (>0 arguments)
.It Sx \&Sy Ta boldface font (symbolic) (>0 arguments)
.It Sx \&Li Ta typewriter font (literal) (>0 arguments)
.It Sx \&No Ta return to roman font (normal) (no arguments)
.It Sx \&Bf , \&Ef Ta font block:
.Op Fl Ar type | Cm \&Em | \&Li | \&Sy
.El
.Ss Physical enclosures
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Dq , \&Do , \&Dc Ta enclose in typographic double quotes: Dq text
.It Sx \&Qq , \&Qo , \&Qc Ta enclose in typewriter double quotes: Qq text
.It Sx \&Sq , \&So , \&Sc Ta enclose in single quotes: Sq text
.It Sx \&Pq , \&Po , \&Pc Ta enclose in parentheses: Pq text
.It Sx \&Bq , \&Bo , \&Bc Ta enclose in square brackets: Bq text
.It Sx \&Brq , \&Bro , \&Brc Ta enclose in curly braces: Brq text
.It Sx \&Aq , \&Ao , \&Ac Ta enclose in angle brackets: Aq text
.It Sx \&Eo , \&Ec Ta generic enclosure
.El
.Ss Text production
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Ex Fl std Ta standard command exit values: Op Ar utility ...
.It Sx \&Rv Fl std Ta standard function return values: Op Ar function ...
.It Sx \&St Ta reference to a standards document (one argument)
.It Sx \&At Ta At
.It Sx \&Bx Ta Bx
.It Sx \&Bsx Ta Bsx
.It Sx \&Nx Ta Nx
.It Sx \&Fx Ta Fx
.It Sx \&Ox Ta Ox
.It Sx \&Dx Ta Dx
.El
.Sh MACRO REFERENCE
This section is a canonical reference of all macros, arranged
alphabetically.
For the scoping of individual macros, see
.Sx MACRO SYNTAX .
.Ss \&%A
Author name of an
.Sx \&Rs
block.
Multiple authors should each be accorded their own
.Sx \%%A
line.
Author names should be ordered with full or abbreviated forename(s)
first, then full surname.
.Ss \&%B
Book title of an
.Sx \&Rs
block.
This macro may also be used in a non-bibliographic context when
referring to book titles.
.Ss \&%C
Publication city or location of an
.Sx \&Rs
block.
.Ss \&%D
Publication date of an
.Sx \&Rs
block.
Recommended formats of arguments are
.Ar month day , year
or just
.Ar year .
.Ss \&%I
Publisher or issuer name of an
.Sx \&Rs
block.
.Ss \&%J
Journal name of an
.Sx \&Rs
block.
.Ss \&%N
Issue number (usually for journals) of an
.Sx \&Rs
block.
.Ss \&%O
Optional information of an
.Sx \&Rs
block.
.Ss \&%P
Book or journal page number of an
.Sx \&Rs
block.
.Ss \&%Q
Institutional author (school, government, etc.) of an
.Sx \&Rs
block.
Multiple institutional authors should each be accorded their own
.Sx \&%Q
line.
.Ss \&%R
Technical report name of an
.Sx \&Rs
block.
.Ss \&%T
Article title of an
.Sx \&Rs
block.
This macro may also be used in a non-bibliographical context when
referring to article titles.
.Ss \&%U
URI of reference document.
.Ss \&%V
Volume number of an
.Sx \&Rs
block.
.Ss \&Ac
Close an
.Sx \&Ao
block.
Does not have any tail arguments.
.Ss \&Ad
Memory address.
Do not use this for postal addresses.
.Pp
Examples:
.Dl \&.Ad [0,$]
.Dl \&.Ad 0x00000000
.Ss \&An
Author name.
Can be used both for the authors of the program, function, or driver
documented in the manual, or for the authors of the manual itself.
Requires either the name of an author or one of the following arguments:
.Pp
.Bl -tag -width "-nosplitX" -offset indent -compact
.It Fl split
Start a new output line before each subsequent invocation of
.Sx \&An .
.It Fl nosplit
The opposite of
.Fl split .
.El
.Pp
The default is
.Fl nosplit .
The effect of selecting either of the
.Fl split
modes ends at the beginning of the
.Em AUTHORS
section.
In the
.Em AUTHORS
section, the default is
.Fl nosplit
for the first author listing and
.Fl split
for all other author listings.
.Pp
Examples:
.Dl \&.An -nosplit
.Dl \&.An Kristaps Dzonsons \&Aq \&Mt kristaps@@bsd.lv
.Ss \&Ao
Begin a block enclosed by angle brackets.
Does not have any head arguments.
.Pp
Examples:
.Dl \&.Fl -key= \&Ns \&Ao \&Ar val \&Ac
.Pp
See also
.Sx \&Aq .
.Ss \&Ap
Inserts an apostrophe without any surrounding whitespace.
This is generally used as a grammatical device when referring to the verb
form of a function.
.Pp
Examples:
.Dl \&.Fn execve \&Ap d
.Ss \&Aq
Encloses its arguments in angle brackets.
.Pp
Examples:
.Dl \&.Fl -key= \&Ns \&Aq \&Ar val
.Pp
.Em Remarks :
this macro is often abused for rendering URIs, which should instead use
.Sx \&Lk
or
.Sx \&Mt ,
or to note pre-processor
.Dq Li #include
statements, which should use
.Sx \&In .
.Pp
See also
.Sx \&Ao .
.Ss \&Ar
Command arguments.
If an argument is not provided, the string
.Dq file ...\&
is used as a default.
.Pp
Examples:
.Dl ".Fl o Ar file"
.Dl ".Ar"
.Dl ".Ar arg1 , arg2 ."
.Pp
The arguments to the
.Sx \&Ar
macro are names and placeholders for command arguments;
for fixed strings to be passed verbatim as arguments, use
.Sx \&Fl
or
.Sx \&Cm .
.Ss \&At
Formats an
.At
version.
Accepts one optional argument:
.Pp
.Bl -tag -width "v[1-7] | 32vX" -offset indent -compact
.It Cm v[1-7] | 32v
A version of
.At .
.It Cm III
.At III .
.It Cm V[.[1-4]]?
A version of
.At V .
.El
.Pp
Note that these arguments do not begin with a hyphen.
.Pp
Examples:
.Dl \&.At
.Dl \&.At III
.Dl \&.At V.1
.Pp
See also
.Sx \&Bsx ,
.Sx \&Bx ,
.Sx \&Dx ,
.Sx \&Fx ,
.Sx \&Nx ,
and
.Sx \&Ox .
.Ss \&Bc
Close a
.Sx \&Bo
block.
Does not have any tail arguments.
.Ss \&Bd
Begin a display block.
Its syntax is as follows:
.Bd -ragged -offset indent
.Pf \. Sx \&Bd
.Fl Ns Ar type
.Op Fl offset Ar width
.Op Fl compact
.Ed
.Pp
Display blocks are used to select a different indentation and
justification than the one used by the surrounding text.
They may contain both macro lines and text lines.
By default, a display block is preceded by a vertical space.
.Pp
The
.Ar type
must be one of the following:
.Bl -tag -width 13n -offset indent
.It Fl centered
Produce one output line from each input line, and center-justify each line.
Using this display type is not recommended; many
.Nm
implementations render it poorly.
.It Fl filled
Change the positions of line breaks to fill each line, and left- and
right-justify the resulting block.
.It Fl literal
Produce one output line from each input line,
and do not justify the block at all.
Preserve white space as it appears in the input.
Always use a constant-width font.
Use this for displaying source code.
.It Fl ragged
Change the positions of line breaks to fill each line, and left-justify
the resulting block.
.It Fl unfilled
The same as
.Fl literal ,
but using the same font as for normal text, which is a variable width font
if supported by the output device.
.El
.Pp
The
.Ar type
must be provided first.
Additional arguments may follow:
.Bl -tag -width 13n -offset indent
.It Fl offset Ar width
Indent the display by the
.Ar width ,
which may be one of the following:
.Bl -item
.It
One of the pre-defined strings
.Cm indent ,
the width of a standard indentation (six constant width characters);
.Cm indent-two ,
twice
.Cm indent ;
.Cm left ,
which has no effect;
.Cm right ,
which justifies to the right margin; or
.Cm center ,
which aligns around an imagined center axis.
.It
A macro invocation, which selects a predefined width
associated with that macro.
The most popular is the imaginary macro
.Ar \&Ds ,
which resolves to
.Sy 6n .
.It
A scaling width as described in
.Xr roff 7 .
.It
An arbitrary string, which indents by the length of this string.
.El
.Pp
When the argument is missing,
.Fl offset
is ignored.
.It Fl compact
Do not assert vertical space before the display.
.El
.Pp
Examples:
.Bd -literal -offset indent
\&.Bd \-literal \-offset indent \-compact
   Hello       world.
\&.Ed
.Ed
.Pp
See also
.Sx \&D1
and
.Sx \&Dl .
.Ss \&Bf
Change the font mode for a scoped block of text.
Its syntax is as follows:
.Bd -ragged -offset indent
.Pf \. Sx \&Bf
.Oo
.Fl emphasis | literal | symbolic |
.Cm \&Em | \&Li | \&Sy
.Oc
.Ed
.Pp
The
.Fl emphasis
and
.Cm \&Em
argument are equivalent, as are
.Fl symbolic
and
.Cm \&Sy ,
and
.Fl literal
and
.Cm \&Li .
Without an argument, this macro does nothing.
The font mode continues until broken by a new font mode in a nested
scope or
.Sx \&Ef
is encountered.
.Pp
See also
.Sx \&Li ,
.Sx \&Ef ,
.Sx \&Em ,
and
.Sx \&Sy .
.Ss \&Bk
For each macro, keep its output together on the same output line,
until the end of the macro or the end of the input line is reached,
whichever comes first.
Line breaks in text lines are unaffected.
The syntax is as follows:
.Pp
.D1 Pf \. Sx \&Bk Fl words
.Pp
The
.Fl words
argument is required; additional arguments are ignored.
.Pp
The following example will not break within each
.Sx \&Op
macro line:
.Bd -literal -offset indent
\&.Bk \-words
\&.Op Fl f Ar flags
\&.Op Fl o Ar output
\&.Ek
.Ed
.Pp
Be careful in using over-long lines within a keep block!
Doing so will clobber the right margin.
.Ss \&Bl
Begin a list.
Lists consist of items specified using the
.Sx \&It
macro, containing a head or a body or both.
The list syntax is as follows:
.Bd -ragged -offset indent
.Pf \. Sx \&Bl
.Fl Ns Ar type
.Op Fl width Ar val
.Op Fl offset Ar val
.Op Fl compact
.Op HEAD ...
.Ed
.Pp
The list
.Ar type
is mandatory and must be specified first.
The
.Fl width
and
.Fl offset
arguments accept macro names as described for
.Sx \&Bd
.Fl offset ,
scaling widths as described in
.Xr roff 7 ,
or use the length of the given string.
The
.Fl offset
is a global indentation for the whole list, affecting both item heads
and bodies.
For those list types supporting it, the
.Fl width
argument requests an additional indentation of item bodies,
to be added to the
.Fl offset .
Unless the
.Fl compact
argument is specified, list entries are separated by vertical space.
.Pp
A list must specify one of the following list types:
.Bl -tag -width 12n -offset indent
.It Fl bullet
No item heads can be specified, but a bullet will be printed at the head
of each item.
Item bodies start on the same output line as the bullet
and are indented according to the
.Fl width
argument.
.It Fl column
A columnated list.
The
.Fl width
argument has no effect; instead, each argument specifies the width
of one column, using either the scaling width syntax described in
.Xr roff 7
or the string length of the argument.
If the first line of the body of a
.Fl column
list is not an
.Sx \&It
macro line,
.Sx \&It
contexts spanning one input line each are implied until an
.Sx \&It
macro line is encountered, at which point items start being interpreted as
described in the
.Sx \&It
documentation.
.It Fl dash
Like
.Fl bullet ,
except that dashes are used in place of bullets.
.It Fl diag
Like
.Fl inset ,
except that item heads are not parsed for macro invocations.
Most often used in the
.Em DIAGNOSTICS
section with error constants in the item heads.
.It Fl enum
A numbered list.
No item heads can be specified.
Formatted like
.Fl bullet ,
except that cardinal numbers are used in place of bullets,
starting at 1.
.It Fl hang
Like
.Fl tag ,
except that the first lines of item bodies are not indented, but follow
the item heads like in
.Fl inset
lists.
.It Fl hyphen
Synonym for
.Fl dash .
.It Fl inset
Item bodies follow items heads on the same line, using normal inter-word
spacing.
Bodies are not indented, and the
.Fl width
argument is ignored.
.It Fl item
No item heads can be specified, and none are printed.
Bodies are not indented, and the
.Fl width
argument is ignored.
.It Fl ohang
Item bodies start on the line following item heads and are not indented.
The
.Fl width
argument is ignored.
.It Fl tag
Item bodies are indented according to the
.Fl width
argument.
When an item head fits inside the indentation, the item body follows
this head on the same output line.
Otherwise, the body starts on the output line following the head.
.El
.Pp
Lists may be nested within lists and displays.
Nesting of
.Fl column
and
.Fl enum
lists may not be portable.
.Pp
See also
.Sx \&El
and
.Sx \&It .
.Ss \&Bo
Begin a block enclosed by square brackets.
Does not have any head arguments.
.Pp
Examples:
.Bd -literal -offset indent -compact
\&.Bo 1 ,
\&.Dv BUFSIZ \&Bc
.Ed
.Pp
See also
.Sx \&Bq .
.Ss \&Bq
Encloses its arguments in square brackets.
.Pp
Examples:
.Dl \&.Bq 1 , \&Dv BUFSIZ
.Pp
.Em Remarks :
this macro is sometimes abused to emulate optional arguments for
commands; the correct macros to use for this purpose are
.Sx \&Op ,
.Sx \&Oo ,
and
.Sx \&Oc .
.Pp
See also
.Sx \&Bo .
.Ss \&Brc
Close a
.Sx \&Bro
block.
Does not have any tail arguments.
.Ss \&Bro
Begin a block enclosed by curly braces.
Does not have any head arguments.
.Pp
Examples:
.Bd -literal -offset indent -compact
\&.Bro 1 , ... ,
\&.Va n \&Brc
.Ed
.Pp
See also
.Sx \&Brq .
.Ss \&Brq
Encloses its arguments in curly braces.
.Pp
Examples:
.Dl \&.Brq 1 , ... , \&Va n
.Pp
See also
.Sx \&Bro .
.Ss \&Bsx
Format the
.Bsx
version provided as an argument, or a default value if
no argument is provided.
.Pp
Examples:
.Dl \&.Bsx 1.0
.Dl \&.Bsx
.Pp
See also
.Sx \&At ,
.Sx \&Bx ,
.Sx \&Dx ,
.Sx \&Fx ,
.Sx \&Nx ,
and
.Sx \&Ox .
.Ss \&Bt
Supported only for compatibility, do not use this in new manuals.
Prints
.Dq is currently in beta test.
.Ss \&Bx
Format the
.Bx
version provided as an argument, or a default value if no
argument is provided.
.Pp
Examples:
.Dl \&.Bx 4.3 Tahoe
.Dl \&.Bx 4.4
.Dl \&.Bx
.Pp
See also
.Sx \&At ,
.Sx \&Bsx ,
.Sx \&Dx ,
.Sx \&Fx ,
.Sx \&Nx ,
and
.Sx \&Ox .
.Ss \&Cd
Kernel configuration declaration.
This denotes strings accepted by
.Xr config 8 .
It is most often used in section 4 manual pages.
.Pp
Examples:
.Dl \&.Cd device le0 at scode?
.Pp
.Em Remarks :
this macro is commonly abused by using quoted literals to retain
whitespace and align consecutive
.Sx \&Cd
declarations.
This practise is discouraged.
.Ss \&Cm
Command modifiers.
Typically used for fixed strings passed as arguments, unless
.Sx \&Fl
is more appropriate.
Also useful when specifying configuration options or keys.
.Pp
Examples:
.Dl ".Nm mt Fl f Ar device Cm rewind"
.Dl ".Nm ps Fl o Cm pid , Ns Cm command"
.Dl ".Nm dd Cm if= Ns Ar file1 Cm of= Ns Ar file2"
.Dl ".Cm IdentityFile Pa ~/.ssh/id_rsa"
.Dl ".Cm LogLevel Dv DEBUG"
.Ss \&D1
One-line indented display.
This is formatted by the default rules and is useful for simple indented
statements.
It is followed by a newline.
.Pp
Examples:
.Dl \&.D1 \&Fl abcdefgh
.Pp
See also
.Sx \&Bd
and
.Sx \&Dl .
.Ss \&Db
This macro is obsolete.
No replacement is needed.
It is ignored by
.Xr mandoc 1
and groff including its arguments.
It was formerly used to toggle a debugging mode.
.Ss \&Dc
Close a
.Sx \&Do
block.
Does not have any tail arguments.
.Ss \&Dd
Document date for display in the page footer.
This is the mandatory first macro of any
.Nm
manual.
Its syntax is as follows:
.Pp
.D1 Pf \. Sx \&Dd Ar month day , year
.Pp
The
.Ar month
is the full English month name, the
.Ar day
is an optionally zero-padded numeral, and the
.Ar year
is the full four-digit year.
.Pp
Other arguments are not portable; the
.Xr mandoc 1
utility handles them as follows:
.Bl -dash -offset 3n -compact
.It
To have the date automatically filled in by the
.Ox
version of
.Xr cvs 1 ,
the special string
.Dq $\&Mdocdate$
can be given as an argument.
.It
The traditional, purely numeric
.Xr man 7
format
.Ar year Ns \(en Ns Ar month Ns \(en Ns Ar day
is accepted, too.
.It
If a date string cannot be parsed, it is used verbatim.
.It
If no date string is given, the current date is used.
.El
.Pp
Examples:
.Dl \&.Dd $\&Mdocdate$
.Dl \&.Dd $\&Mdocdate: July 21 2007$
.Dl \&.Dd July 21, 2007
.Pp
See also
.Sx \&Dt
and
.Sx \&Os .
.Ss \&Dl
One-line indented display.
This is formatted as literal text and is useful for commands and
invocations.
It is followed by a newline.
.Pp
Examples:
.Dl \&.Dl % mandoc mdoc.7 \e(ba less
.Pp
See also
.Sx \&Ql ,
.Sx \&Bd
.Fl literal ,
and
.Sx \&D1 .
.Ss \&Do
Begin a block enclosed by double quotes.
Does not have any head arguments.
.Pp
Examples:
.Bd -literal -offset indent -compact
\&.Do
April is the cruellest month
\&.Dc
\e(em T.S. Eliot
.Ed
.Pp
See also
.Sx \&Dq .
.Ss \&Dq
Encloses its arguments in
.Dq typographic
double-quotes.
.Pp
Examples:
.Bd -literal -offset indent -compact
\&.Dq April is the cruellest month
\e(em T.S. Eliot
.Ed
.Pp
See also
.Sx \&Qq ,
.Sx \&Sq ,
and
.Sx \&Do .
.Ss \&Dt
Document title for display in the page header.
This is the mandatory second macro of any
.Nm
file.
Its syntax is as follows:
.Bd -ragged -offset indent
.Pf \. Sx \&Dt
.Ar TITLE
.Ar section
.Op Ar arch
.Ed
.Pp
Its arguments are as follows:
.Bl -tag -width section -offset 2n
.It Ar TITLE
The document's title (name), defaulting to
.Dq UNTITLED
if unspecified.
To achieve a uniform appearance of page header lines,
it should by convention be all caps.
.It Ar section
The manual section.
This may be one of
.Cm 1
.Pq General Commands ,
.Cm 2
.Pq System Calls ,
.Cm 3
.Pq Library Functions ,
.Cm 3p
.Pq Perl Library ,
.Cm 4
.Pq Device Drivers ,
.Cm 5
.Pq File Formats ,
.Cm 6
.Pq Games ,
.Cm 7
.Pq Miscellaneous Information ,
.Cm 8
.Pq System Manager's Manual ,
or
.Cm 9
.Pq Kernel Developer's Manual .
It should correspond to the manual's filename suffix and defaults to
the empty string if unspecified.
.It Ar arch
This specifies the machine architecture a manual page applies to,
where relevant, for example
.Cm alpha ,
.Cm amd64 ,
.Cm i386 ,
or
.Cm sparc64 .
The list of valid architectures varies by operating system.
.El
.Pp
Examples:
.Dl \&.Dt FOO 1
.Dl \&.Dt FOO 9 i386
.Pp
See also
.Sx \&Dd
and
.Sx \&Os .
.Ss \&Dv
Defined variables such as preprocessor constants, constant symbols,
enumeration values, and so on.
.Pp
Examples:
.Dl \&.Dv NULL
.Dl \&.Dv BUFSIZ
.Dl \&.Dv STDOUT_FILENO
.Pp
See also
.Sx \&Er
and
.Sx \&Ev
for special-purpose constants,
.Sx \&Va
for variable symbols, and
.Sx \&Fd
for listing preprocessor variable definitions in the
.Em SYNOPSIS .
.Ss \&Dx
Format the
.Dx
version provided as an argument, or a default
value if no argument is provided.
.Pp
Examples:
.Dl \&.Dx 2.4.1
.Dl \&.Dx
.Pp
See also
.Sx \&At ,
.Sx \&Bsx ,
.Sx \&Bx ,
.Sx \&Fx ,
.Sx \&Nx ,
and
.Sx \&Ox .
.Ss \&Ec
Close a scope started by
.Sx \&Eo .
Its syntax is as follows:
.Pp
.D1 Pf \. Sx \&Ec Op Ar TERM
.Pp
The
.Ar TERM
argument is used as the enclosure tail, for example, specifying \e(rq
will emulate
.Sx \&Dc .
.Ss \&Ed
End a display context started by
.Sx \&Bd .
.Ss \&Ef
End a font mode context started by
.Sx \&Bf .
.Ss \&Ek
End a keep context started by
.Sx \&Bk .
.Ss \&El
End a list context started by
.Sx \&Bl .
.Pp
See also
.Sx \&Bl
and
.Sx \&It .
.Ss \&Em
Request an italic font.
If the output device does not provide that, underline.
.Pp
This is most often used for stress emphasis (not to be confused with
importance, see
.Sx \&Sy ) .
In the rare cases where none of the semantic markup macros fit,
it can also be used for technical terms and placeholders, except
that for syntax elements,
.Sx \&Sy
and
.Sx \&Ar
are preferred, respectively.
.Pp
Examples:
.Bd -literal -compact -offset indent
Selected lines are those
\&.Em not
matching any of the specified patterns.
Some of the functions use a
\&.Em hold space
to save the pattern space for subsequent retrieval.
.Ed
.Pp
See also
.Sx \&Bf ,
.Sx \&Li ,
.Sx \&No ,
and
.Sx \&Sy .
.Ss \&En
This macro is obsolete.
Use
.Sx \&Eo
or any of the other enclosure macros.
.Pp
It encloses its argument in the delimiters specified by the last
.Sx \&Es
macro.
.Ss \&Eo
An arbitrary enclosure.
Its syntax is as follows:
.Pp
.D1 Pf \. Sx \&Eo Op Ar TERM
.Pp
The
.Ar TERM
argument is used as the enclosure head, for example, specifying \e(lq
will emulate
.Sx \&Do .
.Ss \&Er
Error constants for definitions of the
.Va errno
libc global variable.
This is most often used in section 2 and 3 manual pages.
.Pp
Examples:
.Dl \&.Er EPERM
.Dl \&.Er ENOENT
.Pp
See also
.Sx \&Dv
for general constants.
.Ss \&Es
This macro is obsolete.
Use
.Sx \&Eo
or any of the other enclosure macros.
.Pp
It takes two arguments, defining the delimiters to be used by subsequent
.Sx \&En
macros.
.Ss \&Ev
Environmental variables such as those specified in
.Xr environ 7 .
.Pp
Examples:
.Dl \&.Ev DISPLAY
.Dl \&.Ev PATH
.Pp
See also
.Sx \&Dv
for general constants.
.Ss \&Ex
Insert a standard sentence regarding command exit values of 0 on success
and >0 on failure.
This is most often used in section 1, 6, and 8 manual pages.
Its syntax is as follows:
.Pp
.D1 Pf \. Sx \&Ex Fl std Op Ar utility ...
.Pp
If
.Ar utility
is not specified, the document's name set by
.Sx \&Nm
is used.
Multiple
.Ar utility
arguments are treated as separate utilities.
.Pp
See also
.Sx \&Rv .
.Ss \&Fa
Function argument or parameter.
Its syntax is as follows:
.Bd -ragged -offset indent
.Pf \. Sx \&Fa
.Qo
.Op Ar argtype
.Op Ar argname
.Qc Ar \&...
.Ed
.Pp
Each argument may be a name and a type (recommended for the
.Em SYNOPSIS
section), a name alone (for function invocations),
or a type alone (for function prototypes).
If both a type and a name are given or if the type consists of multiple
words, all words belonging to the same function argument have to be
given in a single argument to the
.Sx \&Fa
macro.
.Pp
This macro is also used to specify the field name of a structure.
.Pp
Most often, the
.Sx \&Fa
macro is used in the
.Em SYNOPSIS
within
.Sx \&Fo
blocks when documenting multi-line function prototypes.
If invoked with multiple arguments, the arguments are separated by a
comma.
Furthermore, if the following macro is another
.Sx \&Fa ,
the last argument will also have a trailing comma.
.Pp
Examples:
.Dl \&.Fa \(dqconst char *p\(dq
.Dl \&.Fa \(dqint a\(dq \(dqint b\(dq \(dqint c\(dq
.Dl \&.Fa \(dqchar *\(dq size_t
.Pp
See also
.Sx \&Fo .
.Ss \&Fc
End a function context started by
.Sx \&Fo .
.Ss \&Fd
Preprocessor directive, in particular for listing it in the
.Em SYNOPSIS .
Historically, it was also used to document include files.
The latter usage has been deprecated in favour of
.Sx \&In .
.Pp
Its syntax is as follows:
.Bd -ragged -offset indent
.Pf \. Sx \&Fd
.Li # Ns Ar directive
.Op Ar argument ...
.Ed
.Pp
Examples:
.Dl \&.Fd #define sa_handler __sigaction_u.__sa_handler
.Dl \&.Fd #define SIO_MAXNFDS
.Dl \&.Fd #ifdef FS_DEBUG
.Dl \&.Ft void
.Dl \&.Fn dbg_open \(dqconst char *\(dq
.Dl \&.Fd #endif
.Pp
See also
.Sx MANUAL STRUCTURE ,
.Sx \&In ,
and
.Sx \&Dv .
.Ss \&Fl
Command-line flag or option.
Used when listing arguments to command-line utilities.
Prints a fixed-width hyphen
.Sq \-
directly followed by each argument.
If no arguments are provided, a hyphen is printed followed by a space.
If the argument is a macro, a hyphen is prefixed to the subsequent macro
output.
.Pp
Examples:
.Dl ".Fl R Op Fl H | L | P"
.Dl ".Op Fl 1AaCcdFfgHhikLlmnopqRrSsTtux"
.Dl ".Fl type Cm d Fl name Pa CVS"
.Dl ".Fl Ar signal_number"
.Dl ".Fl o Fl"
.Pp
See also
.Sx \&Cm .
.Ss \&Fn
A function name.
Its syntax is as follows:
.Bd -ragged -offset indent
.Pf . Sx \&Fn
.Op Ar functype
.Ar funcname
.Op Oo Ar argtype Oc Ar argname
.Ed
.Pp
Function arguments are surrounded in parenthesis and
are delimited by commas.
If no arguments are specified, blank parenthesis are output.
In the
.Em SYNOPSIS
section, this macro starts a new output line,
and a blank line is automatically inserted between function definitions.
.Pp
Examples:
.Dl \&.Fn \(dqint funcname\(dq \(dqint arg0\(dq \(dqint arg1\(dq
.Dl \&.Fn funcname \(dqint arg0\(dq
.Dl \&.Fn funcname arg0
.Pp
.Bd -literal -offset indent -compact
\&.Ft functype
\&.Fn funcname
.Ed
.Pp
When referring to a function documented in another manual page, use
.Sx \&Xr
instead.
See also
.Sx MANUAL STRUCTURE ,
.Sx \&Fo ,
and
.Sx \&Ft .
.Ss \&Fo
Begin a function block.
This is a multi-line version of
.Sx \&Fn .
Its syntax is as follows:
.Pp
.D1 Pf \. Sx \&Fo Ar funcname
.Pp
Invocations usually occur in the following context:
.Bd -ragged -offset indent
.Pf \. Sx \&Ft Ar functype
.br
.Pf \. Sx \&Fo Ar funcname
.br
.Pf \. Sx \&Fa Qq Ar argtype Ar argname
.br
\&.\.\.
.br
.Pf \. Sx \&Fc
.Ed
.Pp
A
.Sx \&Fo
scope is closed by
.Sx \&Fc .
.Pp
See also
.Sx MANUAL STRUCTURE ,
.Sx \&Fa ,
.Sx \&Fc ,
and
.Sx \&Ft .
.Ss \&Fr
This macro is obsolete.
No replacement markup is needed.
.Pp
It was used to show numerical function return values in an italic font.
.Ss \&Ft
A function type.
Its syntax is as follows:
.Pp
.D1 Pf \. Sx \&Ft Ar functype
.Pp
In the
.Em SYNOPSIS
section, a new output line is started after this macro.
.Pp
Examples:
.Dl \&.Ft int
.Bd -literal -offset indent -compact
\&.Ft functype
\&.Fn funcname
.Ed
.Pp
See also
.Sx MANUAL STRUCTURE ,
.Sx \&Fn ,
and
.Sx \&Fo .
.Ss \&Fx
Format the
.Fx
version provided as an argument, or a default value
if no argument is provided.
.Pp
Examples:
.Dl \&.Fx 7.1
.Dl \&.Fx
.Pp
See also
.Sx \&At ,
.Sx \&Bsx ,
.Sx \&Bx ,
.Sx \&Dx ,
.Sx \&Nx ,
and
.Sx \&Ox .
.Ss \&Hf
This macro is not implemented in
.Xr mandoc 1 .
.Pp
It was used to include the contents of a (header) file literally.
The syntax was:
.Pp
.Dl Pf . Sx \&Hf Ar filename
.Ss \&Ic
Designate an internal or interactive command.
This is similar to
.Sx \&Cm
but used for instructions rather than values.
.Pp
Examples:
.Dl \&.Ic :wq
.Dl \&.Ic hash
.Dl \&.Ic alias
.Pp
Note that using
.Sx \&Bd Fl literal
or
.Sx \&D1
is preferred for displaying code; the
.Sx \&Ic
macro is used when referring to specific instructions.
.Ss \&In
The name of an include file.
This macro is most often used in section 2, 3, and 9 manual pages.
.Pp
When invoked as the first macro on an input line in the
.Em SYNOPSIS
section, the argument is displayed in angle brackets
and preceded by
.Qq #include ,
and a blank line is inserted in front if there is a preceding
function declaration.
In other sections, it only encloses its argument in angle brackets
and causes no line break.
.Pp
Examples:
.Dl \&.In sys/types.h
.Pp
See also
.Sx MANUAL STRUCTURE .
.Ss \&It
A list item.
The syntax of this macro depends on the list type.
.Pp
Lists
of type
.Fl hang ,
.Fl ohang ,
.Fl inset ,
and
.Fl diag
have the following syntax:
.Pp
.D1 Pf \. Sx \&It Ar args
.Pp
Lists of type
.Fl bullet ,
.Fl dash ,
.Fl enum ,
.Fl hyphen
and
.Fl item
have the following syntax:
.Pp
.D1 Pf \. Sx \&It
.Pp
with subsequent lines interpreted within the scope of the
.Sx \&It
until either a closing
.Sx \&El
or another
.Sx \&It .
.Pp
The
.Fl tag
list has the following syntax:
.Pp
.D1 Pf \. Sx \&It Op Cm args
.Pp
Subsequent lines are interpreted as with
.Fl bullet
and family.
The line arguments correspond to the list's left-hand side; body
arguments correspond to the list's contents.
.Pp
The
.Fl column
list is the most complicated.
Its syntax is as follows:
.Pp
.D1 Pf \. Sx \&It Ar cell Op <TAB> Ar cell ...
.D1 Pf \. Sx \&It Ar cell Op Sx \&Ta Ar cell ...
.Pp
The arguments consist of one or more lines of text and macros
representing a complete table line.
Cells within the line are delimited by tabs or by the special
.Sx \&Ta
block macro.
The tab cell delimiter may only be used within the
.Sx \&It
line itself; on following lines, only the
.Sx \&Ta
macro can be used to delimit cells, and
.Sx \&Ta
is only recognised as a macro when called by other macros,
not as the first macro on a line.
.Pp
Note that quoted strings may span tab-delimited cells on an
.Sx \&It
line.
For example,
.Pp
.Dl .It \(dqcol1 ; <TAB> col2 ;\(dq \&;
.Pp
will preserve the semicolon whitespace except for the last.
.Pp
See also
.Sx \&Bl .
.Ss \&Lb
Specify a library.
The syntax is as follows:
.Pp
.D1 Pf \. Sx \&Lb Ar library
.Pp
The
.Ar library
parameter may be a system library, such as
.Cm libz
or
.Cm libpam ,
in which case a small library description is printed next to the linker
invocation; or a custom library, in which case the library name is
printed in quotes.
This is most commonly used in the
.Em SYNOPSIS
section as described in
.Sx MANUAL STRUCTURE .
.Pp
Examples:
.Dl \&.Lb libz
.Dl \&.Lb libmandoc
.Ss \&Li
Denotes text that should be in a
.Li literal
font mode.
Note that this is a presentation term and should not be used for
stylistically decorating technical terms.
.Pp
On terminal output devices, this is often indistinguishable from
normal text.
.Pp
See also
.Sx \&Bf ,
.Sx \&Em ,
.Sx \&No ,
and
.Sx \&Sy .
.Ss \&Lk
Format a hyperlink.
Its syntax is as follows:
.Pp
.D1 Pf \. Sx \&Lk Ar uri Op Ar name
.Pp
Examples:
.Dl \&.Lk http://bsd.lv \(dqThe BSD.lv Project\(dq
.Dl \&.Lk http://bsd.lv
.Pp
See also
.Sx \&Mt .
.Ss \&Lp
Synonym for
.Sx \&Pp .
.Ss \&Ms
Display a mathematical symbol.
Its syntax is as follows:
.Pp
.D1 Pf \. Sx \&Ms Ar symbol
.Pp
Examples:
.Dl \&.Ms sigma
.Dl \&.Ms aleph
.Ss \&Mt
Format a
.Dq mailto:
hyperlink.
Its syntax is as follows:
.Pp
.D1 Pf \. Sx \&Mt Ar address
.Pp
Examples:
.Dl \&.Mt discuss@@manpages.bsd.lv
.Dl \&.An Kristaps Dzonsons \&Aq \&Mt kristaps@@bsd.lv
.Ss \&Nd
A one line description of the manual's content.
This is the mandatory last macro of the
.Em NAME
section and not appropriate for other sections.
.Pp
Examples:
.Dl Pf . Sx \&Nd mdoc language reference
.Dl Pf . Sx \&Nd format and display UNIX manuals
.Pp
The
.Sx \&Nd
macro technically accepts child macros and terminates with a subsequent
.Sx \&Sh
invocation.
Do not assume this behaviour: some
.Xr whatis 1
database generators are not smart enough to parse more than the line
arguments and will display macros verbatim.
.Pp
See also
.Sx \&Nm .
.Ss \&Nm
The name of the manual page, or \(em in particular in section 1, 6,
and 8 pages \(em of an additional command or feature documented in
the manual page.
When first invoked, the
.Sx \&Nm
macro expects a single argument, the name of the manual page.
Usually, the first invocation happens in the
.Em NAME
section of the page.
The specified name will be remembered and used whenever the macro is
called again without arguments later in the page.
The
.Sx \&Nm
macro uses
.Sx Block full-implicit
semantics when invoked as the first macro on an input line in the
.Em SYNOPSIS
section; otherwise, it uses ordinary
.Sx In-line
semantics.
.Pp
Examples:
.Bd -literal -offset indent
\&.Sh SYNOPSIS
\&.Nm cat
\&.Op Fl benstuv
\&.Op Ar
.Ed
.Pp
In the
.Em SYNOPSIS
of section 2, 3 and 9 manual pages, use the
.Sx \&Fn
macro rather than
.Sx \&Nm
to mark up the name of the manual page.
.Ss \&No
Normal text.
Closes the scope of any preceding in-line macro.
When used after physical formatting macros like
.Sx \&Em
or
.Sx \&Sy ,
switches back to the standard font face and weight.
Can also be used to embed plain text strings in macro lines
using semantic annotation macros.
.Pp
Examples:
.Dl ".Em italic , Sy bold , No and roman"
.Pp
.Bd -literal -offset indent -compact
\&.Sm off
\&.Cm :C No / Ar pattern No / Ar replacement No /
\&.Sm on
.Ed
.Pp
See also
.Sx \&Em ,
.Sx \&Li ,
and
.Sx \&Sy .
.Ss \&Ns
Suppress a space between the output of the preceding macro
and the following text or macro.
Following invocation, input is interpreted as normal text
just like after an
.Sx \&No
macro.
.Pp
This has no effect when invoked at the start of a macro line.
.Pp
Examples:
.Dl ".Ar name Ns = Ns Ar value"
.Dl ".Cm :M Ns Ar pattern"
.Dl ".Fl o Ns Ar output"
.Pp
See also
.Sx \&No
and
.Sx \&Sm .
.Ss \&Nx
Format the
.Nx
version provided as an argument, or a default value if
no argument is provided.
.Pp
Examples:
.Dl \&.Nx 5.01
.Dl \&.Nx
.Pp
See also
.Sx \&At ,
.Sx \&Bsx ,
.Sx \&Bx ,
.Sx \&Dx ,
.Sx \&Fx ,
and
.Sx \&Ox .
.Ss \&Oc
Close multi-line
.Sx \&Oo
context.
.Ss \&Oo
Multi-line version of
.Sx \&Op .
.Pp
Examples:
.Bd -literal -offset indent -compact
\&.Oo
\&.Op Fl flag Ns Ar value
\&.Oc
.Ed
.Ss \&Op
Optional part of a command line.
Prints the argument(s) in brackets.
This is most often used in the
.Em SYNOPSIS
section of section 1 and 8 manual pages.
.Pp
Examples:
.Dl \&.Op \&Fl a \&Ar b
.Dl \&.Op \&Ar a | b
.Pp
See also
.Sx \&Oo .
.Ss \&Os
Operating system version for display in the page footer.
This is the mandatory third macro of
any
.Nm
file.
Its syntax is as follows:
.Pp
.D1 Pf \. Sx \&Os Op Ar system Op Ar version
.Pp
The optional
.Ar system
parameter specifies the relevant operating system or environment.
It is suggested to leave it unspecified, in which case
.Xr mandoc 1
uses its
.Fl Ios
argument or, if that isn't specified either,
.Fa sysname
and
.Fa release
as returned by
.Xr uname 3 .
.Pp
Examples:
.Dl \&.Os
.Dl \&.Os KTH/CSC/TCS
.Dl \&.Os BSD 4.3
.Pp
See also
.Sx \&Dd
and
.Sx \&Dt .
.Ss \&Ot
This macro is obsolete.
Use
.Sx \&Ft
instead; with
.Xr mandoc 1 ,
both have the same effect.
.Pp
Historical
.Nm
packages described it as
.Dq "old function type (FORTRAN)" .
.Ss \&Ox
Format the
.Ox
version provided as an argument, or a default value
if no argument is provided.
.Pp
Examples:
.Dl \&.Ox 4.5
.Dl \&.Ox
.Pp
See also
.Sx \&At ,
.Sx \&Bsx ,
.Sx \&Bx ,
.Sx \&Dx ,
.Sx \&Fx ,
and
.Sx \&Nx .
.Ss \&Pa
An absolute or relative file system path, or a file or directory name.
If an argument is not provided, the character
.Sq \(ti
is used as a default.
.Pp
Examples:
.Dl \&.Pa /usr/bin/mandoc
.Dl \&.Pa /usr/share/man/man7/mdoc.7
.Pp
See also
.Sx \&Lk .
.Ss \&Pc
Close parenthesised context opened by
.Sx \&Po .
.Ss \&Pf
Removes the space between its argument and the following macro.
Its syntax is as follows:
.Pp
.D1 .Pf Ar prefix macro arguments ...
.Pp
This is equivalent to:
.Pp
.D1 .No \e& Ns Ar prefix No \&Ns Ar macro arguments ...
.Pp
The
.Ar prefix
argument is not parsed for macro names or delimiters,
but used verbatim as if it were escaped.
.Pp
Examples:
.Dl ".Pf $ Ar variable_name"
.Dl ".Pf . Ar macro_name"
.Dl ".Pf 0x Ar hex_digits"
.Pp
See also
.Sx \&Ns
and
.Sx \&Sm .
.Ss \&Po
Multi-line version of
.Sx \&Pq .
.Ss \&Pp
Break a paragraph.
This will assert vertical space between prior and subsequent macros
and/or text.
.Pp
Paragraph breaks are not needed before or after
.Sx \&Sh
or
.Sx \&Ss
macros or before displays
.Pq Sx \&Bd
or lists
.Pq Sx \&Bl
unless the
.Fl compact
flag is given.
.Ss \&Pq
Parenthesised enclosure.
.Pp
See also
.Sx \&Po .
.Ss \&Qc
Close quoted context opened by
.Sx \&Qo .
.Ss \&Ql
In-line literal display.
This can for example be used for complete command invocations and
for multi-word code fragments when more specific markup is not
appropriate and an indented display is not desired.
While
.Xr mandoc 1
always encloses the arguments in single quotes, other formatters
usually omit the quotes on non-terminal output devices when the
arguments have three or more characters.
.Pp
See also
.Sx \&Dl
and
.Sx \&Bd
.Fl literal .
.Ss \&Qo
Multi-line version of
.Sx \&Qq .
.Ss \&Qq
Encloses its arguments in
.Qq typewriter
double-quotes.
Consider using
.Sx \&Dq .
.Pp
See also
.Sx \&Dq ,
.Sx \&Sq ,
and
.Sx \&Qo .
.Ss \&Re
Close an
.Sx \&Rs
block.
Does not have any tail arguments.
.Ss \&Rs
Begin a bibliographic
.Pq Dq reference
block.
Does not have any head arguments.
The block macro may only contain
.Sx \&%A ,
.Sx \&%B ,
.Sx \&%C ,
.Sx \&%D ,
.Sx \&%I ,
.Sx \&%J ,
.Sx \&%N ,
.Sx \&%O ,
.Sx \&%P ,
.Sx \&%Q ,
.Sx \&%R ,
.Sx \&%T ,
.Sx \&%U ,
and
.Sx \&%V
child macros (at least one must be specified).
.Pp
Examples:
.Bd -literal -offset indent -compact
\&.Rs
\&.%A J. E. Hopcroft
\&.%A J. D. Ullman
\&.%B Introduction to Automata Theory, Languages, and Computation
\&.%I Addison-Wesley
\&.%C Reading, Massachusetts
\&.%D 1979
\&.Re
.Ed
.Pp
If an
.Sx \&Rs
block is used within a SEE ALSO section, a vertical space is asserted
before the rendered output, else the block continues on the current
line.
.Ss \&Rv
Insert a standard sentence regarding a function call's return value of 0
on success and \-1 on error, with the
.Va errno
libc global variable set on error.
Its syntax is as follows:
.Pp
.D1 Pf \. Sx \&Rv Fl std Op Ar function ...
.Pp
If
.Ar function
is not specified, the document's name set by
.Sx \&Nm
is used.
Multiple
.Ar function
arguments are treated as separate functions.
.Pp
See also
.Sx \&Ex .
.Ss \&Sc
Close single-quoted context opened by
.Sx \&So .
.Ss \&Sh
Begin a new section.
For a list of conventional manual sections, see
.Sx MANUAL STRUCTURE .
These sections should be used unless it's absolutely necessary that
custom sections be used.
.Pp
Section names should be unique so that they may be keyed by
.Sx \&Sx .
Although this macro is parsed, it should not consist of child node or it
may not be linked with
.Sx \&Sx .
.Pp
See also
.Sx \&Pp ,
.Sx \&Ss ,
and
.Sx \&Sx .
.Ss \&Sm
Switches the spacing mode for output generated from macros.
Its syntax is as follows:
.Pp
.D1 Pf \. Sx \&Sm Op Cm on | off
.Pp
By default, spacing is
.Cm on .
When switched
.Cm off ,
no white space is inserted between macro arguments and between the
output generated from adjacent macros, but text lines
still get normal spacing between words and sentences.
.Pp
When called without an argument, the
.Sx \&Sm
macro toggles the spacing mode.
Using this is not recommended because it makes the code harder to read.
.Ss \&So
Multi-line version of
.Sx \&Sq .
.Ss \&Sq
Encloses its arguments in
.Sq typewriter
single-quotes.
.Pp
See also
.Sx \&Dq ,
.Sx \&Qq ,
and
.Sx \&So .
.Ss \&Ss
Begin a new subsection.
Unlike with
.Sx \&Sh ,
there is no convention for the naming of subsections.
Except
.Em DESCRIPTION ,
the conventional sections described in
.Sx MANUAL STRUCTURE
rarely have subsections.
.Pp
Sub-section names should be unique so that they may be keyed by
.Sx \&Sx .
Although this macro is parsed, it should not consist of child node or it
may not be linked with
.Sx \&Sx .
.Pp
See also
.Sx \&Pp ,
.Sx \&Sh ,
and
.Sx \&Sx .
.Ss \&St
Replace an abbreviation for a standard with the full form.
The following standards are recognised.
Where multiple lines are given without a blank line in between,
they all refer to the same standard, and using the first form
is recommended.
.Bl -tag -width 1n
.It C language standards
.Pp
.Bl -tag -width "-p1003.1g-2000" -compact
.It \-ansiC
.St -ansiC
.It \-ansiC-89
.St -ansiC-89
.It \-isoC
.St -isoC
.It \-isoC-90
.St -isoC-90
.br
The original C standard.
.Pp
.It \-isoC-amd1
.St -isoC-amd1
.Pp
.It \-isoC-tcor1
.St -isoC-tcor1
.Pp
.It \-isoC-tcor2
.St -isoC-tcor2
.Pp
.It \-isoC-99
.St -isoC-99
.br
The second major version of the C language standard.
.Pp
.It \-isoC-2011
.St -isoC-2011
.br
The third major version of the C language standard.
.El
.It POSIX.1 before the Single UNIX Specification
.Pp
.Bl -tag -width "-p1003.1g-2000" -compact
.It \-p1003.1-88
.St -p1003.1-88
.It \-p1003.1
.St -p1003.1
.br
The original POSIX standard, based on ANSI C.
.Pp
.It \-p1003.1-90
.St -p1003.1-90
.It \-iso9945-1-90
.St -iso9945-1-90
.br
The first update of POSIX.1.
.Pp
.It \-p1003.1b-93
.St -p1003.1b-93
.It \-p1003.1b
.St -p1003.1b
.br
Real-time extensions.
.Pp
.It \-p1003.1c-95
.St -p1003.1c-95
.br
POSIX thread interfaces.
.Pp
.It \-p1003.1i-95
.St -p1003.1i-95
.br
Technical Corrigendum.
.Pp
.It \-p1003.1-96
.St -p1003.1-96
.It \-iso9945-1-96
.St -iso9945-1-96
.br
Includes POSIX.1-1990, 1b, 1c, and 1i.
.El
.It X/Open Portability Guide version 4 and related standards
.Pp
.Bl -tag -width "-p1003.1g-2000" -compact
.It \-xpg3
.St -xpg3
.br
An XPG4 precursor, published in 1989.
.Pp
.It \-p1003.2
.St -p1003.2
.It \-p1003.2-92
.St -p1003.2-92
.It \-iso9945-2-93
.St -iso9945-2-93
.br
An XCU4 precursor.
.Pp
.It \-p1003.2a-92
.St -p1003.2a-92
.br
Updates to POSIX.2.
.Pp
.It \-xpg4
.St -xpg4
.br
Based on POSIX.1 and POSIX.2, published in 1992.
.El
.It Single UNIX Specification version 1 and related standards
.Pp
.Bl -tag -width "-p1003.1g-2000" -compact
.It \-susv1
.St -susv1
.It \-xpg4.2
.St -xpg4.2
.br
This standard was published in 1994.
It was used as the basis for UNIX 95 certification.
The following three refer to parts of it.
.Pp
.It \-xsh4.2
.St -xsh4.2
.Pp
.It \-xcurses4.2
.St -xcurses4.2
.Pp
.It \-p1003.1g-2000
.St -p1003.1g-2000
.br
Networking APIs, including sockets.
.Pp
.It \-svid4
.St -svid4 ,
.br
Published in 1995.
.El
.It Single UNIX Specification version 2 and related standards
.Pp
.Bl -tag -width "-p1003.1g-2000" -compact
.It \-susv2
.St -susv2
This Standard was published in 1997
and is also called X/Open Portability Guide version 5.
It was used as the basis for UNIX 98 certification.
The following refer to parts of it.
.Pp
.It \-xbd5
.St -xbd5
.Pp
.It \-xsh5
.St -xsh5
.Pp
.It \-xcu5
.St -xcu5
.Pp
.It \-xns5
.St -xns5
.It \-xns5.2
.St -xns5.2
.El
.It Single UNIX Specification version 3
.Pp
.Bl -tag -width "-p1003.1-2001" -compact
.It \-p1003.1-2001
.St -p1003.1-2001
.It \-susv3
.St -susv3
.br
This standard is based on C99, SUSv2, POSIX.1-1996, 1d, and 1j.
It is also called X/Open Portability Guide version 6.
It is used as the basis for UNIX 03 certification.
.Pp
.It \-p1003.1-2004
.St -p1003.1-2004
.br
The second and last Technical Corrigendum.
.El
.It Single UNIX Specification version 4
.Pp
.Bl -tag -width "-p1003.1g-2000" -compact
.It \-p1003.1-2008
.St -p1003.1-2008
.It \-susv4
.St -susv4
.br
This standard is also called
X/Open Portability Guide version 7.
.Pp
.It \-p1003.1-2013
.St -p1003.1-2013
.br
This is the first Technical Corrigendum.
.El
.It Other standards
.Pp
.Bl -tag -width "-p1003.1g-2000" -compact
.It \-ieee754
.St -ieee754
.br
Floating-point arithmetic.
.Pp
.It \-iso8601
.St -iso8601
.br
Representation of dates and times, published in 1988.
.Pp
.It \-iso8802-3
.St -iso8802-3
.br
Ethernet local area networks.
.Pp
.It \-ieee1275-94
.St -ieee1275-94
.El
.El
.Ss \&Sx
Reference a section or subsection in the same manual page.
The referenced section or subsection name must be identical to the
enclosed argument, including whitespace.
.Pp
Examples:
.Dl \&.Sx MANUAL STRUCTURE
.Pp
See also
.Sx \&Sh
and
.Sx \&Ss .
.Ss \&Sy
Request a boldface font.
.Pp
This is most often used to indicate importance or seriousness (not to be
confused with stress emphasis, see
.Sx \&Em ) .
When none of the semantic macros fit, it is also adequate for syntax
elements that have to be given or that appear verbatim.
.Pp
Examples:
.Bd -literal -compact -offset indent
\&.Sy Warning :
If
\&.Sy s
appears in the owner permissions, set-user-ID mode is set.
This utility replaces the former
\&.Sy dumpdir
program.
.Ed
.Pp
See also
.Sx \&Bf ,
.Sx \&Em ,
.Sx \&Li ,
and
.Sx \&No .
.Ss \&Ta
Table cell separator in
.Sx \&Bl Fl column
lists; can only be used below
.Sx \&It .
.Ss \&Tn
Supported only for compatibility, do not use this in new manuals.
Even though the macro name
.Pq Dq tradename
suggests a semantic function, historic usage is inconsistent, mostly
using it as a presentation-level macro to request a small caps font.
.Ss \&Ud
Supported only for compatibility, do not use this in new manuals.
Prints out
.Dq currently under development.
.Ss \&Ux
Supported only for compatibility, do not use this in new manuals.
Prints out
.Dq Ux .
.Ss \&Va
A variable name.
.Pp
Examples:
.Dl \&.Va foo
.Dl \&.Va const char *bar ;
.Pp
For function arguments and parameters, use
.Sx \&Fa
instead.
For declarations of global variables in the
.Em SYNOPSIS
section, use
.Sx \&Vt .
.Ss \&Vt
A variable type.
.Pp
This is also used for indicating global variables in the
.Em SYNOPSIS
section, in which case a variable name is also specified.
Note that it accepts
.Sx Block partial-implicit
syntax when invoked as the first macro on an input line in the
.Em SYNOPSIS
section, else it accepts ordinary
.Sx In-line
syntax.
In the former case, this macro starts a new output line,
and a blank line is inserted in front if there is a preceding
function definition or include directive.
.Pp
Examples:
.Dl \&.Vt unsigned char
.Dl \&.Vt extern const char * const sys_signame[] \&;
.Pp
For parameters in function prototypes, use
.Sx \&Fa
instead, for function return types
.Sx \&Ft ,
and for variable names outside the
.Em SYNOPSIS
section
.Sx \&Va ,
even when including a type with the name.
See also
.Sx MANUAL STRUCTURE .
.Ss \&Xc
Close a scope opened by
.Sx \&Xo .
.Ss \&Xo
Extend the header of an
.Sx \&It
macro or the body of a partial-implicit block macro
beyond the end of the input line.
This macro originally existed to work around the 9-argument limit
of historic
.Xr roff 7 .
.Ss \&Xr
Link to another manual
.Pq Qq cross-reference .
Its syntax is as follows:
.Pp
.D1 Pf \. Sx \&Xr Ar name Op section
.Pp
Cross reference the
.Ar name
and
.Ar section
number of another man page;
omitting the section number is rarely useful.
.Pp
Examples:
.Dl \&.Xr mandoc 1
.Dl \&.Xr mandoc 1 \&;
.Dl \&.Xr mandoc 1 \&Ns s behaviour
.Ss \&br
Emits a line-break.
This macro should not be used; it is implemented for compatibility with
historical manuals.
.Pp
Consider using
.Sx \&Pp
in the event of natural paragraph breaks.
.Ss \&sp
Emits vertical space.
This macro should not be used; it is implemented for compatibility with
historical manuals.
Its syntax is as follows:
.Pp
.D1 Pf \. Sx \&sp Op Ar height
.Pp
The
.Ar height
argument is a scaling width as described in
.Xr roff 7 .
If unspecified,
.Sx \&sp
asserts a single vertical space.
.Sh MACRO SYNTAX
The syntax of a macro depends on its classification.
In this section,
.Sq \-arg
refers to macro arguments, which may be followed by zero or more
.Sq parm
parameters;
.Sq \&Yo
opens the scope of a macro; and if specified,
.Sq \&Yc
closes it out.
.Pp
The
.Em Callable
column indicates that the macro may also be called by passing its name
as an argument to another macro.
For example,
.Sq \&.Op \&Fl O \&Ar file
produces
.Sq Op Fl O Ar file .
To prevent a macro call and render the macro name literally,
escape it by prepending a zero-width space,
.Sq \e& .
For example,
.Sq \&Op \e&Fl O
produces
.Sq Op \&Fl O .
If a macro is not callable but its name appears as an argument
to another macro, it is interpreted as opaque text.
For example,
.Sq \&.Fl \&Sh
produces
.Sq Fl \&Sh .
.Pp
The
.Em Parsed
column indicates whether the macro may call other macros by receiving
their names as arguments.
If a macro is not parsed but the name of another macro appears
as an argument, it is interpreted as opaque text.
.Pp
The
.Em Scope
column, if applicable, describes closure rules.
.Ss Block full-explicit
Multi-line scope closed by an explicit closing macro.
All macros contains bodies; only
.Sx \&Bf
and
.Pq optionally
.Sx \&Bl
contain a head.
.Bd -literal -offset indent
\&.Yo \(lB\-arg \(lBparm...\(rB\(rB \(lBhead...\(rB
\(lBbody...\(rB
\&.Yc
.Ed
.Bl -column "MacroX" "CallableX" "ParsedX" "closed by XXX" -offset indent
.It Em Macro Ta Em Callable Ta Em Parsed Ta Em Scope
.It Sx \&Bd  Ta    \&No     Ta    \&No     Ta    closed by Sx \&Ed
.It Sx \&Bf  Ta    \&No     Ta    \&No     Ta    closed by Sx \&Ef
.It Sx \&Bk  Ta    \&No     Ta    \&No     Ta    closed by Sx \&Ek
.It Sx \&Bl  Ta    \&No     Ta    \&No     Ta    closed by Sx \&El
.It Sx \&Ed  Ta    \&No     Ta    \&No     Ta    opened by Sx \&Bd
.It Sx \&Ef  Ta    \&No     Ta    \&No     Ta    opened by Sx \&Bf
.It Sx \&Ek  Ta    \&No     Ta    \&No     Ta    opened by Sx \&Bk
.It Sx \&El  Ta    \&No     Ta    \&No     Ta    opened by Sx \&Bl
.El
.Ss Block full-implicit
Multi-line scope closed by end-of-file or implicitly by another macro.
All macros have bodies; some
.Po
.Sx \&It Fl bullet ,
.Fl hyphen ,
.Fl dash ,
.Fl enum ,
.Fl item
.Pc
don't have heads; only one
.Po
.Sx \&It
in
.Sx \&Bl Fl column
.Pc
has multiple heads.
.Bd -literal -offset indent
\&.Yo \(lB\-arg \(lBparm...\(rB\(rB \(lBhead... \(lBTa head...\(rB\(rB
\(lBbody...\(rB
.Ed
.Bl -column "MacroX" "CallableX" "ParsedX" "closed by XXXXXXXXXXX" -offset indent
.It Em Macro Ta Em Callable Ta Em Parsed Ta Em Scope
.It Sx \&It Ta \&No Ta Yes  Ta closed by Sx \&It , Sx \&El
.It Sx \&Nd Ta \&No Ta \&No Ta closed by Sx \&Sh
.It Sx \&Nm Ta \&No Ta Yes  Ta closed by Sx \&Nm , Sx \&Sh , Sx \&Ss
.It Sx \&Sh Ta \&No Ta Yes  Ta closed by Sx \&Sh
.It Sx \&Ss Ta \&No Ta Yes  Ta closed by Sx \&Sh , Sx \&Ss
.El
.Pp
Note that the
.Sx \&Nm
macro is a
.Sx Block full-implicit
macro only when invoked as the first macro
in a
.Em SYNOPSIS
section line, else it is
.Sx In-line .
.Ss Block partial-explicit
Like block full-explicit, but also with single-line scope.
Each has at least a body and, in limited circumstances, a head
.Po
.Sx \&Fo ,
.Sx \&Eo
.Pc
and/or tail
.Pq Sx \&Ec .
.Bd -literal -offset indent
\&.Yo \(lB\-arg \(lBparm...\(rB\(rB \(lBhead...\(rB
\(lBbody...\(rB
\&.Yc \(lBtail...\(rB

\&.Yo \(lB\-arg \(lBparm...\(rB\(rB \(lBhead...\(rB \
\(lBbody...\(rB \&Yc \(lBtail...\(rB
.Ed
.Bl -column "MacroX" "CallableX" "ParsedX" "closed by XXXX" -offset indent
.It Em Macro Ta Em Callable Ta Em Parsed Ta Em Scope
.It Sx \&Ac  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Ao
.It Sx \&Ao  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Ac
.It Sx \&Bc  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Bo
.It Sx \&Bo  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Bc
.It Sx \&Brc Ta    Yes      Ta    Yes      Ta    opened by Sx \&Bro
.It Sx \&Bro Ta    Yes      Ta    Yes      Ta    closed by Sx \&Brc
.It Sx \&Dc  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Do
.It Sx \&Do  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Dc
.It Sx \&Ec  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Eo
.It Sx \&Eo  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Ec
.It Sx \&Fc  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Fo
.It Sx \&Fo  Ta    \&No     Ta    \&No     Ta    closed by Sx \&Fc
.It Sx \&Oc  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Oo
.It Sx \&Oo  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Oc
.It Sx \&Pc  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Po
.It Sx \&Po  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Pc
.It Sx \&Qc  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Oo
.It Sx \&Qo  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Oc
.It Sx \&Re  Ta    \&No     Ta    \&No     Ta    opened by Sx \&Rs
.It Sx \&Rs  Ta    \&No     Ta    \&No     Ta    closed by Sx \&Re
.It Sx \&Sc  Ta    Yes      Ta    Yes      Ta    opened by Sx \&So
.It Sx \&So  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Sc
.It Sx \&Xc  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Xo
.It Sx \&Xo  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Xc
.El
.Ss Block partial-implicit
Like block full-implicit, but with single-line scope closed by the
end of the line.
.Bd -literal -offset indent
\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBbody...\(rB \(lBres...\(rB
.Ed
.Bl -column "MacroX" "CallableX" "ParsedX" -offset indent
.It Em Macro Ta Em Callable Ta Em Parsed
.It Sx \&Aq  Ta    Yes      Ta    Yes
.It Sx \&Bq  Ta    Yes      Ta    Yes
.It Sx \&Brq Ta    Yes      Ta    Yes
.It Sx \&D1  Ta    \&No     Ta    \&Yes
.It Sx \&Dl  Ta    \&No     Ta    Yes
.It Sx \&Dq  Ta    Yes      Ta    Yes
.It Sx \&En  Ta    Yes      Ta    Yes
.It Sx \&Op  Ta    Yes      Ta    Yes
.It Sx \&Pq  Ta    Yes      Ta    Yes
.It Sx \&Ql  Ta    Yes      Ta    Yes
.It Sx \&Qq  Ta    Yes      Ta    Yes
.It Sx \&Sq  Ta    Yes      Ta    Yes
.It Sx \&Vt  Ta    Yes      Ta    Yes
.El
.Pp
Note that the
.Sx \&Vt
macro is a
.Sx Block partial-implicit
only when invoked as the first macro
in a
.Em SYNOPSIS
section line, else it is
.Sx In-line .
.Ss Special block macro
The
.Sx \&Ta
macro can only be used below
.Sx \&It
in
.Sx \&Bl Fl column
lists.
It delimits blocks representing table cells;
these blocks have bodies, but no heads.
.Bl -column "MacroX" "CallableX" "ParsedX" "closed by XXXX" -offset indent
.It Em Macro Ta Em Callable Ta Em Parsed Ta Em Scope
.It Sx \&Ta  Ta    Yes      Ta    Yes    Ta closed by Sx \&Ta , Sx \&It
.El
.Ss In-line
Closed by the end of the line, fixed argument lengths,
and/or subsequent macros.
In-line macros have only text children.
If a number (or inequality) of arguments is
.Pq n ,
then the macro accepts an arbitrary number of arguments.
.Bd -literal -offset indent
\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBargs...\(rB \(lBres...\(rB

\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBargs...\(rB Yc...

\&.Yo \(lB\-arg \(lBval...\(rB\(rB arg0 arg1 argN
.Ed
.Bl -column "MacroX" "CallableX" "ParsedX" "Arguments" -offset indent
.It Em Macro Ta Em Callable Ta Em Parsed Ta Em Arguments
.It Sx \&%A  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%B  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%C  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%D  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%I  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%J  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%N  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%O  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%P  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%Q  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%R  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%T  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%U  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%V  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&Ad  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&An  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Ap  Ta    Yes      Ta    Yes      Ta    0
.It Sx \&Ar  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&At  Ta    Yes      Ta    Yes      Ta    1
.It Sx \&Bsx Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Bt  Ta    \&No     Ta    \&No     Ta    0
.It Sx \&Bx  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Cd  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Cm  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Db  Ta    \&No     Ta    \&No     Ta    1
.It Sx \&Dd  Ta    \&No     Ta    \&No     Ta    n
.It Sx \&Dt  Ta    \&No     Ta    \&No     Ta    n
.It Sx \&Dv  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Dx  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Em  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Er  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Es  Ta    Yes      Ta    Yes      Ta    2
.It Sx \&Ev  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Ex  Ta    \&No     Ta    \&No     Ta    n
.It Sx \&Fa  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Fd  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&Fl  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Fn  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Fr  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Ft  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Fx  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Hf  Ta    \&No     Ta    \&No     Ta    n
.It Sx \&Ic  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&In  Ta    \&No     Ta    \&No     Ta    1
.It Sx \&Lb  Ta    \&No     Ta    \&No     Ta    1
.It Sx \&Li  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Lk  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Lp  Ta    \&No     Ta    \&No     Ta    0
.It Sx \&Ms  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Mt  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Nm  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&No  Ta    Yes      Ta    Yes      Ta    0
.It Sx \&Ns  Ta    Yes      Ta    Yes      Ta    0
.It Sx \&Nx  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Os  Ta    \&No     Ta    \&No     Ta    n
.It Sx \&Ot  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Ox  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Pa  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Pf  Ta    Yes      Ta    Yes      Ta    1
.It Sx \&Pp  Ta    \&No     Ta    \&No     Ta    0
.It Sx \&Rv  Ta    \&No     Ta    \&No     Ta    n
.It Sx \&Sm  Ta    \&No     Ta    \&No     Ta    <2
.It Sx \&St  Ta    \&No     Ta    Yes      Ta    1
.It Sx \&Sx  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Sy  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Tn  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Ud  Ta    \&No     Ta    \&No     Ta    0
.It Sx \&Ux  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Va  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Vt  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Xr  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&br  Ta    \&No     Ta    \&No     Ta    0
.It Sx \&sp  Ta    \&No     Ta    \&No     Ta    1
.El
.Ss Delimiters
When a macro argument consists of one single input character
considered as a delimiter, the argument gets special handling.
This does not apply when delimiters appear in arguments containing
more than one character.
Consequently, to prevent special handling and just handle it
like any other argument, a delimiter can be escaped by prepending
a zero-width space
.Pq Sq \e& .
In text lines, delimiters never need escaping, but may be used
as normal punctuation.
.Pp
For many macros, when the leading arguments are opening delimiters,
these delimiters are put before the macro scope,
and when the trailing arguments are closing delimiters,
these delimiters are put after the macro scope.
For example,
.Pp
.D1 Pf \. \&Aq "( [ word ] ) ."
.Pp
renders as:
.Pp
.D1 Aq ( [ word ] ) .
.Pp
Opening delimiters are:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It \&(
left parenthesis
.It \&[
left bracket
.El
.Pp
Closing delimiters are:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It \&.
period
.It \&,
comma
.It \&:
colon
.It \&;
semicolon
.It \&)
right parenthesis
.It \&]
right bracket
.It \&?
question mark
.It \&!
exclamation mark
.El
.Pp
Note that even a period preceded by a backslash
.Pq Sq \e.\&
gets this special handling; use
.Sq \e&.
to prevent that.
.Pp
Many in-line macros interrupt their scope when they encounter
delimiters, and resume their scope when more arguments follow that
are not delimiters.
For example,
.Pp
.D1 Pf \. \&Fl "a ( b | c \e*(Ba d ) e"
.Pp
renders as:
.Pp
.D1 Fl a ( b | c \*(Ba d ) e
.Pp
This applies to both opening and closing delimiters,
and also to the middle delimiter:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It \&|
vertical bar
.El
.Pp
As a special case, the predefined string \e*(Ba is handled and rendered
in the same way as a plain
.Sq \&|
character.
Using this predefined string is not recommended in new manuals.
.Ss Font handling
In
.Nm
documents, usage of semantic markup is recommended in order to have
proper fonts automatically selected; only when no fitting semantic markup
is available, consider falling back to
.Sx Physical markup
macros.
Whenever any
.Nm
macro switches the
.Xr roff 7
font mode, it will automatically restore the previous font when exiting
its scope.
Manually switching the font using the
.Xr roff 7
.Ql \ef
font escape sequences is never required.
.Sh COMPATIBILITY
This section provides an incomplete list of compatibility issues
between mandoc and GNU troff
.Pq Qq groff .
.Pp
The following problematic behaviour is found in groff:
.Pp
.Bl -dash -compact
.It
.Sx \&Dd
with non-standard arguments behaves very strangely.
When there are three arguments, they are printed verbatim.
Any other number of arguments is replaced by the current date,
but without any arguments the string
.Dq Epoch
is printed.
.It
.Sx \&Lk
only accepts a single link-name argument; the remainder is misformatted.
.It
.Sx \&Pa
does not format its arguments when used in the FILES section under
certain list types.
.It
.Sx \&Ta
can only be called by other macros, but not at the beginning of a line.
.It
.Sx \&%C
is not implemented (up to and including groff-1.22.2).
.It
.Sq \ef
.Pq font face
and
.Sq \eF
.Pq font family face
.Sx Text Decoration
escapes behave irregularly when specified within line-macro scopes.
.It
Negative scaling units return to prior lines.
Instead, mandoc truncates them to zero.
.El
.Pp
The following features are unimplemented in mandoc:
.Pp
.Bl -dash -compact
.It
.Sx \&Bd
.Fl file Ar file
is unsupported for security reasons.
.It
.Sx \&Bd
.Fl filled
does not adjust the right margin, but is an alias for
.Sx \&Bd
.Fl ragged .
.It
.Sx \&Bd
.Fl literal
does not use a literal font, but is an alias for
.Sx \&Bd
.Fl unfilled .
.It
.Sx \&Bd
.Fl offset Cm center
and
.Fl offset Cm right
don't work.
Groff does not implement centered and flush-right rendering either,
but produces large indentations.
.El
.Sh SEE ALSO
.Xr man 1 ,
.Xr mandoc 1 ,
.Xr eqn 7 ,
.Xr man 7 ,
.Xr mandoc_char 7 ,
.Xr roff 7 ,
.Xr tbl 7
.Sh HISTORY
The
.Nm
language first appeared as a troff macro package in
.Bx 4.4 .
It was later significantly updated by Werner Lemberg and Ruslan Ermilov
in groff-1.17.
The standalone implementation that is part of the
.Xr mandoc 1
utility written by Kristaps Dzonsons appeared in
.Ox 4.6 .
.Sh AUTHORS
The
.Nm
reference was written by
.An Kristaps Dzonsons Aq Mt kristaps@@bsd.lv .
@


1.256
log
@Mention that the first argument of .Pf does not need escaping.
While here, make the first sentence regarding .Pf more concise.
OK jmc@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.255 2015/09/24 18:41:22 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: September 24 2015 $
d307 5
@


1.255
log
@typos; found and fixed by sobrado@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.254 2015/09/14 20:10:19 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: September 14 2015 $
d2158 1
a2158 3
Removes the space between its argument
.Pq Dq prefix
and the following macro.
d2165 6
a2170 1
.D1 .No Ar prefix No \&Ns Ar macro arguments ...
d2174 1
@


1.254
log
@Avoid .Ns right after .Pf, it's pointless.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.253 2015/03/13 20:20:07 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: March 13 2015 $
d2270 1
a2270 1
\&.%C Reading, Massachusettes
@


1.253
log
@Remove the first comma from constructs like ", and," and ", or,":
You can use "and" and "or" to join sentence clauses,
and you can use commas, but both hinders reading;
patch from jmc@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.252 2015/02/23 13:31:04 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: February 23 2015 $
d1625 1
a1625 1
.Pf \. Ns Sx \&Fn
@


1.252
log
@improve NAME section diagnostics;
confusing messages reported by Jan Stary <hans at stare dot cz>
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.251 2015/02/15 17:57:45 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: February 15 2015 $
d2096 1
a2096 1
argument, or, if that isn't specified either,
@


1.251
log
@Tweak the wording to avoid the possible misunderstanding that .In
could only be used in the SYNOPSIS section.  It is fine anywhere.
Issue noticed by bentley@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.250 2015/01/29 00:33:57 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 29 2015 $
d1933 3
a1935 5
This may only be invoked in the
.Em SYNOPSIS
section subsequent the
.Sx \&Nm
macro.
@


1.250
log
@Radical cleanup of COMPATIBILITY sections:
Remove lots of lies, dozens of irrelevant implementation details,
and all references to groff versions older than 1.17.  Move relevant
information to the pages where it belongs, and out of mandoc(1) in
particular.  Add some missing general remarks to roff(7), where it
fits the character and purpose of the page much better.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.249 2015/01/20 19:39:34 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 20 2015 $
d1761 3
a1763 3
An
.Dq include
file.
d1768 1
a1768 1
.Dq #include ,
d1771 2
a1772 1
This is most often used in section 2, 3, and 9 manual pages.
@


1.249
log
@change spelling of centre to center: consistent with other man pages
and the name of the syntax elements being described; from tedu@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.248 2015/01/03 00:59:13 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 3 2015 $
d3136 1
a3136 2
between mandoc and other troff implementations, at this time limited
to GNU troff
a3137 9
The term
.Qq historic groff
refers to groff versions before 1.17,
which featured a significant update of the
.Pa doc.tmac
file.
.Pp
Heirloom troff, the other significant troff implementation accepting
\-mdoc, is similar to historic groff.
a3139 1
.ds hist (Historic groff only.)
a3142 26
Display macros
.Po
.Sx \&Bd ,
.Sx \&Dl ,
and
.Sx \&D1
.Pc
may not be nested.
\*[hist]
.It
.Sx \&At
with unknown arguments produces no output at all.
\*[hist]
Newer groff and mandoc print
.Qq AT&T UNIX
and the arguments.
.It
.Sx \&Bl Fl column
does not recognise trailing punctuation characters when they immediately
precede tabulator characters, but treats them as normal text and
outputs a space before them.
.It
.Sx \&Bd Fl ragged compact
does not start a new line.
\*[hist]
.It
a3150 47
.Sx \&Fl
does not print a dash for an empty argument.
\*[hist]
.It
.Sx \&Fn
does not start a new line unless invoked as the line macro in the
.Em SYNOPSIS
section.
\*[hist]
.It
.Sx \&Fo
with
.Pf non- Sx \&Fa
children causes inconsistent spacing between arguments.
In mandoc, a single space is always inserted between arguments.
.It
.Sx \&Ft
in the
.Em SYNOPSIS
causes inconsistent vertical spacing, depending on whether a prior
.Sx \&Fn
has been invoked.
See
.Sx \&Ft
and
.Sx \&Fn
for the normalised behaviour in mandoc.
.It
.Sx \&In
ignores additional arguments and is not treated specially in the
.Em SYNOPSIS .
\*[hist]
.It
.Sx \&It
sometimes requires a
.Fl nested
flag.
\*[hist]
In new groff and mandoc, any list may be nested by default and
.Fl enum
lists will restart the sequence only for the sub-list.
.It
.Sx \&Li
followed by a delimiter is incorrectly used in some manuals
instead of properly quoting that character, which sometimes works with
historic groff.
.It
a3163 13
Historic groff only allows up to eight or nine arguments per macro input
line, depending on the exact situation.
Providing more arguments causes garbled output.
The number of arguments on one input line is not limited with mandoc.
.It
Historic groff has many un-callable macros.
Most of these (excluding some block-level macros) are callable
in new groff and mandoc.
.It
.Sq \(ba
(vertical bar) is not fully supported as a delimiter.
\*[hist]
.It
d3181 14
a3194 1
.Fl file Ar file .
d3199 2
a3200 1
.Fl offset Cm right .
@


1.248
log
@Given the excessively technical description in the old mdoc_samples(7)
manual and its successor groff_mdoc(7), i always considered .Ql as
purely physical markup, but it turns out describing it better allows
to give it a semantic meaning (in-line literal display) that doesn't
contradict existing usage.  One less physical, one more semantic
macro, yay!

Found in a discussion with Steffen Nurpmeso <sdaoden at yandex dot com>.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.247 2014/12/31 20:42:31 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: December 31 2014 $
d780 1
a780 1
Produce one output line from each input line, and centre-justify each line.
d825 1
a825 1
which aligns around an imagined centre axis.
d3284 1
a3284 1
Groff does not implement centred and flush-right rendering either,
@


1.247
log
@describe .Ql more precisely;
defect pointed out by Steffen Nurpmeso <sdaoden at yandex dot com>
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.246 2014/12/28 15:23:33 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: December 28 2014 $
d457 1
a531 1
.It Sx \&Ql Ta single-quoted literal text: Ql text
d1259 1
d1261 1
d2206 5
a2210 2
Request a literal font and enclose in single quotes.
For arguments of three or more characters, formatters other than
d2212 4
a2215 1
usually omit the quotes on non-terminal output devices.
d2217 1
a2217 1
.Sx \&Li
d2219 2
a2220 1
.Sx \&Sq .
@


1.246
log
@Improve documentation of the header/footer macros .Dt, .Os, .TH:
* State the defaults for .Os and the fourth .TH argument.
* Sync the section titles, and stop advertising obscure sections that
aren't actually fully supported and certainly not recommended for use.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.245 2014/11/30 21:56:18 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: November 30 2014 $
d2204 4
a2207 1
Format a single-quoted literal.
d2209 1
a2209 1
.Sx \&Qq
@


1.245
log
@delete three standard abbreviations that are
* no longer used in OpenBSD
* not used in any of NetBSD, FreeBSD, or DragonFly
* not supported by groff
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.244 2014/11/28 18:36:35 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: November 28 2014 $
d1317 1
a1317 1
.Pq utilities ,
d1319 1
a1319 1
.Pq system calls ,
d1321 1
a1321 1
.Pq libraries ,
d1323 1
a1323 1
.Pq Perl libraries ,
d1325 1
a1325 1
.Pq devices ,
d1327 1
a1327 1
.Pq file formats ,
d1329 1
a1329 1
.Pq games ,
d1331 1
a1331 1
.Pq miscellaneous ,
d1333 2
a1334 1
.Pq system utilities ,
d1336 1
a1336 14
.Pq kernel functions ,
.Cm X11
.Pq X Window System ,
.Cm X11R6
.Pq X Window System ,
.Cm unass
.Pq unassociated ,
.Cm local
.Pq local system ,
.Cm draft
.Pq draft manual ,
or
.Cm paper
.Pq paper .
d2091 10
a2100 2
Left unspecified, it defaults to the local operating system version.
This is the suggested form.
@


1.244
log
@Retire support for CSRG supplementary document titles.  These are
long obsolete and were never written in mdoc(7) in the first place.
Removes 100 lines from source files.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.243 2014/11/28 18:09:01 schwarze Exp $
a2398 2
.It \-ansiC-99
.St -ansiC-99
a2497 3
.It \-xpg4.3
.St -xpg4.3
.Pp
d2527 1
a2527 7
.It Single UNIX Specification version 3 and related standards
.Pp
.Bl -tag -width "-p1003.1g-2000X" -compact
.It \-p1003.1d-99
.St -p1003.1d-99
.br
Additional real-time extensions.
d2529 1
@


1.243
log
@Drop useless architecture table.  Validating architecture names
is a job for makewhatis(8)/mandoc.db(5), not for the parser.
Removes 150 lines from source files and 4k (1%) from the binary.
Bloat found by deraadt@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.242 2014/11/27 16:20:31 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: November 27 2014 $
d436 1
a436 1
.It Sx \&Dt Ta document title: Ar TITLE section Op Ar volume | arch
d1302 1
a1302 1
.Op Ar volume | arch
a1350 29
.It Ar volume
This overrides the volume inferred from
.Ar section .
This field is optional, and if specified, must be one of
.Cm USD
.Pq users' supplementary documents ,
.Cm PS1
.Pq programmers' supplementary documents ,
.Cm AMD
.Pq administrators' supplementary documents ,
.Cm SMM
.Pq system managers' manuals ,
.Cm URM
.Pq users' reference manuals ,
.Cm PRM
.Pq programmers' reference manuals ,
.Cm KM
.Pq kernel manuals ,
.Cm IND
.Pq master index ,
.Cm MMI
.Pq master index ,
.Cm LOCAL
.Pq local manuals ,
.Cm LOC
.Pq local manuals ,
or
.Cm CON
.Pq contributed manuals .
a1363 1
.Dl \&.Dt FOO 4 KM
@


1.242
log
@Fix the obsolete .Db (toggle debug mode) macro to ignore its arguments
and not trigger an assertion when there is more than one argument;
the latter found by jsg@@ with afl.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.241 2014/11/16 20:46:21 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: November 16 2014 $
d1388 1
a1388 6
The list of supported architectures varies by operating system.
For the full list of all architectures recognized by
.Xr mandoc 1 ,
see the file
.Pa arch.in
in the source distribution.
@


1.241
log
@Delete five standards that are:
* not supported by groff
* not used in any OpenBSD, NetBSD, DragonFly or FreeBSD base manual
* superseded or retracted
* and more than ten years old
Triggered by a question from Carsten Kunze (Heirloom troff).
OK guenther@@ jmc@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.240 2014/10/30 20:10:02 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: October 30 2014 $
d1188 6
a1193 7
Switch debugging mode.
Its syntax is as follows:
.Pp
.D1 Pf \. Sx \&Db Cm on | off
.Pp
This macro is ignored by
.Xr mandoc 1 .
@


1.240
log
@Major bugsquashing with respect to -offset and -width:
1. Support specifying the .Bd and .Bl -offset as a macro default width;
while here, simplify the code handling the same for .Bl -width.
2. Correct handling of .Bl -offset arguments:  unlike .Bd -offset, the
arguments "left", "indent", and "indent-two" have no special meaning.
3. Fix the scaling of string length -offset and -width arguments in -Thtml.
Triggered by an incomplete documentation patch from bentley@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.239 2014/10/20 17:59:20 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: October 20 2014 $
a2564 2
.It \-xns5.2d2.0
.St -xns5.2d2.0
a2566 7
.Pp
.It \-p1387.2
.St -p1387.2
.It \-p1387.2-95
.St -p1387.2-95
.br
POSIX software administration.
a2575 10
.It \-p1003.1j-2000
.St -p1003.1j-2000
.br
Advanced real-time extensions.
.Pp
.It \-p1003.1q-2000
.St -p1003.1q-2000
.br
Amendment 7: Tracing [C Language].
.Pp
@


1.239
log
@improve documentation of .Fa, .Va, and .Vt;
inspired by a discussion with matthew@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.238 2014/10/13 12:46:28 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: October 13 2014 $
d940 5
a944 2
arguments accept scaling widths as described in
.Xr roff 7
@


1.238
log
@Clarify: SEE ALSO sections are sorted case insensitively.
Patch from bentley@@, ok jmc@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.237 2014/09/17 00:43:15 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: September 17 2014 $
d1573 1
a1573 1
Function argument.
d2707 8
d2717 1
a2731 4
Note that this should not be confused with
.Sx \&Ft ,
which is used for function return types.
.Pp
d2736 9
d2746 1
a2746 3
.Sx MANUAL STRUCTURE
and
.Sx \&Va .
@


1.237
log
@Five year old typo reported by Theo Buehler at math dot ethz dot ch, thanks.
I nearly asked: ``What's wrong with it? It formats as "intended".''
(However, what Kristaps intended to write was "indented".)
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.236 2014/08/28 03:51:56 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: August 28 2014 $
d391 1
a391 1
alphabetically.
@


1.236
log
@Support .St -susv1 and .St -susv4.  Illumos wants to use this,
and it's illogical anyway to have -susv2 and -susv3 but not -susv4.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.235 2014/08/14 20:57:19 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: August 14 2014 $
d1248 1
a1248 1
One-line intended display.
@


1.235
log
@Clarify that .Em and .Sy are physical, not semantic markup,
explain appropriate usage, and provide some examples.
ok jmc@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.234 2014/08/08 16:38:06 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: August 8 2014 $
d2513 2
d2518 1
a2518 1
This standard was published in 1994 and is also called SUSv1.
d2611 2
d2614 1
a2614 1
This standard is also called SUSv4 and
@


1.234
log
@When .Sm is called without an argument, groff toggles the spacing mode,
so let us do the same for compatibility.  Using this feature is of
course not recommended except in manual page obfuscation contests.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.233 2014/08/08 01:52:40 schwarze Exp $
d1470 13
a1482 6
Denotes text that should be
.Em emphasised .
Note that this is a presentation term and should not be used for
stylistically decorating technical terms.
Depending on the output device, this is usually represented
using an italic font or underlined characters.
d1485 8
a1492 2
.Dl \&.Em Warnings!
.Dl \&.Em Remarks :
d2653 18
a2670 4
Format enclosed arguments in symbolic
.Pq Dq boldface .
Note that this is a presentation term and should not be used for
stylistically decorating technical terms.
@


1.233
log
@some corrections and improvements with respect to prologue macros;
found while working on mandoc(1) messages
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.232 2014/07/13 10:24:40 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: July 13 2014 $
d471 1
a471 1
.It Sx \&Sm Ta switch horizontal spacing mode: Cm on | off
d2338 1
a2338 1
.D1 Pf \. Sx \&Sm Cm on | off
d2347 5
d3030 1
a3030 1
.It Sx \&Sm  Ta    \&No     Ta    \&No     Ta    1
@


1.232
log
@Unconfuse .Fa documentation:
You can use .Fa with just a type, without a name,
but when you give both, which is the usual case,
they need to go into one single .Fa argument.
Observed by bentley@@; ok jmc@@ bentley@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.231 2014/07/02 03:48:07 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: July 2 2014 $
d1198 1
a1198 1
Document date.
d1227 5
a1231 2
A few alternative date formats are accepted as well
and converted to the standard form.
d1291 1
a1291 1
Document title.
d1298 1
a1298 3
.Oo
.Ar title
.Oo
d1300 1
a1300 4
.Op Ar volume
.Op Ar arch
.Oc
.Oc
d1304 2
a1305 2
.Bl -tag -width Ds -offset Ds
.It Ar title
d1307 1
a1307 1
.Dq UNKNOWN
d1309 2
a1310 1
It should be capitalised.
d1348 1
a1348 2
.Cm 1
if unspecified.
d2111 1
a2111 1
Document operating system version.
@


1.231
log
@Implement the obsolete macros .En .Es .Fr .Ot for backward compatibility,
since this is hardly more complicated than explicitly ignoring them
as we did in the past.  Of course, do not use them!
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.230 2014/06/24 21:43:08 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: June 24 2014 $
d1566 4
a1569 2
.Op Cm argtype
.Cm argname
d1572 12
a1583 2
This may be invoked for names with or without the corresponding type.
It is also used to specify the field name of a structure.
d1590 1
a1590 1
section when documenting multi-line function prototypes.
d1600 1
a1600 1
.Dl \&.Fa foo
d1703 1
a1703 1
.Pf \. Sx \&Fa Oo Ar argtype Oc Ar argname
@


1.230
log
@Deprecate .Tn and .Ux, and make it clearer that .Bt and .Ud are deprecated.
Do not use these macros in new documents, they provide no value.
Instead, usually no macro and no markup is needed at all.
Of course, they remain supported for compatibility with existing manuals.

Jason McIntyre (OpenBSD), Thomas Klausner (NetBSD) and
Franco Fichtner (DragonFly) are OK with this documentation change.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.229 2014/06/22 17:07:06 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: June 22 2014 $
d1490 8
a1497 2
This macro is obsolete and ignored by
.Xr mandoc 1 .
d1523 8
a1530 2
This macro is obsolete and ignored by
.Xr mandoc 1 .
d1710 2
a1711 5
This macro is obsolete and ignored by
.Xr mandoc 1 .
.Pp
It was used to show function return values.
The syntax was:
d1713 1
a1713 1
.Dl Pf . Sx \&Fr Ar value
d2126 6
a2131 2
This macro is obsolete and ignored by
.Xr mandoc 1 .
d2906 1
a2983 1
.It Sx \&En  Ta    \&No     Ta    \&No     Ta    0
d2985 1
a2985 1
.It Sx \&Es  Ta    \&No     Ta    \&No     Ta    0
d2992 1
a2992 1
.It Sx \&Fr  Ta    \&No     Ta    \&No     Ta    n
d3009 1
a3009 1
.It Sx \&Ot  Ta    \&No     Ta    \&No     Ta    n
@


1.229
log
@Minimal COMPATIBILITY cleanup:
* Mention that the list is incomplete.
* I implemented %C for groff -current, and it was accepted.
* Font family is \F, not \f.
* Escapes and scaling widths are documented in roff(7), not here.
* Quoting quotes by doubling them is now supported.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.228 2014/03/31 01:05:32 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: March 31 2014 $
a515 1
.It Sx \&Tn Ta tradename (>0 arguments)
a542 1
.It Sx \&Ux Ta Ux
a752 1
.Sx \&Ox ,
d754 1
a754 1
.Sx \&Ux .
a1117 1
.Sx \&Ox ,
d1119 1
a1119 1
.Sx \&Ux .
d1121 1
a1140 1
.Sx \&Ox ,
d1142 1
a1142 1
.Sx \&Ux .
a1439 1
.Sx \&Ox ,
d1441 1
a1441 1
.Sx \&Ux .
d1490 1
a1490 1
This macro is obsolete and not implemented in
d1517 2
a1518 1
This macro is obsolete and not implemented.
d1698 1
a1698 1
This macro is obsolete and not implemented in
a1742 1
.Sx \&Ox ,
d1744 1
a1744 1
.Sx \&Ux .
a2061 1
.Sx \&Ox ,
d2063 1
a2063 1
.Sx \&Ux .
d2117 1
a2117 1
This macro is obsolete and not implemented in
a2139 1
.Sx \&Nx ,
d2141 1
a2141 1
.Sx \&Ux .
d2629 5
a2633 9
Format a tradename.
.Pp
Since this macro is often implemented to use a small caps font,
it has historically been used for acronyms (like ASCII) as well.
Such usage is not recommended because it would use the same macro
sometimes for semantical annotation, sometimes for physical formatting.
.Pp
Examples:
.Dl \&.Tn IBM
d2635 1
d2639 3
a2641 17
Format the
.Ux
name.
Accepts no argument.
.Pp
Examples:
.Dl \&.Ux
.Pp
See also
.Sx \&At ,
.Sx \&Bsx ,
.Sx \&Bx ,
.Sx \&Dx ,
.Sx \&Fx ,
.Sx \&Nx ,
and
.Sx \&Ox .
@


1.228
log
@Support the CONTEXT section for kernel manual pages found in Solaris and
OpenBSD manuals.  It describes which contexts you can call functions in.
from dlg@@, ok jmc@@ deraadt@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.227 2014/02/16 14:26:55 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: February 16 2014 $
d3142 3
a3144 2
This section documents compatibility between mandoc and other
troff implementations, at this time limited to GNU troff
d3253 1
a3253 1
is not implemented.
d3271 1
a3271 1
.Sq \ef
a3292 30
.It
The
.Sq \eh
.Pq horizontal position ,
.Sq \ev
.Pq vertical position ,
.Sq \em
.Pq text colour ,
.Sq \eM
.Pq text filling colour ,
.Sq \ez
.Pq zero-length character ,
.Sq \ew
.Pq string length ,
.Sq \ek
.Pq horizontal position marker ,
.Sq \eo
.Pq text overstrike ,
and
.Sq \es
.Pq text size
escape sequences are all discarded in mandoc.
.It
The
.Sq \ef
scaling unit is accepted by mandoc, but rendered as the default unit.
.It
In quoted literals, groff allows pairwise double-quotes to produce a
standalone double-quote in formatted output.
This is not supported by mandoc.
@


1.227
log
@After Werner Lemberg accepted and committed some updates to the manual
page template contained in groff_mdoc(7), catch up with our own stuff.
In particular, allow ERRORS in section 4 and DIAGNOSTICS in section 9.
ok jmc@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.226 2014/01/24 22:54:33 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 24 2014 $
d138 2
d323 3
@


1.226
log
@Supplement the documentation of the .St macro by minimal commentary
regarding the content and relationships of the various standards,
and sort and group them.
tweaks and ok guenther@@, ok millert@@ sobrado@@ jmc@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.225 2014/01/20 00:51:43 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 20 2014 $
d128 1
a128 1
\&.\e\(dq For sections 2, 3, & 9 only.
d141 1
a141 1
\&.\e\(dq For sections 2, 3, & 9 only.
d143 1
a143 1
\&.\e\(dq For sections 1, 6, 7, & 8 only.
d146 1
a146 1
\&.\e\(dq For sections 1, 6, & 8 only.
d149 1
a149 1
\&.\e\(dq For sections 1, 4, 6, 7, & 8 only.
d151 1
a151 1
\&.\e\(dq For sections 2, 3, & 9 only.
d361 6
a366 2
Documents error conditions.
This is most useful in section 4 manuals.
d376 3
a378 1
Documents error handling in sections 2, 3, and 9.
@


1.225
log
@Change markup of some fixed strings from .Ar to .Cm.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.224 2013/12/31 23:29:41 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: December 31 2013 $
d2357 6
a2362 1
The following standards are recognised:
d2364 5
a2368 43
.Bl -tag -width "-p1003.1g-2000X" -compact
.It \-p1003.1-88
.St -p1003.1-88
.It \-p1003.1-90
.St -p1003.1-90
.It \-p1003.1-96
.St -p1003.1-96
.It \-p1003.1-2001
.St -p1003.1-2001
.It \-p1003.1-2004
.St -p1003.1-2004
.It \-p1003.1-2008
.St -p1003.1-2008
.It \-p1003.1-2013
.St -p1003.1-2013
.It \-p1003.1
.St -p1003.1
.It \-p1003.1b
.St -p1003.1b
.It \-p1003.1b-93
.St -p1003.1b-93
.It \-p1003.1c-95
.St -p1003.1c-95
.It \-p1003.1d-99
.St -p1003.1d-99
.It \-p1003.1g-2000
.St -p1003.1g-2000
.It \-p1003.1i-95
.St -p1003.1i-95
.It \-p1003.1j-2000
.St -p1003.1j-2000
.It \-p1003.1q-2000
.St -p1003.1q-2000
.It \-p1003.2
.St -p1003.2
.It \-p1003.2-92
.St -p1003.2-92
.It \-p1003.2a-92
.St -p1003.2a-92
.It \-p1387.2
.St -p1387.2
.It \-p1387.2-95
.St -p1387.2-95
d2373 3
d2378 1
d2381 1
d2384 1
d2387 5
d2394 15
d2411 22
d2435 15
d2452 8
a2459 16
.It \-ansiC
.St -ansiC
.It \-ansiC-89
.St -ansiC-89
.It \-ansiC-99
.St -ansiC-99
.It \-ieee754
.St -ieee754
.It \-iso8802-3
.St -iso8802-3
.It \-iso8601
.St -iso8601
.It \-ieee1275-94
.St -ieee1275-94
.It \-xpg3
.St -xpg3
d2462 6
d2470 16
d2488 16
d2506 4
d2512 1
a2512 4
.It \-xsh4.2
.St -xsh4.2
.It \-xsh5
.St -xsh5
d2515 2
d2519 28
a2546 6
.It \-xns5.2d2.0
.St -xns5.2d2.0
.It \-xcurses4.2
.St -xcurses4.2
.It \-susv2
.St -susv2
d2549 45
a2593 2
.It \-svid4
.St -svid4
@


1.224
log
@Support .St -p1003.1-2013, "IEEE Std 1003.1-2008/Cor 1-2013".

Note that the POSIX-2008 standard remains in force, so please refrain
from wholesale 2008 -> 2013 replacements.  Make sure to only use the
new -p1003.1-2013 argument for cases where "IEEE Std 1003.1(TM)-2008/
Cor 1-2013, IEEE Standard for Information Technology--Portable
Operating System Interface (POSIX(R)), Technical Corrigendum 1"
actually changes something in the standard with respect to the
specific function documented in the manual you touch.  Otherwise,
please continue using .St -p1003.1-2008.

Triggered by a similar, but slightly incorrect patch from jmc@@;
ok guenther@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.223 2013/12/25 14:09:32 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: December 25 2013 $
d1308 1
a1308 1
.Ar 1
d1310 1
a1310 1
.Ar 2
d1312 1
a1312 1
.Ar 3
d1314 1
a1314 1
.Ar 3p
d1316 1
a1316 1
.Ar 4
d1318 1
a1318 1
.Ar 5
d1320 1
a1320 1
.Ar 6
d1322 1
a1322 1
.Ar 7
d1324 1
a1324 1
.Ar 8
d1326 1
a1326 1
.Ar 9
d1328 1
a1328 1
.Ar X11
d1330 1
a1330 1
.Ar X11R6
d1332 1
a1332 1
.Ar unass
d1334 1
a1334 1
.Ar local
d1336 1
a1336 1
.Ar draft
d1339 1
a1339 1
.Ar paper
d1342 1
a1342 1
.Dq 1
d1348 1
a1348 1
.Ar USD
d1350 1
a1350 1
.Ar PS1
d1352 1
a1352 1
.Ar AMD
d1354 1
a1354 1
.Ar SMM
d1356 1
a1356 1
.Ar URM
d1358 1
a1358 1
.Ar PRM
d1360 1
a1360 1
.Ar KM
d1362 1
a1362 1
.Ar IND
d1364 1
a1364 1
.Ar MMI
d1366 1
a1366 1
.Ar LOCAL
d1368 1
a1368 1
.Ar LOC
d1371 1
a1371 1
.Ar CON
d3148 1
a3148 1
.Fl offset Ar center
d3150 1
a3150 1
.Fl offset Ar right .
@


1.223
log
@Support .St -xsh4.2, the System Interfaces part of the original Single
UNIX Specification.  As this one appears to be used in the wild and we
already have -xpg4.2 and even -xsh5, it makes sense to add this one.
Note that calling the original SUS XPG4.2 appears to be more common
than calling it SUSv1, so it's ok that we don't have .St -susv1.
From Sascha Wildner <saw at online dot de> (DragonFly) via Franco Fichtner.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.222 2013/11/02 20:39:49 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: November 2 2013 $
d2372 2
@


1.222
log
@While answering a question asked by espie@@, i noticed that .Fd is not
completely obsolete, but still somewhat useful for listing preprocessor
directives, in particular in the SYNOPSIS.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.221 2013/10/06 17:01:52 schwarze Exp $
d4 1
a4 1
.\" Copyright (c) 2010, 2011 Ingo Schwarze <schwarze@@openbsd.org>
d18 1
a18 1
.Dd $Mdocdate: October 6 2013 $
d2446 2
@


1.221
log
@The .Lb arguments wants a "lib" prefix;
from Sascha Wildner via Franco Fichtner (DragonFly);
also fixing the same in the mdoc(7) example while i'm about it.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.220 2013/08/14 15:08:31 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: August 14 2013 $
d480 1
d1411 1
a1411 1
for special-purpose constants and
d1413 4
a1416 1
for variable symbols.
d1577 4
a1580 2
Historically used to document include files.
This usage has been deprecated in favour of
d1582 15
a1596 1
Do not use this macro.
d1599 2
a1600 1
.Sx MANUAL STRUCTURE
d1602 1
a1602 1
.Sx \&In .
@


1.220
log
@Use text production macros to document themselves.
Part of the patch was sent in by Jan Stary <hans at stare dot cz>,
another part was added by jmc@@, the rest was added by myself;
ok jmc@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.219 2013/07/13 19:41:16 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: July 13 2013 $
d1862 1
a1862 1
.Dl \&.Lb mdoc
@


1.219
log
@For citing the names and email addresses of authors,
consistently use the style ".An name Aq Mt email".

Triggered by a question from Jan Stary <hans at stare dot cz>,
ok jmc@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.218 2013/06/19 21:20:27 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: June 19 2013 $
d714 3
a716 1
Formats an AT&T version.
d1094 3
a1096 1
Format the BSD/OS version provided as an argument, or a default value if
d1116 3
a1118 1
Format the BSD version provided as an argument, or a default value if no
d1414 3
a1416 1
Format the DragonFly BSD version provided as an argument, or a default
d2485 3
a2487 1
Format the UNIX name.
@


1.218
log
@Add .St values for POSIX 1003.1d, 1003.1j, and 1003.1q.
Tweak descriptions of the other POSIX 1003.1<letter> standards.
Sort a few others into their proper places.

From Philip Guenther@@ during t2k13.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.217 2013/04/28 07:54:01 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: April 28 2013 $
d660 1
a660 1
.Dl \&.An Kristaps Dzonsons \&Aq kristaps@@bsd.lv
d1905 1
d3172 1
a3172 2
.An Kristaps Dzonsons ,
.Mt kristaps@@bsd.lv .
@


1.217
log
@- (mdoc.7) fix Xr to self
- double word fix
from jmc@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.216 2012/08/29 23:38:50 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: August 29 2012 $
d2350 2
d2356 6
d2366 2
a2369 4
.It \-p1003.2
.St -p1003.2
.It \-p1387.2
.St -p1387.2
@


1.216
log
@1) Remove documentation of the groff-1.15 compatibility quirk
of suppressing spacing before a third .Xr argument
because that quirk was removed in mdoc_macro.c rev. 1.113.

2) Mark the "section" argument to .Xr as (syntactically) optional,
but still do not encourage omitting it.
The missing .Op was reported by espie@@.

Wording tweaked by and ok jmc@@, ok millert@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.215 2012/06/20 22:06:30 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: June 20 2012 $
d2086 1
a2086 1
.Xr mdoc 7
d2961 1
a2961 1
This section documents compatibility between mandoc and other other
@


1.215
log
@When i moved some low-level stuff from mdoc(7) and man(7)
to roff(7) some time ago, i forgot to adjust the cross-references.
Reported by Tim van der Molen <tbvdm at xs4all dot nl>, thanks.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.214 2012/01/03 10:18:05 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: January 3 2012 $
d2535 1
a2535 1
.D1 Pf \. Sx \&Xr Ar name section
d2537 1
a2537 1
The
d2541 2
a2542 8
are the name and section of the linked manual.
If
.Ar section
is followed by non-punctuation, an
.Sx \&Ns
is inserted into the token stream.
This behaviour is for compatibility with
GNU troff.
@


1.214
log
@Accommodate for ISO C11.  groff applied the same `St' argument on
03/01/2012.  From a tweaked patch (isoC-11 -> isoC-2011) by Ulrich
Sporlein: thanks!
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.213 2011/11/01 14:59:27 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: November 1 2011 $
d823 2
a824 2
A width using the syntax described in
.Sx Scaling Widths .
d929 2
a930 2
arguments accept
.Sx Scaling Widths
d959 3
a961 3
of one column, using either the
.Sx Scaling Widths
syntax or the string length of the argument.
d2572 2
a2573 2
argument must be formatted as described in
.Sx Scaling Widths .
@


1.213
log
@Clean up the description of .Dt:
- Volume and arch are both optional and not alternatives.
- Zap verbiage about what's obvious from the synopsis.
- For fixed argument strings, use .Cm, not .Ar.
Using lots of input from jmc@@.

Also, state that the list of valid architectures varies by OS.
If a downstream distribution wants to provide a specific list,
maintaining a local patch is the way to go.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.212 2011/09/27 21:49:23 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: September 27 2011 $
d2376 2
@


1.212
log
@even though .Bl is not callable, groff complains when it appears
unescaped on a macro line, so lets just escape it;
noticed by jmc@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.211 2011/09/26 23:07:31 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: September 26 2011 $
d1285 2
a1286 1
.Op Ar volume | arch
d1367 5
a1371 34
This specifies a specific relevant architecture.
If
.Ar volume
is not provided, it may be used in its place, else it may be used
subsequent that.
It, too, is optional.
It must be one of
.Ar alpha ,
.Ar amd64 ,
.Ar amiga ,
.Ar arc ,
.Ar arm ,
.Ar armish ,
.Ar aviion ,
.Ar hp300 ,
.Ar hppa ,
.Ar hppa64 ,
.Ar i386 ,
.Ar landisk ,
.Ar loongson ,
.Ar luna88k ,
.Ar mac68k ,
.Ar macppc ,
.Ar mips64 ,
.Ar mvme68k ,
.Ar mvme88k ,
.Ar mvmeppc ,
.Ar pmax ,
.Ar sgi ,
.Ar socppc ,
.Ar sparc ,
.Ar sparc64 ,
.Ar sun3 ,
.Ar vax ,
d1373 7
a1379 1
.Ar zaurus .
@


1.211
log
@Reorganize part of the content:

1) Move the LANGUAGE SYNTAX from mdoc(7) and man(7) to roff(7),
it's common to both and it's actually roff syntax.
2) Move the MACRO SYNTAX down to the bottom, such that the less
technical parts MANUAL STRUCTURE and MACRO OVERVIEW get to the top.

Getting everything to again fit together after the reshuffling
required various adjustments; also adjust and improve
the DESCRIPTIONS while there.

feedback and "go ahead"  jmc@@ kristaps@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.210 2011/09/18 07:57:16 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: September 18 2011 $
d452 1
a452 1
.It Sx \&Ta Ta table cell separator in Sx Bl Fl column No lists
@


1.210
log
@Add a MACRO OVERVIEW, listing all macros ordered by purpose,
each with a one-line discription.  Use this when wondering
which macro fits best for your particular use case, and whether
there are alternatives.
feedback ond ok jmc@@, ok kristaps@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.209 2011/09/16 20:44:57 schwarze Exp $
d4 1
a4 1
.\" Copyright (c) 2010 Ingo Schwarze <schwarze@@openbsd.org>
d18 1
a18 1
.Dd $Mdocdate: September 16 2011 $
d23 1
a23 1
.Nd mdoc language reference
d27 11
a37 7
language is used to format
.Bx
.Ux
manuals.
This reference document describes its syntax, structure, and
usage.
The reference implementation for
d39 2
a40 1
formatting is
d46 1
a46 1
An
d48 1
a48 2
document follows simple rules: lines beginning with the control
character
d50 16
a65 3
are parsed for macros.
Lines not beginning with the control character are
interpreted within the scope of prior macros:
d70 2
a71 1
.Sh LANGUAGE SYNTAX
d73 13
a85 108
documents may contain only graphable 7-bit ASCII characters, the space
character, and, in certain circumstances, the tab character.
The back-space character
.Sq \e
indicates the start of an escape sequence for
.Sx Comments ,
.Sx Predefined Strings ,
and
.Sx Special Characters .
.Ss Comments
Text following an escaped double-quote
.Sq \e\(dq ,
whether in a macro or text line, is ignored to the end of
line.
A macro line beginning with a control character and comment escape
.Sq \&.\e\(dq
is also ignored.
Furthermore,
macro lines with only a control character and optional trailing
whitespace are
stripped from input.
.Pp
Examples:
.Bd -literal -offset indent -compact
\&.\e\(dq This is a comment line.
\&.\e\(dq The next line is ignored:
\&.
\&.Em Emphasis \e\(dq This is also a comment.
.Ed
.Ss Special Characters
Special characters are used to encode special glyphs and are rendered
differently across output media.
They may occur in both macro and text lines.
Sequences begin with the escape character
.Sq \e
followed by either an open-parenthesis
.Sq \&(
for two-character sequences; an open-bracket
.Sq \&[
for n-character sequences (terminated at a close-bracket
.Sq \&] ) ;
or a single one character sequence.
.Pp
Examples:
.Bl -tag -width Ds -offset indent -compact
.It Li \e(em
Two-letter em dash escape.
.It Li \ee
One-letter backslash escape.
.El
.Pp
See
.Xr mandoc_char 7
for a complete list.
.Ss Text Decoration
Terms may be text-decorated using the
.Sq \ef
escape followed by an indicator: B (bold), I (italic), R (regular), or P
(revert to previous mode).
A numerical representation 3, 2, or 1 (bold, italic, and regular,
respectively) may be used instead.
If a macro opens a font scope after calling
.Sq \ef ,
such as with
.Sx \&Bf ,
the
.Sq \ef
mode will be restored upon exiting the
.Sx \&Bf
scope.
.Pp
Examples:
.Bl -tag -width Ds -offset indent -compact
.It Li \efBbold\efR
Write in bold, then switch to regular font mode.
.It Li \efIitalic\efP
Write in italic, then return to previous font mode.
.El
.Pp
Text decoration is
.Em not
recommended for
.Nm ,
which encourages semantic annotation.
.Ss Predefined Strings
Predefined strings, like
.Sx Special Characters ,
mark special output glyphs.
Predefined strings are escaped with the slash-asterisk,
.Sq \e* :
single-character
.Sq \e*X ,
two-character
.Sq \e*(XX ,
and N-character
.Sq \e*[N] .
.Pp
Examples:
.Bl -tag -width Ds -offset indent -compact
.It Li \e*(Am
Two-letter ampersand predefined string.
.It Li \e*q
One-letter double-quote predefined string.
.El
.Pp
These strings are set using
.Xr roff 7 ,
although
d87 3
a89 133
consists of several pre-set escapes listed in
.Xr mandoc_char 7 .
.Ss Whitespace
Whitespace consists of the space character.
In text lines, whitespace is preserved within a line.
In macro lines, whitespace delimits arguments and is discarded.
.Pp
Unescaped trailing spaces are stripped from text line input unless in a
literal context.
In general, trailing whitespace on any input line is discouraged for
reasons of portability.
In the rare case that a blank character is needed at the end of an
input line, it may be forced by
.Sq \e\ \e& .
.Pp
In general, space characters can be rendered as literal
characters by using non-breaking space escapes or
.Sx Quotation .
.Pp
Blank text lines, which may include whitespace, are only permitted
within literal contexts.
If the first character of a text line is a space, that line is printed
with a leading newline.
.Ss Quotation
Macro arguments may be quoted with double-quotes to so that the
enclosed text is one literal term.
Quoted text, even if whitespace or if it would cause a macro invocation
when unquoted, is considered literal text.
.Pp
A quoted argument begins with a double-quote preceded by whitespace.
The next double-quote not pairwise adjacent to another double-quote
terminates the literal, regardless of surrounding whitespace.
.Pp
Examples:
.Bl -tag -width Ds -offset indent -compact
.It Li .Fn strlen \(dqconst char *s\(dq
Group arguments
.Qq const char *s
into one function argument.
If unspecified,
.Qq const ,
.Qq char ,
and
.Qq *s
would be considered separate arguments.
.Pq See Sx \&Fn .
.It Li .Op \(dqFl a\(dq
Consider
.Qq \&Fl a
as literal text instead of a flag macro.
.Pq Aee Sx \&Op , \&Fl .
.El
.Ss Scaling Widths
Many macros support scaled widths for their arguments.
The syntax for a scaled width is
.Sq Li [+-]?[0-9]*.[0-9]*[:unit:] ,
where a decimal must be preceded or proceeded by at least one digit.
Negative numbers, while accepted, are truncated to zero.
.Pp
The following scaling units are accepted:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It c
centimetre
.It i
inch
.It P
pica (~1/6 inch)
.It p
point (~1/72 inch)
.It f
synonym for
.Sq u
.It v
default vertical span
.It m
width of rendered
.Sq m
.Pq em
character
.It n
width of rendered
.Sq n
.Pq en
character
.It u
default horizontal span
.It M
mini-em (~1/100 em)
.El
.Pp
Using anything other than
.Sq m ,
.Sq n ,
.Sq u ,
or
.Sq v
is necessarily non-portable across output media.
See
.Sx COMPATIBILITY .
.Pp
Examples:
.Bl -tag -width Ds -offset indent -compact
.It Li \&.Bl -tag -width 2i
two-inch tagged list indentation
.Pq see Sx \&Bl
.It Li \&.sp 2v
two vertical spaces
.Pq see Sx \&sp
.El
.Ss Sentence Spacing
Sentences should terminate at the end of an input line.
By doing this, a formatter will be able to apply the proper amount of
spacing after the end of sentence (unescaped) period, exclamation mark,
or question mark followed by zero or more non-sentence closing
delimiters
.Po
.Sq \&) ,
.Sq \&] ,
.Sq \&' ,
.Sq \&"
.Pc .
.Pp
The proper spacing is also intelligently preserved if a sentence ends at
the boundary of a macro line.
.Pp
Examples:
.Bd -literal -offset indent -compact
Do not end sentences mid-line like this.  Instead,
end a sentence like this.
A macro would end like this:
\&.Xr mandoc 1 \&.
.Ed
d416 38
a453 79
.Sh MACRO SYNTAX
Macros are one to three three characters in length and begin with a
control character,
.Sq \&. ,
at the beginning of the line.
An arbitrary amount of whitespace may sit between the control character
and the macro name.
Thus, the following are equivalent:
.Bd -literal -offset indent
\&.Pp
\&.\ \ \ \&Pp
.Ed
.Pp
The syntax of a macro depends on its classification.
In this section,
.Sq \-arg
refers to macro arguments, which may be followed by zero or more
.Sq parm
parameters;
.Sq \&Yo
opens the scope of a macro; and if specified,
.Sq \&Yc
closes it out.
.Pp
The
.Em Callable
column indicates that the macro may also be called by passing its name
as an argument to another macro.
For example,
.Sq \&.Op \&Fl O \&Ar file
produces
.Sq Op Fl O Ar file .
To prevent a macro call and render the macro name literally,
escape it by prepending a zero-width space,
.Sq \e& .
For example,
.Sq \&Op \e&Fl O
produces
.Sq Op \&Fl O .
If a macro is not callable but its name appears as an argument
to another macro, it is interpreted as opaque text.
For example,
.Sq \&.Fl \&Sh
produces
.Sq Fl \&Sh .
.Pp
The
.Em Parsed
column indicates whether the macro may call other macros by receiving
their names as arguments.
If a macro is not parsed but the name of another macro appears
as an argument, it is interpreted as opaque text.
.Pp
The
.Em Scope
column, if applicable, describes closure rules.
.Ss Block full-explicit
Multi-line scope closed by an explicit closing macro.
All macros contains bodies; only
.Sx \&Bf
and
.Pq optionally
.Sx \&Bl
contain a head.
.Bd -literal -offset indent
\&.Yo \(lB\-arg \(lBparm...\(rB\(rB \(lBhead...\(rB
\(lBbody...\(rB
\&.Yc
.Ed
.Bl -column "MacroX" "CallableX" "ParsedX" "closed by XXX" -offset indent
.It Em Macro Ta Em Callable Ta Em Parsed Ta Em Scope
.It Sx \&Bd  Ta    \&No     Ta    \&No     Ta    closed by Sx \&Ed
.It Sx \&Bf  Ta    \&No     Ta    \&No     Ta    closed by Sx \&Ef
.It Sx \&Bk  Ta    \&No     Ta    \&No     Ta    closed by Sx \&Ek
.It Sx \&Bl  Ta    \&No     Ta    \&No     Ta    closed by Sx \&El
.It Sx \&Ed  Ta    \&No     Ta    \&No     Ta    opened by Sx \&Bd
.It Sx \&Ef  Ta    \&No     Ta    \&No     Ta    opened by Sx \&Bf
.It Sx \&Ek  Ta    \&No     Ta    \&No     Ta    opened by Sx \&Bk
.It Sx \&El  Ta    \&No     Ta    \&No     Ta    opened by Sx \&Bl
d455 9
a463 28
.Ss Block full-implicit
Multi-line scope closed by end-of-file or implicitly by another macro.
All macros have bodies; some
.Po
.Sx \&It Fl bullet ,
.Fl hyphen ,
.Fl dash ,
.Fl enum ,
.Fl item
.Pc
don't have heads; only one
.Po
.Sx \&It
in
.Sx \&Bl Fl column
.Pc
has multiple heads.
.Bd -literal -offset indent
\&.Yo \(lB\-arg \(lBparm...\(rB\(rB \(lBhead... \(lBTa head...\(rB\(rB
\(lBbody...\(rB
.Ed
.Bl -column "MacroX" "CallableX" "ParsedX" "closed by XXXXXXXXXXX" -offset indent
.It Em Macro Ta Em Callable Ta Em Parsed Ta Em Scope
.It Sx \&It Ta \&No Ta Yes  Ta closed by Sx \&It , Sx \&El
.It Sx \&Nd Ta \&No Ta \&No Ta closed by Sx \&Sh
.It Sx \&Nm Ta \&No Ta Yes  Ta closed by Sx \&Nm , Sx \&Sh , Sx \&Ss
.It Sx \&Sh Ta \&No Ta Yes  Ta closed by Sx \&Sh
.It Sx \&Ss Ta \&No Ta Yes  Ta closed by Sx \&Sh , Sx \&Ss
d465 10
a474 53
.Pp
Note that the
.Sx \&Nm
macro is a
.Sx Block full-implicit
macro only when invoked as the first macro
in a
.Em SYNOPSIS
section line, else it is
.Sx In-line .
.Ss Block partial-explicit
Like block full-explicit, but also with single-line scope.
Each has at least a body and, in limited circumstances, a head
.Po
.Sx \&Fo ,
.Sx \&Eo
.Pc
and/or tail
.Pq Sx \&Ec .
.Bd -literal -offset indent
\&.Yo \(lB\-arg \(lBparm...\(rB\(rB \(lBhead...\(rB
\(lBbody...\(rB
\&.Yc \(lBtail...\(rB

\&.Yo \(lB\-arg \(lBparm...\(rB\(rB \(lBhead...\(rB \
\(lBbody...\(rB \&Yc \(lBtail...\(rB
.Ed
.Bl -column "MacroX" "CallableX" "ParsedX" "closed by XXXX" -offset indent
.It Em Macro Ta Em Callable Ta Em Parsed Ta Em Scope
.It Sx \&Ac  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Ao
.It Sx \&Ao  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Ac
.It Sx \&Bc  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Bo
.It Sx \&Bo  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Bc
.It Sx \&Brc Ta    Yes      Ta    Yes      Ta    opened by Sx \&Bro
.It Sx \&Bro Ta    Yes      Ta    Yes      Ta    closed by Sx \&Brc
.It Sx \&Dc  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Do
.It Sx \&Do  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Dc
.It Sx \&Ec  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Eo
.It Sx \&Eo  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Ec
.It Sx \&Fc  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Fo
.It Sx \&Fo  Ta    \&No     Ta    \&No     Ta    closed by Sx \&Fc
.It Sx \&Oc  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Oo
.It Sx \&Oo  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Oc
.It Sx \&Pc  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Po
.It Sx \&Po  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Pc
.It Sx \&Qc  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Oo
.It Sx \&Qo  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Oc
.It Sx \&Re  Ta    \&No     Ta    \&No     Ta    opened by Sx \&Rs
.It Sx \&Rs  Ta    \&No     Ta    \&No     Ta    closed by Sx \&Re
.It Sx \&Sc  Ta    Yes      Ta    Yes      Ta    opened by Sx \&So
.It Sx \&So  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Sc
.It Sx \&Xc  Ta    Yes      Ta    Yes      Ta    opened by Sx \&Xo
.It Sx \&Xo  Ta    Yes      Ta    Yes      Ta    closed by Sx \&Xc
d476 19
a494 20
.Ss Block partial-implicit
Like block full-implicit, but with single-line scope closed by the
end of the line.
.Bd -literal -offset indent
\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBbody...\(rB \(lBres...\(rB
.Ed
.Bl -column "MacroX" "CallableX" "ParsedX" -offset indent
.It Em Macro Ta Em Callable Ta Em Parsed
.It Sx \&Aq  Ta    Yes      Ta    Yes
.It Sx \&Bq  Ta    Yes      Ta    Yes
.It Sx \&Brq Ta    Yes      Ta    Yes
.It Sx \&D1  Ta    \&No     Ta    \&Yes
.It Sx \&Dl  Ta    \&No     Ta    Yes
.It Sx \&Dq  Ta    Yes      Ta    Yes
.It Sx \&Op  Ta    Yes      Ta    Yes
.It Sx \&Pq  Ta    Yes      Ta    Yes
.It Sx \&Ql  Ta    Yes      Ta    Yes
.It Sx \&Qq  Ta    Yes      Ta    Yes
.It Sx \&Sq  Ta    Yes      Ta    Yes
.It Sx \&Vt  Ta    Yes      Ta    Yes
d496 9
a504 23
.Pp
Note that the
.Sx \&Vt
macro is a
.Sx Block partial-implicit
only when invoked as the first macro
in a
.Em SYNOPSIS
section line, else it is
.Sx In-line .
.Ss Special block macro
The
.Sx \&Ta
macro can only be used below
.Sx \&It
in
.Sx \&Bl Fl column
lists.
It delimits blocks representing table cells;
these blocks have bodies, but no heads.
.Bl -column "MacroX" "CallableX" "ParsedX" "closed by XXXX" -offset indent
.It Em Macro Ta Em Callable Ta Em Parsed Ta Em Scope
.It Sx \&Ta  Ta    Yes      Ta    Yes    Ta closed by Sx \&Ta , Sx \&It
d506 8
a513 90
.Ss In-line
Closed by the end of the line, fixed argument lengths,
and/or subsequent macros.
In-line macros have only text children.
If a number (or inequality) of arguments is
.Pq n ,
then the macro accepts an arbitrary number of arguments.
.Bd -literal -offset indent
\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBargs...\(rB \(lBres...\(rB

\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBargs...\(rB Yc...

\&.Yo \(lB\-arg \(lBval...\(rB\(rB arg0 arg1 argN
.Ed
.Bl -column "MacroX" "CallableX" "ParsedX" "Arguments" -offset indent
.It Em Macro Ta Em Callable Ta Em Parsed Ta Em Arguments
.It Sx \&%A  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%B  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%C  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%D  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%I  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%J  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%N  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%O  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%P  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%Q  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%R  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%T  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%U  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&%V  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&Ad  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&An  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Ap  Ta    Yes      Ta    Yes      Ta    0
.It Sx \&Ar  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&At  Ta    Yes      Ta    Yes      Ta    1
.It Sx \&Bsx Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Bt  Ta    \&No     Ta    \&No     Ta    0
.It Sx \&Bx  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Cd  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Cm  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Db  Ta    \&No     Ta    \&No     Ta    1
.It Sx \&Dd  Ta    \&No     Ta    \&No     Ta    n
.It Sx \&Dt  Ta    \&No     Ta    \&No     Ta    n
.It Sx \&Dv  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Dx  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Em  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&En  Ta    \&No     Ta    \&No     Ta    0
.It Sx \&Er  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Es  Ta    \&No     Ta    \&No     Ta    0
.It Sx \&Ev  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Ex  Ta    \&No     Ta    \&No     Ta    n
.It Sx \&Fa  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Fd  Ta    \&No     Ta    \&No     Ta    >0
.It Sx \&Fl  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Fn  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Fr  Ta    \&No     Ta    \&No     Ta    n
.It Sx \&Ft  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Fx  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Hf  Ta    \&No     Ta    \&No     Ta    n
.It Sx \&Ic  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&In  Ta    \&No     Ta    \&No     Ta    1
.It Sx \&Lb  Ta    \&No     Ta    \&No     Ta    1
.It Sx \&Li  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Lk  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Lp  Ta    \&No     Ta    \&No     Ta    0
.It Sx \&Ms  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Mt  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Nm  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&No  Ta    Yes      Ta    Yes      Ta    0
.It Sx \&Ns  Ta    Yes      Ta    Yes      Ta    0
.It Sx \&Nx  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Os  Ta    \&No     Ta    \&No     Ta    n
.It Sx \&Ot  Ta    \&No     Ta    \&No     Ta    n
.It Sx \&Ox  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Pa  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Pf  Ta    Yes      Ta    Yes      Ta    1
.It Sx \&Pp  Ta    \&No     Ta    \&No     Ta    0
.It Sx \&Rv  Ta    \&No     Ta    \&No     Ta    n
.It Sx \&Sm  Ta    \&No     Ta    \&No     Ta    1
.It Sx \&St  Ta    \&No     Ta    Yes      Ta    1
.It Sx \&Sx  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Sy  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Tn  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Ud  Ta    \&No     Ta    \&No     Ta    0
.It Sx \&Ux  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Va  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Vt  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&Xr  Ta    Yes      Ta    Yes      Ta    >0
.It Sx \&br  Ta    \&No     Ta    \&No     Ta    0
.It Sx \&sp  Ta    \&No     Ta    \&No     Ta    1
d515 11
a525 31
.Ss Delimiters
When a macro argument consists of one single input character
considered as a delimiter, the argument gets special handling.
This does not apply when delimiters appear in arguments containing
more than one character.
Consequently, to prevent special handling and just handle it
like any other argument, a delimiter can be escaped by prepending
a zero-width space
.Pq Sq \e& .
In text lines, delimiters never need escaping, but may be used
as normal punctuation.
.Pp
For many macros, when the leading arguments are opening delimiters,
these delimiters are put before the macro scope,
and when the trailing arguments are closing delimiters,
these delimiters are put after the macro scope.
For example,
.Pp
.D1 Pf \. \&Aq "( [ word ] ) ."
.Pp
renders as:
.Pp
.D1 Aq ( [ word ] ) .
.Pp
Opening delimiters are:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It \&(
left parenthesis
.It \&[
left bracket
d527 13
a539 20
.Pp
Closing delimiters are:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It \&.
period
.It \&,
comma
.It \&:
colon
.It \&;
semicolon
.It \&)
right parenthesis
.It \&]
right bracket
.It \&?
question mark
.It \&!
exclamation mark
d541 14
a554 169
.Pp
Note that even a period preceded by a backslash
.Pq Sq \e.\&
gets this special handling; use
.Sq \e&.
to prevent that.
.Pp
Many in-line macros interrupt their scope when they encounter
delimiters, and resume their scope when more arguments follow that
are not delimiters.
For example,
.Pp
.D1 Pf \. \&Fl "a ( b | c \e*(Ba d ) e"
.Pp
renders as:
.Pp
.D1 Fl a ( b | c \*(Ba d ) e
.Pp
This applies to both opening and closing delimiters,
and also to the middle delimiter:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It \&|
vertical bar
.El
.Pp
As a special case, the predefined string \e*(Ba is handled and rendered
in the same way as a plain
.Sq \&|
character.
Using this predefined string is not recommended in new manuals.
.Sh MACRO OVERVIEW
This overview is sorted such that macros of similar purpose are listed
together, to help find the best macro for any given purpose.
Deprecated macros are not included in the overview, but can be found
in the alphabetical reference below.
.Ss Document preamble and NAME section macros
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Dd Ta document date: Cm $Mdocdate: September 17 2011 $ | Ar month day , year
.It Sx \&Dt Ta document title: Ar TITLE section Op Ar volume | arch
.It Sx \&Os Ta operating system version: Op Ar system Op Ar version
.It Sx \&Nm Ta document name (one argument)
.It Sx \&Nd Ta document description (one line)
.El
.Ss Sections and cross references
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Sh Ta section header (one line)
.It Sx \&Ss Ta subsection header (one line)
.It Sx \&Sx Ta internal cross reference to a section or subsection
.It Sx \&Xr Ta cross reference to another manual page: Ar name section
.It Sx \&Pp , \&Lp Ta start a text paragraph (no arguments)
.El
.Ss Displays and lists
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Bd , \&Ed Ta display block:
.Fl Ar type
.Op Fl offset Ar width
.Op Fl compact
.It Sx \&D1 Ta indented display (one line)
.It Sx \&Dl Ta indented literal display (one line)
.It Sx \&Bl , \&El Ta list block:
.Fl Ar type
.Op Fl width Ar val
.Op Fl offset Ar val
.Op Fl compact
.It Sx \&It Ta list item (syntax depends on Fl Ar type )
.It Sx \&Ta Ta table cell separator in Sx Bl Fl column No lists
.It Sx \&Rs , \&%* , \&Re Ta bibliographic block (references)
.El
.Ss Spacing control
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Pf Ta prefix, no following horizontal space (one argument)
.It Sx \&Ns Ta roman font, no preceding horizontal space (no arguments)
.It Sx \&Ap Ta apostrophe without surrounding whitespace (no arguments)
.It Sx \&Sm Ta switch horizontal spacing mode: Cm on | off
.It Sx \&Bk , \&Ek Ta keep block: Fl words
.It Sx \&br Ta force output line break in text mode (no arguments)
.It Sx \&sp Ta force vertical space: Op Ar height
.El
.Ss Semantic markup for command line utilities:
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Nm Ta start a SYNOPSIS block with the name of a utility
.It Sx \&Fl Ta command line options (flags) (>=0 arguments)
.It Sx \&Cm Ta command modifier (>0 arguments)
.It Sx \&Ar Ta command arguments (>=0 arguments)
.It Sx \&Op , \&Oo , \&Oc Ta optional syntax elements (enclosure)
.It Sx \&Ic Ta internal or interactive command (>0 arguments)
.It Sx \&Ev Ta environmental variable (>0 arguments)
.It Sx \&Pa Ta file system path (>=0 arguments)
.El
.Ss Semantic markup for function libraries:
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Lb Ta function library (one argument)
.It Sx \&In Ta include file (one argument)
.It Sx \&Ft Ta function type (>0 arguments)
.It Sx \&Fo , \&Fc Ta function block: Ar funcname
.It Sx \&Fn Ta function name:
.Op Ar functype
.Ar funcname
.Oo
.Op Ar argtype
.Ar argname
.Oc
.It Sx \&Fa Ta function argument (>0 arguments)
.It Sx \&Vt Ta variable type (>0 arguments)
.It Sx \&Va Ta variable name (>0 arguments)
.It Sx \&Dv Ta defined variable or preprocessor constant (>0 arguments)
.It Sx \&Er Ta error constant (>0 arguments)
.It Sx \&Ev Ta environmental variable (>0 arguments)
.El
.Ss Various semantic markup:
.Bl -column "Brq, Bro, Brc" description
.It Sx \&An Ta author name (>0 arguments)
.It Sx \&Lk Ta hyperlink: Ar uri Op Ar name
.It Sx \&Mt Ta Do mailto Dc hyperlink: Ar address
.It Sx \&Cd Ta kernel configuration declaration (>0 arguments)
.It Sx \&Ad Ta memory address (>0 arguments)
.It Sx \&Ms Ta mathematical symbol (>0 arguments)
.It Sx \&Tn Ta tradename (>0 arguments)
.El
.Ss Physical markup
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Em Ta italic font or underline (emphasis) (>0 arguments)
.It Sx \&Sy Ta boldface font (symbolic) (>0 arguments)
.It Sx \&Li Ta typewriter font (literal) (>0 arguments)
.It Sx \&No Ta return to roman font (normal) (no arguments)
.It Sx \&Bf , \&Ef Ta font block:
.Op Fl Ar type | Cm \&Em | \&Li | \&Sy
.El
.Ss Physical enclosures
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Dq , \&Do , \&Dc Ta enclose in typographic double quotes: Dq text
.It Sx \&Qq , \&Qo , \&Qc Ta enclose in typewriter double quotes: Qq text
.It Sx \&Sq , \&So , \&Sc Ta enclose in single quotes: Sq text
.It Sx \&Ql Ta single-quoted literal text: Ql text
.It Sx \&Pq , \&Po , \&Pc Ta enclose in parentheses: Pq text
.It Sx \&Bq , \&Bo , \&Bc Ta enclose in square brackets: Bq text
.It Sx \&Brq , \&Bro , \&Brc Ta enclose in curly braces: Brq text
.It Sx \&Aq , \&Ao , \&Ac Ta enclose in angle brackets: Aq text
.It Sx \&Eo , \&Ec Ta generic enclosure
.El
.Ss Text production
.Bl -column "Brq, Bro, Brc" description
.It Sx \&Ex Fl std Ta standard command exit values: Op Ar utility ...
.It Sx \&Rv Fl std Ta standard function return values: Op Ar function ...
.It Sx \&St Ta reference to a standards document (one argument)
.It Sx \&Ux Ta Ux
.It Sx \&At Ta At
.It Sx \&Bx Ta Bx
.It Sx \&Bsx Ta Bsx
.It Sx \&Nx Ta Nx
.It Sx \&Fx Ta Fx
.It Sx \&Ox Ta Ox
.It Sx \&Dx Ta Dx
.El
.Sh REFERENCE
This section is a canonical reference of all macros, arranged
alphabetically.
For the scoping of individual macros, see
.Sx MACRO SYNTAX .
.Ss \&%A
Author name of an
.Sx \&Rs
block.
Multiple authors should each be accorded their own
.Sx \%%A
line.
Author names should be ordered with full or abbreviated forename(s)
first, then full surname.
d2394 489
a2882 52
.It \-isoC-tcor2
.St -isoC-tcor2
.It \-isoC-99
.St -isoC-99
.It \-iso9945-1-90
.St -iso9945-1-90
.It \-iso9945-1-96
.St -iso9945-1-96
.It \-iso9945-2-93
.St -iso9945-2-93
.It \-ansiC
.St -ansiC
.It \-ansiC-89
.St -ansiC-89
.It \-ansiC-99
.St -ansiC-99
.It \-ieee754
.St -ieee754
.It \-iso8802-3
.St -iso8802-3
.It \-iso8601
.St -iso8601
.It \-ieee1275-94
.St -ieee1275-94
.It \-xpg3
.St -xpg3
.It \-xpg4
.St -xpg4
.It \-xpg4.2
.St -xpg4.2
.It \-xpg4.3
.St -xpg4.3
.It \-xbd5
.St -xbd5
.It \-xcu5
.St -xcu5
.It \-xsh5
.St -xsh5
.It \-xns5
.St -xns5
.It \-xns5.2
.St -xns5.2
.It \-xns5.2d2.0
.St -xns5.2d2.0
.It \-xcurses4.2
.St -xcurses4.2
.It \-susv2
.St -susv2
.It \-susv3
.St -susv3
.It \-svid4
.St -svid4
d2884 11
a2894 4
.Ss \&Sx
Reference a section or subsection in the same manual page.
The referenced section or subsection name must be identical to the
enclosed argument, including whitespace.
d2896 5
a2900 2
Examples:
.Dl \&.Sx MANUAL STRUCTURE
d2902 1
a2902 9
See also
.Sx \&Sh
and
.Sx \&Ss .
.Ss \&Sy
Format enclosed arguments in symbolic
.Pq Dq boldface .
Note that this is a presentation term and should not be used for
stylistically decorating technical terms.
d2904 1
a2904 13
See also
.Sx \&Bf ,
.Sx \&Em ,
.Sx \&Li ,
and
.Sx \&No .
.Ss \&Ta
Table cell separator in
.Sx \&Bl Fl column
lists; can only be used below
.Sx \&It .
.Ss \&Tn
Format a tradename.
d2906 1
a2906 4
Since this macro is often implemented to use a small caps font,
it has historically been used for acronyms (like ASCII) as well.
Such usage is not recommended because it would use the same macro
sometimes for semantical annotation, sometimes for physical formatting.
d2908 1
a2908 8
Examples:
.Dl \&.Tn IBM
.Ss \&Ud
Prints out
.Dq currently under development.
.Ss \&Ux
Format the UNIX name.
Accepts no argument.
d2910 6
a2915 2
Examples:
.Dl \&.Ux
d2917 1
a2917 11
See also
.Sx \&At ,
.Sx \&Bsx ,
.Sx \&Bx ,
.Sx \&Dx ,
.Sx \&Fx ,
.Sx \&Nx ,
and
.Sx \&Ox .
.Ss \&Va
A variable name.
d2919 18
a2936 18
Examples:
.Dl \&.Va foo
.Dl \&.Va const char *bar ;
.Ss \&Vt
A variable type.
This is also used for indicating global variables in the
.Em SYNOPSIS
section, in which case a variable name is also specified.
Note that it accepts
.Sx Block partial-implicit
syntax when invoked as the first macro on an input line in the
.Em SYNOPSIS
section, else it accepts ordinary
.Sx In-line
syntax.
In the former case, this macro starts a new output line,
and a blank line is inserted in front if there is a preceding
function definition or include directive.
d2938 5
a2942 3
Note that this should not be confused with
.Sx \&Ft ,
which is used for function return types.
d2944 4
a2947 3
Examples:
.Dl \&.Vt unsigned char
.Dl \&.Vt extern const char * const sys_signame[] \&;
d2949 1
a2949 19
See also
.Sx MANUAL STRUCTURE
and
.Sx \&Va .
.Ss \&Xc
Close a scope opened by
.Sx \&Xo .
.Ss \&Xo
Extend the header of an
.Sx \&It
macro or the body of a partial-implicit block macro
beyond the end of the input line.
This macro originally existed to work around the 9-argument limit
of historic
.Xr roff 7 .
.Ss \&Xr
Link to another manual
.Pq Qq cross-reference .
Its syntax is as follows:
d2951 1
a2951 1
.D1 Pf \. Sx \&Xr Ar name section
d2953 1
a2953 12
The
.Ar name
and
.Ar section
are the name and section of the linked manual.
If
.Ar section
is followed by non-punctuation, an
.Sx \&Ns
is inserted into the token stream.
This behaviour is for compatibility with
GNU troff.
d2955 2
a2956 8
Examples:
.Dl \&.Xr mandoc 1
.Dl \&.Xr mandoc 1 \&;
.Dl \&.Xr mandoc 1 \&Ns s behaviour
.Ss \&br
Emits a line-break.
This macro should not be used; it is implemented for compatibility with
historical manuals.
d2958 4
a2961 8
Consider using
.Sx \&Pp
in the event of natural paragraph breaks.
.Ss \&sp
Emits vertical space.
This macro should not be used; it is implemented for compatibility with
historical manuals.
Its syntax is as follows:
d2963 23
a2985 9
.D1 Pf \. Sx \&sp Op Ar height
.Pp
The
.Ar height
argument must be formatted as described in
.Sx Scaling Widths .
If unspecified,
.Sx \&sp
asserts a single vertical space.
@


1.209
log
@support ".St -iso8601"; committing on behalf of jmc@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.208 2011/09/02 19:37:35 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: September 2 2011 $
d1006 124
@


1.208
log
@Fix typos and spelling errors found by demandoc -w | spell -b.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.207 2011/08/30 13:14:01 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: August 30 2011 $
d2879 2
@


1.207
log
@Order -column lists to have the arguments follow `-column'.  From a
patch by Jason McIntyre.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.206 2011/08/30 12:16:36 kristaps Exp $
d2305 1
a2305 1
is only recognized as a macro when called by other macros,
d3097 1
a3097 1
does not recognize trailing punctuation characters when they immediately
d3209 1
a3209 1
Groff does not implement centered and flush-right rendering either,
@


1.206
log
@Remove unnecessary `Pp'/`-compat' combination for column lists.
Directly from a patch by Jason McIntyre.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.205 2011/08/19 13:07:22 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: August 19 2011 $
d692 1
a692 1
.Bl -column -offset indent "MacroX" "CallableX" "ParsedX" "closed by XXX"
d724 1
a724 1
.Bl -column -offset indent "MacroX" "CallableX" "ParsedX" "closed by XXXXXXXXXXX"
@


1.205
log
@Bring man.7's LANGUAGE SYNTAX in line with mdoc.7.  While here, change
out the \*q escapes.  Also fix some spelling typos in both manuals.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.204 2011/08/19 12:55:33 kristaps Exp $
d692 1
a692 2
.Pp
.Bl -column -compact -offset indent "MacroX" "CallableX" "ParsedX" "closed by XXX"
d724 1
a724 2
.Pp
.Bl -column -compact -offset indent "MacroX" "CallableX" "ParsedX" "closed by XXXXXXXXXXX"
d759 1
a759 2
.Pp
.Bl -column "MacroX" "CallableX" "ParsedX" "closed by XXXX" -compact -offset indent
d792 1
a792 2
.Pp
.Bl -column "MacroX" "CallableX" "ParsedX" -compact -offset indent
d827 1
a827 2
.Pp
.Bl -column "MacroX" "CallableX" "ParsedX" "closed by XXXX" -compact -offset indent
d845 1
a845 2
.Pp
.Bl -column "MacroX" "CallableX" "ParsedX" "Arguments" -compact -offset indent
@


1.204
log
@Make LANGUAGE SYNTAX examples a bit more explanatory.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.203 2011/08/19 10:19:55 kristaps Exp $
d179 1
a179 1
In general, space characters can be considered as non-whitespace
d202 1
a202 1
into one functinon argument.
@


1.203
log
@First, use \(dq instead of \*q for double-quote.  Second, use `Li' to
note literal text in "Examples:" parts.  Finally, move parts of
Quotation related to keeping whitespace into Whitespace and clean up the
text to be a bit clearer.  Examples can be added back in at will, but
now it follows the general layout of explanation followed by examples.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.202 2011/08/18 08:58:44 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: August 18 2011 $
d101 1
a101 1
em dash
d103 1
a103 1
backslash
d129 1
a129 1
write in bold, then switch to regular
d131 1
a131 1
write in italic, then return to previous
d155 3
a157 3
ampersand
.It Li \e*(Ba
vertical bar
d200 1
a200 1
groups
d202 8
a209 2
into one term
.Pq see Sx \&Fn
d211 1
a211 1
considers
d213 2
a214 2
as literal text
.Pq see Sx \&Op , \&Fl
@


1.202
log
@Replace the old `An'/`Aq' AUTHORS note with `An'/`Mt'.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.201 2011/08/17 22:20:14 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: August 17 2011 $
d66 1
a66 1
.Sq \e\*q ,
d70 1
a70 1
.Sq \&.\e\*q
d79 2
a80 2
\&.\e\*q This is a comment line.
\&.\e\*q The next line is ignored:
d82 1
a82 1
\&.Em Emphasis \e\*q This is also a comment.
d100 1
a100 1
.It \e(em
d102 1
a102 1
.It \ee
d128 1
a128 1
.It \efBbold\efR
d130 1
a130 1
.It \efIitalic\efP
d154 1
a154 1
.It \e*(Am
d156 1
a156 1
.It \e*(Ba
d179 4
d188 4
a191 14
Macro arguments may be quoted with double-quotes; in this case,
whitespace within the quotes is retained as part of the argument.
For example,
.Pp
.D1 Pf \. \&Fn strlen "\(dqconst char *s\(dq"
.Pp
renders as
.Sq Fn strlen "const char *s" ,
while
.Pp
.D1 Pf \. \&Fn strlen "const char *s"
.Pp
would produce
.Sq Fn strlen const char *s .
d197 13
a209 14
In unquoted arguments, space characters can alternatively be included
by preceding them with a backslash
.Pq Sq \e\~ ,
but quoting is usually better for clarity.
.Pp
Note that any quoted text, even if it would cause a macro invocation
when unquoted, is considered literal text.
Thus, the following produces
.Sq Op "Fl a" :
.Bd -literal -offset indent
\&.Op "Fl a"
.Ed
.Pp
In text lines, quotes are regarded as opaque text.
d261 1
a261 1
.It \&.Bl -tag -width 2i
d264 1
a264 1
.It \&.sp 2v
d328 3
a330 3
\&.\e\*q .Sh LIBRARY
\&.\e\*q For sections 2, 3, & 9 only.
\&.\e\*q Not used in OpenBSD.
d339 23
a361 23
\&.\e\*q .Sh IMPLEMENTATION NOTES
\&.\e\*q Not used in OpenBSD.
\&.\e\*q .Sh RETURN VALUES
\&.\e\*q For sections 2, 3, & 9 only.
\&.\e\*q .Sh ENVIRONMENT
\&.\e\*q For sections 1, 6, 7, & 8 only.
\&.\e\*q .Sh FILES
\&.\e\*q .Sh EXIT STATUS
\&.\e\*q For sections 1, 6, & 8 only.
\&.\e\*q .Sh EXAMPLES
\&.\e\*q .Sh DIAGNOSTICS
\&.\e\*q For sections 1, 4, 6, 7, & 8 only.
\&.\e\*q .Sh ERRORS
\&.\e\*q For sections 2, 3, & 9 only.
\&.\e\*q .Sh SEE ALSO
\&.\e\*q .Xr foobar 1
\&.\e\*q .Sh STANDARDS
\&.\e\*q .Sh HISTORY
\&.\e\*q .Sh AUTHORS
\&.\e\*q .Sh CAVEATS
\&.\e\*q .Sh BUGS
\&.\e\*q .Sh SECURITY CONSIDERATIONS
\&.\e\*q Not used in OpenBSD.
d442 2
a443 2
\&.Cd \*qit* at isa? port 0x2e\*q
\&.Cd \*qit* at isa? port 0x4e\*q
d2099 2
a2100 2
.Dl \&.Fn \*qint funcname\*q \*qint arg0\*q \*qint arg1\*q
.Dl \&.Fn funcname \*qint arg0\*q
d2365 1
a2365 1
.Dl \&.Lk http://bsd.lv \*qThe BSD.lv Project\*q
@


1.201
log
@Add example of comments in man.7 and mdoc.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.200 2011/08/17 20:34:53 kristaps Exp $
d3272 2
a3273 1
.An Kristaps Dzonsons Aq kristaps@@bsd.lv .
@


1.200
log
@Clean up and normalise the LANGUAGE SYNTAX section in mdoc.7:

 - make examples trail each section
 - make explanations more concise
 - remove references to troff

ok Jason McIntyre.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.199 2011/08/16 23:44:58 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: August 16 2011 $
d76 8
d271 1
a271 1
.It \&.br 2v
d273 1
a273 1
.Pq see Sx \&br
@


1.199
log
@Replace the .Fl examples by others exhibiting the same features,
but avoiding use of .Nm, because letting .Nm call other macros
is unusual style, and we don't want unusual style in examples.
Issue brought up by kristaps@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.198 2011/08/16 23:37:39 schwarze Exp $
d33 3
a35 1
The reference implementation is
d39 1
a39 1
section describes compatibility with other troff \-mdoc implementations.
d47 1
a47 1
Text lines, those not beginning with the control character, are
d57 7
a63 3
.Pp
If the first character of a text line is a space, that line is printed
with a leading newline.
d65 1
a65 1
Text following a
d69 2
a70 2
A macro line with only a control character and comment escape,
.Sq \&.\e\*q ,
d72 3
a74 1
Macro lines with only a control character and optional whitespace are
d77 3
a79 1
Special characters may occur in both macro and text lines.
d89 9
a100 6
Examples include
.Sq \e(em
.Pq em-dash
and
.Sq \ee
.Pq back-slash .
d104 3
a106 6
escape followed by an indicator: B (bold), I (italic), R (Roman), or P
(revert to previous mode):
.Pp
.Dl \efBbold\efR \efIitalic\efP
.Pp
A numerical representation 3, 2, or 1 (bold, italic, and Roman,
d118 9
a126 1
Note this form is
d132 1
a132 5
Historically,
troff
also defined a set of package-specific
.Dq predefined strings ,
which, like
d134 1
a134 1
mark special output characters and strings by way of input codes.
d143 15
a157 9
See
.Xr mandoc_char 7
for a complete list.
Examples include
.Sq \e*(Am
.Pq ampersand
and
.Sq \e*(Ba
.Pq vertical bar .
d160 2
a161 4
In text lines, whitespace is preserved within a line; unescaped
trailing spaces are stripped from input (unless in a literal context).
Blank text lines, which may include whitespace, are only permitted
within literal contexts.
d163 4
a166 2
In general, trailing whitespace on input lines is discouraged
for reasons of clarity and portability.
d171 4
a174 1
In macro lines, whitespace delimits arguments and is discarded.
d210 2
a211 7
Many macros support scaled widths for their arguments, such as
stipulating a two-inch list indentation with the following:
.Bd -literal -offset indent
\&.Bl -tag -width 2i
.Ed
.Pp
The syntax for scaled widths is
d215 1
d257 10
d268 2
a269 3
When composing a manual, make sure that sentences end at the end of
a line.
By doing so, front-ends will be able to apply the proper amount of
a281 1
For example:
d283 7
a289 2
.Dl \&.Xr mandoc 1 \&.
.Dl \&.Fl T \&Ns \&Cm ascii \&.
@


1.198
log
@More information about lots of macros, many new examples, and various fixes.
ok kristaps@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.197 2011/08/10 14:07:23 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: August 10 2011 $
d2039 5
a2043 5
.Dl ".Nm cat Fl v No considered harmful"
.Dl ".Nm cp Fl pR Ar source ... directory"
.Dl ".Nm find Ar dir Fl type Cm d Fl name Pa CVS"
.Dl ".Nm kill Fl Ar signal_number pid"
.Dl ".Nm su Fl"
@


1.197
log
@Allow `Sx' and `Ss' to have child nodes.  Fixes manuals in NetBSD.
Originally pointed out by joerg@@ then again by Thomas Klausner by way of
Nicolas Joy.  Note: don't use these constructions as you can't link to
the sections with `Sx'.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.196 2011/08/03 21:25:23 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: August 3 2011 $
d474 15
d550 4
d555 2
d567 2
a568 1
A brief history of the subject, including where support first appeared.
d1201 1
a1201 1
Centre-justify each line.
d1206 2
a1207 1
Left- and right-justify the block.
d1209 2
a1210 1
Do not justify the block at all.
d1212 2
d1215 2
a1216 1
Only left-justify the block.
d1218 4
a1221 2
An alias for
.Fl literal .
d1237 1
a1237 1
the width of standard indentation;
d1414 3
a1416 1
.\" but with additional formatting to the head.
d1419 1
d1459 7
d1542 1
a1542 1
.Dq is currently in beta test .
d1548 1
d1908 2
a1909 1
Denotes text that should be emphasised.
d1912 2
d1921 2
a1922 1
.Sx \&Sy ,
d1924 1
a1924 1
.Sx \&Li .
d2041 1
a2041 1
.Dl ".Nm find Ar dir Fl type Cm d Fl name Pa CVS
d2116 7
a2122 1
This macro is obsolete and not implemented.
d2165 7
a2171 1
This macro is obsolete and not implemented.
d2310 3
a2312 1
Denotes text that should be in a literal font mode.
d2316 3
d2321 2
a2322 1
.Sx \&Sy ,
d2324 1
a2324 1
.Sx \&Em .
d2368 2
a2369 2
.Dl \&.Sx \&Nd mdoc language reference
.Dl \&.Sx \&Nd format and display UNIX manuals
d2421 9
a2429 3
A
.Dq noop
macro used to terminate prior macro contexts.
d2432 13
a2444 1
.Dl \&.Sx \&Fl ab \&No cd \&Fl ef
d2446 6
a2451 3
Suppress a space.
Following invocation, text is interpreted as free-form text until a
macro is encountered.
d2456 3
a2458 1
.Dl \&.Fl o \&Ns \&Ar output
d2536 2
a2537 1
Unknown usage.
d2539 4
a2542 2
.Em Remarks :
this macro has been deprecated.
d2578 1
a2578 1
Removes the space
d2580 1
a2580 1
between its arguments.
d2583 3
a2585 1
.D1 Pf \. \&Pf Ar prefix suffix
d2587 1
a2587 3
The
.Ar suffix
argument may be a macro.
d2590 7
a2596 1
.Dl \&.Pf \e. \&Sx \&Pf \&Ar prefix suffix
d2604 12
d2635 1
a2635 1
.Dq typewriter
d2749 1
a2749 1
.Dq typewriter
d2758 1
a2758 1
Begin a new sub-section.
d2761 6
a2766 4
there's no convention for sub-sections.
Conventional sections, as described in
.Sx MANUAL STRUCTURE ,
rarely have sub-sections.
d2878 2
a2879 2
Reference a section or sub-section.
The referenced section or sub-section name must be identical to the
d2897 1
d2900 1
a2900 1
.Sx \&Em .
d2909 5
d2918 1
a2918 1
.Dq currently under development .
d3214 1
a3214 1
.Xr mandoc_char 7
@


1.196
log
@Add small chunks of new text and better examples written from scratch,
filling gaps found by checking the MANUAL DOMAIN chapter in mdoc.samples(7).
While here, fix lots of minor issues.
feedback and ok jmc@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.195 2011/08/02 01:07:26 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: August 2 2011 $
d667 5
a671 5
.It Sx \&It  Ta    \&No     Ta    Yes      Ta    closed by Sx \&It , Sx \&El
.It Sx \&Nd  Ta    \&No     Ta    \&No     Ta    closed by Sx \&Sh
.It Sx \&Nm  Ta    \&No     Ta  Yes Ta closed by Sx \&Nm , Sx \&Sh , Sx \&Ss
.It Sx \&Sh  Ta    \&No     Ta    \&No     Ta    closed by Sx \&Sh
.It Sx \&Ss  Ta    \&No     Ta    \&No     Ta    closed by Sx \&Sh , Sx \&Ss
d2616 3
d2662 3
@


1.195
log
@The term "reserved terms" is too broad, so narrow it down
to "delimiters", and explain which special handling they get
as macro arguments.  Move the text to a better place and remove
a few lies.  Postpone figuring out the lists of macros causing
that special handling, it would cost too much time right now.
feedback and ok jmc@@

This also brings the file back in sync with OpenBSD.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.194 2011/08/01 07:45:11 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: August 1 2011 $
d1040 2
d1112 11
a1122 3
.Dl \&.Fl o \&Ns \&Ar file1
.Dl \&.Ar
.Dl \&.Ar arg1 , arg2 .
d1525 1
d1538 4
a1541 1
Useful when specifying configuration options or keys.
d1544 5
a1548 5
.Dl \&.Cm ControlPath
.Dl \&.Cm ControlMaster
.Pp
See also
.Sx \&Fl .
d1899 1
d1924 1
d1985 1
a1985 1
Command-line flag.
d1995 5
a1999 4
.Dl \&.Fl a b c
.Dl \&.Fl \&Pf a b
.Dl \&.Fl
.Dl \&.Op \&Fl o \&Ns \&Ar file
d2016 4
d2025 1
d2035 2
a2036 1
.Sx MANUAL STRUCTURE
d2063 1
d2079 4
d2123 1
d2138 1
a2138 1
In the
d2140 2
a2141 2
section (only if invoked as the line macro), the first argument is
preceded by
d2143 3
a2145 1
the arguments is enclosed in angle brackets.
d2148 1
a2148 1
.Dl \&.In sys/types
d2413 1
a2413 2
Command-line option.
Used when listing options to command-line utilities.
d2415 3
d2475 3
a2477 3
A file-system path.
If an argument is not provided, the string
.Dq \(ti
d2740 1
d2828 1
a2828 1
syntax when invoked as the first macro in the
d2833 3
@


1.194
log
@Add some new text written from scratch after checking whether anything
explained in mdoc.samples(7) is missing from mdoc(7):
* Discourage trailing whitespace.
* Move all information about quoted arguments to the relevant
  subsection, shortening it a bit, and adding an example.
* Mention that blanks can be quoted with a backslash.
* A better .Nd line in the template (verbatim from mdoc.samples(7)).
* Explain how to escape callable macro names, and provide examples.
ok jmc@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.193 2011/07/31 17:42:50 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: July 31 2011 $
a67 36
.Ss Reserved Terms
Within a macro line, the following terms are reserved:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It \&.
.Pq period
.It \e.
.Pq escaped period
.It \&,
.Pq comma
.It \&:
.Pq colon
.It \&;
.Pq semicolon
.It \&(
.Pq left-parenthesis
.It \&)
.Pq right-parenthesis
.It \&[
.Pq left-bracket
.It \&]
.Pq right-bracket
.It \&?
.Pq question
.It \&!
.Pq exclamation
.It \&|
.Pq vertical bar
.It \e*(Ba
.Pq reserved-word vertical bar
.El
.Pp
For general use in macro lines, these can be escaped with a non-breaking
space
.Pq Sq \e& .
In text lines, these may be used as normal punctuation.
d595 1
a595 1
escape it by prepending a non-breaking space,
d729 2
a730 3
Like block full-implicit, but with single-line scope closed by
.Sx Reserved Terms
or end of line.
d776 2
a777 3
Closed by
.Sx Reserved Terms ,
end of line, fixed argument lengths, and/or subsequent macros.
d867 84
d2966 1
a2966 1
followed by a reserved character is incorrectly used in some manuals
@


1.193
log
@trivial fixes found while merging to OpenBSD:
* ellipsis is an argument to .Ar, not part of the preceding argument
* libz, libpam, on, off are not placeholders for arguments
* .Rv is not only relevant for system calls, see atexit(3), sem_init(3)
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.192 2011/07/31 17:30:33 schwarze Exp $
d181 6
a187 1
If arguments are quoted, whitespace within the quotes is retained.
d189 15
a203 2
Macro arguments may be quoted with double-quotes to group
space-delimited terms or to retain blocks of whitespace.
d208 5
d330 1
a330 1
\&.Nd a description goes here
d626 11
@


1.192
log
@System III is relevant for string(3) HISTORY.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.191 2011/07/18 10:23:02 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: July 18 2011 $
d1831 1
a1831 1
.D1 Pf \. Sx \&Ex Fl std Op Ar utility...
d2128 1
a2128 1
.Ar libz
d2130 1
a2130 1
.Ar libpam ,
d2472 1
a2472 1
Insert a standard sentence regarding a system call's return value of 0
d2478 1
a2478 1
.D1 Pf \. Sx \&Rv Fl std Op Ar function...
d2516 1
a2516 1
.Ar on .
d2518 1
a2518 1
.Ar off ,
@


1.191
log
@Clarify up `Rv' and `Ex' documentation.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.190 2011/07/15 20:40:32 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: July 15 2011 $
d1041 2
d1052 1
@


1.190
log
@improve documentation of .Bl -column .It Ta
using feedback from kristaps@@, ok jmc@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.189 2011/07/11 08:45:02 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: July 11 2011 $
d1824 2
a1825 1
Insert a standard sentence regarding exit values.
d1828 1
a1828 1
.D1 Pf \. Sx \&Ex Fl std Op Ar utility
d1830 1
a1830 1
When
d1835 3
d2469 8
a2476 5
Inserts text regarding a function call's return value.
This macro must consist of the
.Fl std
argument followed by an optional
.Ar function .
d2479 1
a2479 1
is not provided, the document's name as stipulated by the first
d2481 4
a2484 1
is provided.
@


1.189
log
@Be more specific about `Dv', `Er', and `Ev'.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.188 2011/05/26 09:26:16 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: May 26 2011 $
d763 15
d1960 2
d2084 2
a2085 1
.D1 Pf \. Sx \&It Op Cm args
d2087 6
a2092 7
The
.Cm args
are phrases, a mix of macros and text corresponding to a line column,
delimited by tabs or the special
.Sq \&Ta
pseudo-macro.
Lines subsequent the
d2094 8
a2101 6
are interpreted within the scope of the last phrase.
Calling the pseudo-macro
.Sq \&Ta
will open a new phrase scope (this must occur on a macro line to be
interpreted as a macro).
Note that the tab phrase delimiter may only be used within the
d2103 2
a2104 8
line itself.
Subsequent this, only the
.Sq \&Ta
pseudo-macro may be used to delimit phrases.
Furthermore, note that quoted sections propagate over tab-delimited
phrases on an
.Sx \&It ,
for example,
d2659 5
d2813 1
a2813 1
.Sx \&Bd Fl column
@


1.188
log
@Noticed that our skeleton mdoc.7 had lower-case `Dt'.  Fixed and added
some language for clarity.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.187 2011/05/21 15:55:42 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: May 21 2011 $
d1694 2
a1695 1
Defined variables such as preprocessor constants.
d1698 1
d1703 6
a1708 1
.Sx \&Er .
d1784 3
a1786 1
Display error constants.
d1793 2
a1794 1
.Sx \&Dv .
d1804 4
@


1.187
log
@remove a sentence which isn;t true;
from jmc@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.186 2011/04/17 11:57:07 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: April 17 2011 $
d299 2
a300 1
file:
d303 1
a303 1
\&.Dt mdoc 7
d306 1
a306 1
\&.Nm foo
d312 1
a312 1
\&.Nm foo
@


1.186
log
@The semantics of .Bk was described incorrectly
for the case of multiple sibling macros on a single input line.
Issue found investigating a question from sobrado@@.
"I like this diff" kristaps@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.185 2011/04/06 11:39:25 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: April 6 2011 $
a99 2
Use of reserved terms is described in
.Sx MACRO SYNTAX .
@


1.185
log
@First, properly escape periods with \&.  Then consistently refer to
non-macro lines as "text lines" (after defining them as such).  Clean up
notion of font scope.  Note comma usage in multiple `Nm's.  Note
ordering of SYNOPSIS section stuff.  Add some bits about DESCRIPTION
syntax (brief description, then args).  Note that `Bl' can also contain
HEAD.  Finally, fix some `Cm' entries to be properly `Ar'.

Ok Jason McIntyre.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.184 2011/04/01 19:50:49 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: April 1 2011 $
d1179 3
a1181 2
Keep the output generated from each macro input line together
on one single output line.
@


1.184
log
@In reality `In' only accepts one argument.  Subsequent ones are not
included in the brackets.  We really should have a warning about this,
but that'll wait for another day.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.183 2011/04/01 19:47:33 kristaps Exp $
d43 1
a43 1
.Sq \.
d45 2
a46 2
Other lines are interpreted within the scope of
prior macros:
d49 1
a49 1
Other lines are interpreted within the current state.
d56 1
a56 1
If the first character of a line is a space, that line is printed
d61 1
a61 1
whether in a macro or free-form text line, is ignored to the end of
d105 1
d107 1
a107 1
Special characters may occur in both macro and free-form lines.
d136 7
a142 3
A text decoration is valid within
the current font scope only: if a macro opens a font scope alongside
its own scope, such as
d144 1
a144 8
.Cm \&Sy ,
in-scope invocations of
.Sq \ef
are only valid within the font scope of the macro.
If
.Sq \ef
is specified outside of any font scope, such as in unenclosed, free-form
text, it will affect the remainder of the document.
d178 1
a178 1
In free-form lines, whitespace is preserved within a line; unescaped
d180 1
a180 1
Blank free-form lines, which may include whitespace, are only permitted
d200 1
a200 1
In free-form mode, quotes are regarded as opaque text.
d271 2
a272 2
.Dl \&Xr mandoc 1 \.
.Dl \&Fl T \&Ns \&Cm ascii \.
d360 4
d391 1
a391 1
\&.Nm foo
d395 1
a395 1
\&.Nm bar
d401 2
d413 8
d469 9
a477 3
This expands upon the brief, one line description in
.Em NAME .
It usually contains a breakdown of the options (if documenting a
d625 4
a628 1
contains a head.
d1064 1
a1064 1
They may contain both macro lines and free-form text lines.
d1181 1
a1181 1
Line breaks in free-form text lines are unaffected.
d1875 3
a1877 3
.Op Cm functype
.Cm funcname
.Op Oo Cm argtype Oc Cm argname
d1906 1
a1906 1
.D1 Pf \. Sx \&Fo Cm funcname
d1910 1
a1910 1
.Pf \. Sx \&Ft Cm functype
d1912 1
a1912 1
.Pf \. Sx \&Fo Cm funcname
d1914 1
a1914 1
.Pf \. Sx \&Fa Oo Cm argtype Oc Cm argname
d1935 1
a1935 1
.D1 Pf \. Sx \&Ft Cm functype
d2016 1
a2016 1
.D1 Pf \. Sx \&It Cm args
d2089 1
a2089 1
.D1 Pf \. Sx \&Lb Cm library
d2092 1
a2092 1
.Cm library
d2094 1
a2094 1
.Cm libz
d2096 1
a2096 1
.Cm libpam ,
d2122 1
a2122 1
.D1 Pf \. Sx \&Lk Cm uri Op Cm name
d2137 1
a2137 1
.D1 Pf \. Sx \&Ms Cm symbol
d2148 1
a2148 1
.D1 Pf \. Sx \&Mt Cm address
d2286 1
a2286 1
.D1 Pf \. Sx \&Os Op Cm system Op Cm version
d2289 1
a2289 1
.Cm system
d2348 1
a2348 1
.D1 Pf \. \&Pf Cm prefix suffix
d2351 1
a2351 1
.Cm suffix
d2355 1
a2355 1
.Dl \&.Pf \e. \&Sx \&Pf \&Cm prefix suffix
d2476 1
a2476 1
.Cm on .
d2478 1
a2478 1
.Cm off ,
d2480 1
a2480 1
output generated from adjacent macros, but free-form text lines
d2703 1
a2703 1
.D1 Pf \. Sx \&Xr Cm name section
d2706 1
a2706 1
.Cm name
d2708 1
a2708 1
.Cm section
d2711 1
a2711 1
.Cm section
d2736 1
a2736 1
.D1 Pf \. Sx \&sp Op Cm height
d2739 1
a2739 1
.Cm height
@


1.183
log
@Properly quote arguments in `Fn' documentation.  Also make standalone
'...' have a properly-escaped initial dot.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.182 2011/03/17 14:50:14 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: March 17 2011 $
d805 1
a805 1
.It Sx \&In  Ta    \&No     Ta    \&No     Ta    n
@


1.182
log
@"Reserved Characters" isn't correct since `\.' and `\*(Ba' aren't
characters.  Use "Reserved Terms" instead.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.181 2011/03/07 01:35:51 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: March 7 2011 $
d1864 2
a1865 2
.Dl \&.Fn "int funcname" "int arg0" "int arg1"
.Dl \&.Fn funcname "int arg0"
d1895 1
a1895 1
\.\.\.
@


1.181
log
@Clean up date handling,
as a first step to get rid of the frequent petty warnings in this area:
 - always store dates as strings, not as seconds since the Epoch
 - for input, try the three most common formats everywhere
 - for unrecognized format, just pass the date though verbatim
 - when there is no date at all, still use the current date
Originally triggered by a one-line patch from Tim van der Molen,
<tbvdm at xs4all dot nl>, which is included here.
Feedback and OK on manual parts from jmc@@.
"please check this in" kristaps@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.180 2011/02/09 10:03:02 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: February 9 2011 $
d68 2
a69 2
.Ss Reserved Characters
Within a macro line, the following characters are reserved:
d74 2
d96 2
d100 1
a100 1
Use of reserved characters is described in
d102 3
a104 4
For general use in macro lines, these characters can either be escaped
with a non-breaking space
.Pq Sq \e&
or, if applicable, an appropriate escape sequence can be used.
d712 1
a712 1
.Sx Reserved Characters
d745 1
a745 1
.Sx Reserved Characters ,
@


1.180
log
@Add stub for eqn.7 manual and flip it on.  Also note COMPATIBILITY issue
of how we considered .TS (etc.) macros and how the preprocessors do.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.179 2011/02/07 00:05:40 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: February 7 2011 $
a199 28
.Ss Dates
There are several macros in
.Nm
that require a date argument.
The canonical form for dates is the American format:
.Pp
.D1 Cm Month Day , Year
.Pp
The
.Cm Day
value is an optionally zero-padded numeral.
The
.Cm Month
value is the full month name.
The
.Cm Year
value is the full four-digit year.
.Pp
Reduced form dates are broken-down canonical form dates:
.Pp
.D1 Cm Month , Year
.D1 Cm Year
.Pp
Some examples of valid dates follow:
.Pp
.D1 "May, 2009" Pq reduced form
.D1 "2009" Pq reduced form
.D1 "May 20, 2009" Pq canonical form
d861 4
a864 2
This should follow the reduced or canonical form syntax described in
.Sx Dates .
d1446 1
a1446 1
.D1 Pf \. Sx \&Dd Op Ar date
d1449 15
a1463 4
.Ar date
may be either
.Ar $\&Mdocdate$ ,
which signifies the current manual revision date dictated by
d1465 11
a1475 3
or instead a valid canonical date as specified by
.Sx Dates .
If a date does not conform or is empty, the current date is used.
d2767 6
a2772 3
without an argument prints
.Dq Epoch .
In mandoc, it resolves to the current date.
@


1.179
log
@The macro .Ns has no effect at the beginning of an input line;
ok kristaps@@ jmc@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.178 2011/02/02 21:40:45 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: February 2 2011 $
d2910 1
@


1.178
log
@If `Ns' is specified on its own line, it should be ignored.  This is
shitty groff behaviour.  Do the same, but raise a warning to this
effect.  This from a TODO noted by schwarze@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.177 2011/01/25 00:40:14 schwarze Exp $
d3 1
a3 1
.\" Copyright (c) 2009, 2010 Kristaps Dzonsons <kristaps@@bsd.lv>
d18 1
a18 1
.Dd $Mdocdate: January 25 2011 $
d286 3
a288 2
delimiters (
.Ns Sq \&) ,
d291 2
a292 1
.Sq \&" ) .
@


1.177
log
@As noticed by deraadt@@, it goes without saying that text files
on a UNIX system use UNIX conventions, and UNIX tools working
on them expect that.
ok jmc@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.176 2011/01/22 14:05:33 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 22 2011 $
d2206 2
@


1.176
log
@Lots of in-line macros require arguments but were not marked as such.
Check prompted by kristaps@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.175 2011/01/12 10:43:22 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: January 12 2011 $
a54 3
All manuals must have
.Ux
line terminators.
@


1.175
log
@If the first character of free-form text is whitespace, then a newline
shall precede outputted text (surprise!).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.174 2011/01/04 23:32:21 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: January 4 2011 $
d801 2
a802 2
.It Sx \&Ad  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&An  Ta    Yes      Ta    Yes      Ta    n
d810 1
a810 1
.It Sx \&Cm  Ta    Yes      Ta    Yes      Ta    n
d814 1
a814 1
.It Sx \&Dv  Ta    Yes      Ta    Yes      Ta    n
d820 1
a820 1
.It Sx \&Ev  Ta    Yes      Ta    Yes      Ta    n
d822 1
a822 1
.It Sx \&Fa  Ta    Yes      Ta    Yes      Ta    n
d827 1
a827 1
.It Sx \&Ft  Ta    Yes      Ta    Yes      Ta    n
d833 2
a834 2
.It Sx \&Li  Ta    Yes      Ta    Yes      Ta    n
.It Sx \&Lk  Ta    Yes      Ta    Yes      Ta    n
@


1.174
log
@Moved table stuff from roff.7 into the new tbl.7 (suggested by Jason McIntyre).

Added cross-links to tbl.7 from other manuals.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.173 2010/12/29 16:16:50 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: December 29 2010 $
d58 3
@


1.173
log
@In mdoc.7, don't use `D1' in place of `Dl' for code examples.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.172 2010/12/27 20:39:46 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: December 27 2010 $
d2906 1
d2908 2
@


1.172
log
@Note `Sx's connection to `Sh' and `Ss'.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.171 2010/12/22 23:53:55 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: December 22 2010 $
d128 1
a128 1
.D1 \efBbold\efR \efIitalic\efP
d296 2
a297 2
.D1 \&Xr mandoc 1 \.
.D1 \&Fl T \&Ns \&Cm ascii \.
d942 2
a943 2
.D1 \&.Ad [0,$]
.D1 \&.Ad 0x00000000
d973 2
a974 2
.D1 \&.An -nosplit
.D1 \&.An Kristaps Dzonsons \&Aq kristaps@@bsd.lv
d980 1
a980 1
.D1 \&.Fl -key= \&Ns \&Ao \&Ar val \&Ac
d990 1
a990 1
.D1 \&.Fn execve \&Ap d
d995 1
a995 1
.D1 \&.Fl -key= \&Ns \&Aq \&Ar val
d1016 3
a1018 3
.D1 \&.Fl o \&Ns \&Ar file1
.D1 \&.Ar
.D1 \&.Ar arg1 , arg2 .
d1035 2
a1036 2
.D1 \&.At
.D1 \&.At V.1
d1339 1
a1339 1
.D1 \&.Bq 1 , \&Dv BUFSIZ
d1372 1
a1372 1
.D1 \&.Brq 1 , ... , \&Va n
d1381 2
a1382 2
.D1 \&.Bsx 1.0
.D1 \&.Bsx
d1401 2
a1402 2
.D1 \&.Bx 4.4
.D1 \&.Bx
d1419 1
a1419 1
.D1 \&.Cd device le0 at scode?
d1432 2
a1433 2
.D1 \&.Cm ControlPath
.D1 \&.Cm ControlMaster
d1444 1
a1444 1
.D1 \&.D1 \&Fl abcdefgh
d1483 3
a1485 3
.D1 \&.Dd $\&Mdocdate$
.D1 \&.Dd $\&Mdocdate: July 21 2007$
.D1 \&.Dd July 21, 2007
d1498 1
a1498 1
.D1 \&.Dl % mandoc mdoc.7 \e(ba less
d1666 3
a1668 3
.D1 \&.Dt FOO 1
.D1 \&.Dt FOO 4 KM
.D1 \&.Dt FOO 9 i386
d1678 2
a1679 2
.D1 \&.Dv BUFSIZ
.D1 \&.Dv STDOUT_FILENO
d1688 2
a1689 2
.D1 \&.Dx 2.4.1
.D1 \&.Dx
d1735 2
a1736 2
.D1 \&.Em Warnings!
.D1 \&.Em Remarks :
d1761 2
a1762 2
.D1 \&.Er EPERM
.D1 \&.Er ENOENT
d1773 2
a1774 2
.D1 \&.Ev DISPLAY
.D1 \&.Ev PATH
d1814 3
a1816 3
.D1 \&.Fa \(dqconst char *p\(dq
.D1 \&.Fa \(dqint a\(dq \(dqint b\(dq \(dqint c\(dq
.D1 \&.Fa foo
d1844 4
a1847 4
.D1 \&.Fl a b c
.D1 \&.Fl \&Pf a b
.D1 \&.Fl
.D1 \&.Op \&Fl o \&Ns \&Ar file
d1866 3
a1868 3
.D1 \&.Fn "int funcname" "int arg0" "int arg1"
.D1 \&.Fn funcname "int arg0"
.D1 \&.Fn funcname arg0
d1919 1
a1919 1
.D1 \&.Ft int
d1937 2
a1938 2
.D1 \&.Fx 7.1
.D1 \&.Fx
d1958 2
a1959 2
.D1 \&.Ic hash
.D1 \&.Ic alias
d1980 1
a1980 1
.D1 \&.In sys/types
d2060 1
a2060 1
.D1 .It \(dqcol1 ; <TAB> col2 ;\(dq \&;
d2087 2
a2088 2
.D1 \&.Lb libz
.D1 \&.Lb mdoc
d2106 2
a2107 2
.D1 \&.Lk http://bsd.lv \*qThe BSD.lv Project\*q
.D1 \&.Lk http://bsd.lv
d2121 2
a2122 2
.D1 \&.Ms sigma
.D1 \&.Ms aleph
d2132 1
a2132 1
.D1 \&.Mt discuss@@manpages.bsd.lv
d2142 2
a2143 2
.D1 \&.Sx \&Nd mdoc language reference
.D1 \&.Sx \&Nd format and display UNIX manuals
d2200 1
a2200 1
.D1 \&.Sx \&Fl ab \&No cd \&Fl ef
d2207 1
a2207 1
.D1 \&.Fl o \&Ns \&Ar output
d2220 2
a2221 2
.D1 \&.Nx 5.01
.D1 \&.Nx
d2252 2
a2253 2
.D1 \&.Op \&Fl a \&Ar b
.D1 \&.Op \&Ar a | b
d2274 3
a2276 3
.D1 \&.Os
.D1 \&.Os KTH/CSC/TCS
.D1 \&.Os BSD 4.3
d2294 2
a2295 2
.D1 \&.Ox 4.5
.D1 \&.Ox
d2313 2
a2314 2
.D1 \&.Pa /usr/bin/mandoc
.D1 \&.Pa /usr/share/man/man7/mdoc.7
d2334 1
a2334 1
.D1 \&.Pf \e. \&Sx \&Pf \&Cm prefix suffix
d2594 1
a2594 1
.D1 \&.Sx MANUAL STRUCTURE
d2615 1
a2615 1
.D1 \&.Tn IBM
d2624 1
a2624 1
.D1 \&.Ux
d2639 2
a2640 2
.D1 \&.Va foo
.D1 \&.Va const char *bar ;
d2659 2
a2660 2
.D1 \&.Vt unsigned char
.D1 \&.Vt extern const char * const sys_signame[] \&;
d2698 3
a2700 3
.D1 \&.Xr mandoc 1
.D1 \&.Xr mandoc 1 \&;
.D1 \&.Xr mandoc 1 \&Ns s behaviour
@


1.171
log
@minor tweaks:
1. improve .Bl wording (from jmc@@)
2. jmc@@ noted that the .Mt default (the same as in groff) makes no sense,
and there is no better default we could use; thus, regard it as
implementation dependent and do not document it
3. fix formatting of one COMPATIBILITY note: move "and" out of .Sx
ok kristaps@@, jmc@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.170 2010/12/18 19:12:00 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: December 18 2010 $
d2595 5
@


1.170
log
@Sync to OpenBSD: More precise description of .Xo, and don't talk
about deprecation, because there are cases were choosing .Xo or
backslash line continuation is merely a matter of taste, not a
difference in readability, and well-used .Xo is even slightly
more portable.
OK jmc@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.169 2010/12/06 16:37:32 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: December 6 2010 $
d1204 1
a1204 1
Lists consist of items started by the
a2126 3
If an argument is not provided, the string
.Dq \(ti
is used as a default.
d2739 6
a2744 1
.Pq Sx \&Bd , Sx \&Dl , and Sx \&D1
@


1.169
log
@Import changes by schwarze@@ and Jason McIntyre into manuals.  These are
for the new libroff macros, the new libman macros, and for the sake of
general clarity.

Note that `ft' documentation is NOT included, as I've kept it in -man:
it's highly confusing to have it in roff.7 when it's not implemented for
both -man and -mdoc, as at least in theory, roff.7 should include only
macros recognised by BOTH formats.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.168 2010/12/05 15:37:30 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: December 5 2010 $
d2668 7
a2674 3
Open an extension scope.
This macro originally existed to extend the 9-argument limit of troff;
since this limit has been lifted, the macro has been deprecated.
@


1.168
log
@Merge schwarze@@'s changes allowing nested displays.  Tweak the patch by
making sure output doesn't add a superfluous newline with the nested displays.
Also add a COMPATIBILITY note.

Rename a macro (DATESIZ) to be in line with OpenBSD (DATESIZE).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.167 2010/11/30 21:44:59 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: November 30 2010 $
d1080 1
a1080 2
Preserve white space and newlines as they appear in the input, including
if it follows a macro.
d2668 3
a2670 7
Extend the header of an
.Sx \&It
macro or the body of a partial-implicit block macro
beyond the end of the input line.
This macro originally existed to work around the 9-argument limit
of historic
.Xr roff 7 .
@


1.167
log
@Restore the Id tag that i clobbered in my previous commit,
as pointed out by kristaps@@.  Sorry!
@
text
@d1 1
a1 1
.\"	$Id$
d2742 5
@


1.166
log
@Merge OpenBSD mdoc.7 rev. 1.56 and 1.57:
Define the terms "callable" and "parsed" with more precision.
Be more specific about what .Xo can be used for.
Be more specific about what "historic groff" refers to.
Explicitely mention the nine argument limit below COMPATIBILITY.
feedback and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mdoc.7,v 1.56 2010/11/28 15:45:26 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: November 29 2010 $
@


1.165
log
@Migrate `Nm' and `Pa' handling from mdoc_action.c into mdoc_validate.c.

Document that `Pa' is replaced by a tilde, just like `Mt'.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.164 2010/11/29 13:02:47 kristaps Exp $
d607 5
a611 4
column indicates that the macro may be called subsequent to the initial
line-macro.
If a macro is not callable, then its invocation after the initial line
macro is interpreted as opaque text, such that
d618 4
a621 4
column indicates whether the macro may be followed by further
(ostensibly callable) macros.
If a macro is not parsed, subsequent macro invocations on the line
will be interpreted as opaque text.
d2669 7
a2675 3
Open an extension scope.
This macro originally existed to extend the 9-argument limit of troff;
since this limit has been lifted, the macro has been deprecated.
d2729 2
a2730 1
refers to groff versions before the
d2732 1
a2732 2
file re-write
.Pq somewhere between 1.15 and 1.19 .
d2823 5
@


1.164
log
@Move `Mt', `Ar', and `Li' handling from mdoc_action.c into mdoc_validate.c.

Clarify that `Mt' gets a default `~' (as per groff 1.20) and document it
in mdoc.7.

Made `Lk' be removed in mdoc_macro.c if it has no arguments.  This fixes
segfaults in mdoc_{term,html}.c that nobody's managed to raise yet.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.163 2010/10/29 10:38:54 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: October 29 2010 $
d2311 3
@


1.163
log
@Referring to terms explained in other manuals, always use .Xr.
Otherwise, hyperlinks can't be produced and people will likely
miss the additional information available.
Suggested by deraadt@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.162 2010/10/24 14:49:35 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: October 24 2010 $
d2127 3
@


1.162
log
@When mentioning a function documented elsewhere, .Xr is often better than .Fn.
Prodded by guenther@@, ok jmc@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.161 2010/09/27 11:21:39 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: September 27 2010 $
d1874 1
a1874 1
When referring to a function documented in another manual page,
d1876 1
a1876 1
is usually preferable.
@


1.161
log
@Suppress whitespace following Pp, Lp, sp, and the other newline-emitting
macros within an unfilled or literal `Bd'.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.160 2010/09/27 06:56:44 kristaps Exp $
d1874 3
@


1.160
log
@Added MIPS64.  From a patch by Jason McIntyre.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.159 2010/09/26 19:46:48 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: September 26 2010 $
d1079 2
a1080 1
Preserve white space as it appears in the input.
@


1.159
log
@sync to OpenBSD:
note that IMPLEMENTATION NOTES is not used in OpenBSD
add missing comma in "sections 1, 6, & 8 only" below EXIT STATUS
below SEE ALSO, add an .Xr to man(1), and from man(7) to mdoc(7)
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.158 2010/09/04 17:22:41 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: September 4 2010 $
d1649 1
@


1.158
log
@Clarified EXIT STATUS sections.  Discussed among schwarze@@, Thomas, and
Jason.  Patch by Jason.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.157 2010/08/29 11:28:09 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: August 29 2010 $
d346 1
d353 1
a353 1
\&.\e\*q For sections 1, 6 & 8 only.
d2872 1
@


1.157
log
@Remove overstrike `\o'.  This isn't the best solution because we really
should be printing the contents, but for the time being, this is good
enough.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.156 2010/08/28 22:08:38 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: August 28 2010 $
d352 1
a352 1
\&.\e\*q For sections 1 & 8 only.
@


1.156
log
@Move mdoc/man template "The next is for" into the section itself.  Added
OpenBSD compatibility notes.  Based on a patch by Jason McIntyre.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.155 2010/08/24 14:03:46 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: August 24 2010 $
d2855 2
@


1.155
log
@Fixed HISTORY to note mdoc's rewrite in groff-1.17, not groff-1.20.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.154 2010/08/24 13:39:37 kristaps Exp $
a333 1
\&.\e\*q The next is for sections 2, 3, & 9 only.
d335 2
a345 1
\&.\e\*q The next is for sections 2, 3, & 9 only.
d347 1
a347 1
\&.\e\*q The next is for sections 1, 6, 7, & 8 only.
d349 1
a350 1
\&.\e\*q The next is for sections 1 & 8 only.
d352 1
a353 1
\&.\e\*q The next is for sections 1, 4, 6, 7, & 8 only.
d355 1
a355 1
\&.\e\*q The next is for sections 2, 3, & 9 only.
d357 1
d366 1
@


1.154
log
@Strip out `\k' escape.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.153 2010/08/24 13:07:01 kristaps Exp $
d2875 1
a2875 1
in groff-1.20.1.
@


1.153
log
@Stripping out of `\w' groff escape.  Yet another for pod2man...
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.152 2010/08/24 12:18:49 kristaps Exp $
d2851 2
@


1.152
log
@Strip out the `\z' escape.  This is the first recursive sequence,
getting mandoc ready to handle pod2man's complex escapes.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.151 2010/08/22 15:49:28 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: August 22 2010 $
d2849 2
d2854 1
a2854 2
.Sx Text Decoration
escapes are all discarded in mandoc.
@


1.151
log
@Add a short HISTORY section to mdoc.7.  Facts provided by schwarze@@'s
detective-work in the UNIX archives.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.150 2010/08/22 14:54:29 kristaps Exp $
d2847 2
@


1.150
log
@Sort COMPATIBILITY in mdoc(7) (from schwarze@@).

Update escape COMPATIBILITY in mdoc(7) and man(7) (ok schwarze@@).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.149 2010/08/09 00:07:51 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: August 9 2010 $
d2864 11
@


1.149
log
@Correctly make quotes around `Lk' link-name argument.  Noted by Aldis
Berzoja.  Also note COMPATIBILITY of groff misformatting `Lk'.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.148 2010/08/07 10:31:32 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: August 7 2010 $
d2718 3
d2723 6
a2728 3
groff only accepts a single
.Sq \&Lk
link-name argument; the remainder is misformatted.
d2730 8
a2737 3
The
.Sq \&%C
macro is not implemented in groff.
d2739 2
a2740 3
An empty
.Sq \&Dd
macro in groff prints
d2744 3
a2746 2
The \es (font size), \em (font colour), and \eM (font filling colour)
font decoration escapes are all discarded in mandoc.
d2748 5
a2752 2
Old groff fails to assert a newline before
.Sx \&Bd Fl ragged compact .
d2754 2
a2755 1
groff behaves inconsistently when encountering
d2757 2
a2758 7
children of
.Sx \&Fo
regarding spacing between arguments.
In mandoc, this is not the case: each argument is consistently followed
by a single space and the trailing
.Sq \&)
suppresses prior spacing.
a2759 1
groff behaves inconsistently when encountering
a2760 2
and
.Sx \&Fn
d2762 2
a2763 2
.Em SYNOPSIS :
at times newline(s) are suppressed depending on whether a prior
a2765 1
In mandoc, this is not the case.
d2770 1
a2770 1
for the normalised behaviour.
d2772 4
a2775 5
Historic groff does not break before an
.Sx \&Fn
when not invoked as the line macro in the
.Em SYNOPSIS
section.
d2777 8
a2784 5
Historic groff formats the
.Sx \&In
badly: trailing arguments are trashed and
.Em SYNOPSIS
is not specially treated.
d2786 4
a2789 4
groff does not accept the
.Sq \&Ta
pseudo-macro as a line macro.
mandoc does.
d2791 2
a2792 3
The comment syntax
.Sq \e\."
is no longer accepted.
a2793 1
In groff, the
d2795 1
a2795 1
macro does not format its arguments when used in the FILES section under
a2796 1
mandoc does.
d2798 13
a2810 4
Historic groff does not print a dash for empty
.Sx \&Fl
arguments.
mandoc and newer groff implementations do.
a2811 1
groff behaves irregularly when specifying
d2813 4
d2818 1
a2818 2
within line-macro scopes.
mandoc follows a consistent system.
d2820 7
a2826 5
In mandoc, negative scaling units are truncated to zero; groff would
move to prior lines.
Furthermore, the
.Sq f
scaling unit, while accepted, is rendered as the default unit.
d2828 2
a2829 3
In quoted literals, groff allowed pairwise double-quotes to produce a
standalone double-quote in formatted output.
This idiosyncratic behaviour is not applicable in mandoc.
a2830 1
Display offsets
d2834 13
a2846 7
.Fl offset Ar right
are disregarded in mandoc.
Furthermore, troff specifies a
.Fl file Ar file
argument that is not supported in mandoc.
Lastly, since text is not right-justified in mandoc (or even groff),
.Fl ragged
d2848 4
a2851 5
.Fl filled
are aliases, as are
.Fl literal
and
.Fl unfilled .
d2853 3
a2855 2
Historic groff has many un-callable macros.
Most of these (excluding some block-level macros) are now callable.
d2857 3
a2859 32
The vertical bar
.Sq \(ba
made historic groff
.Qq go orbital
but has been a proper delimiter since then.
.It
.Sx \&It Fl nested
is assumed for all lists (it wasn't in historic groff): any list may be
nested and
.Fl enum
lists will restart the sequence only for the sub-list.
.It
Some manuals use
.Sx \&Li
incorrectly by following it with a reserved character and expecting the
delimiter to render.
This is not supported in mandoc.
.It
In groff, the
.Sx \&Cd ,
.Sx \&Er ,
.Sx \&Ex ,
and
.Sx \&Rv
macros were stipulated only to occur in certain manual sections.
mandoc does not have these restrictions.
.It
Newer groff and mandoc print
.Qq AT&T UNIX
prior to unknown arguments of
.Sx \&At ;
older groff did nothing.
@


1.148
log
@Removed cross-reference to groff(1) in favour of simply mentioning GNU
troff.  This removes the last groff(1) `Xr'.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.147 2010/08/07 10:26:07 kristaps Exp $
d2098 1
a2098 1
.D1 \&.Lk http://bsd.lv "The BSD.lv Project"
d2720 4
d2726 1
a2726 1
macro is not implemented in GNU troff.
@


1.147
log
@Added serial comma.

Put "remarks" for `%C' into COMPATIBILITY.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.146 2010/08/07 10:18:36 kristaps Exp $
d2675 1
a2675 1
.Xr groff 1 .
@


1.146
log
@`In' comes before `Vt' in function example of SYNOPSIS.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.145 2010/08/07 09:56:12 kristaps Exp $
d573 1
a573 1
Known bugs, limitations and work-arounds should be described
a878 4
.Pp
.Em Remarks :
this macro is not implemented in
.Xr groff 1 .
d2720 4
@


1.145
log
@Clarify that predefined strings aren't groff-isms, they're troff-isms.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.144 2010/08/06 17:09:58 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: August 6 2010 $
d421 1
a422 1
\&.In header.h
@


1.144
log
@tweaks from jmc@@:
* correct a few obvious mistakes
* adopt some of jmc@@'s recent changes to man(7)
* cut down just a little on the awful tendency
  to stick a hyphen between two words.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.143 2010/08/06 17:07:11 schwarze Exp $
d152 1
a152 1
.Xr groff 1
@


1.143
log
@merge from OpenBSD:
- HISTORY is interesting even when there are STANDARDS
- more precise instructions what to put into AUTHORS
- add the version argument to the mdoc(7) .Os macro
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.142 2010/07/26 13:45:49 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: July 26 2010 $
d31 1
a31 1
In this reference document, we describe its syntax, structure, and
d33 3
a35 1
Our reference implementation is mandoc; the
d66 1
a66 1
Macro lines with only a control character and optionally whitespace are
d112 1
a112 1
or a single one-character sequence.
d125 1
a125 1
escape followed by an indicator: B (bold), I, (italic), R (Roman), or P
d177 1
a177 1
In free-form lines, whitespace is preserved within a line; un-escaped
d188 1
a188 1
The next double-quote not pair-wise adjacent to another double-quote
d281 1
a281 1
When composing a manual, make sure that your sentences end at the end of
d293 2
a294 1
the boundary of a macro line, e.g.,
d367 1
a367 1
The sections in a
d373 1
a373 1
The name(s) and a one-line description of the documented material.
d376 2
a377 2
\&.Nm name0
\&.Nm name1
d379 1
a379 1
\&.Nd a one-line description
d451 1
a451 1
If two such dissimilar macros are pair-wise invoked (except for
d477 1
a477 1
This expands upon the brief, one-line description in
d479 1
a479 1
It usually contains a break-down of the options (if documenting a
d495 2
a496 4
This section is the dual of
.Em EXIT STATUS ,
which is used for commands.
It documents the return values of functions in sections 2, 3, and 9.
d517 2
a518 4
Command exit status for section 1, 6, and 8 manuals.
This section is the dual of
.Em RETURN VALUES ,
which is used for functions.
d528 1
a528 1
Make doubly sure that your examples work properly!
d771 1
a771 1
\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBargs...\(rB \(lbres...\(rb
d1161 1
a1161 1
.Cm \&Sy,
d1395 1
a1395 1
.Dq is currently in beta test.
d1927 3
a1929 1
Format the FreeBSD version provided as an argument, or a default value
d1958 1
a1958 1
.Sx \&Bd No Fl literal
d2130 1
a2130 1
A one-line description of the manual's content.
d2210 3
a2212 1
Format the NetBSD version provided as an argument, or a default value if
d2284 3
a2286 1
Format the OpenBSD version provided as an argument, or a default value
d2606 1
a2606 1
.Dq currently under development.
d2806 1
a2806 1
In quoted literals, groff allowed pair-wise double-quotes to produce a
@


1.142
log
@Note that `Dd' can be empty.  This found following a thread on discuss@@
started by Sascha Wildner, 07/25/2010 06:30 AM.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.141 2010/07/26 12:51:56 kristaps Exp $
d563 1
a563 3
The history of any manual without a
.Em STANDARDS
section should be described in this section.
d565 1
a565 1
Credits to authors, if applicable, should appear in this section.
d2258 1
a2258 1
.D1 Pf \. Sx \&Os Op Cm system
@


1.141
log
@Merge schwarze@@'s pass over mdoc.7.  Fixed small new-sentence-new-line
nit noted by Jason McIntyre.

"your diff looks ok" (Jason McIntyre)
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.140 2010/07/19 21:59:48 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: July 19 2010 $
d808 1
a808 1
.It Sx \&Dd  Ta    \&No     Ta    \&No     Ta    >0
d1473 1
a1473 1
.D1 Pf \. Sx \&Dd Ar date
d1483 1
a1483 1
If a date does not conform, the current date is used instead.
d2721 6
@


1.140
log
@All macros in mdoc.7 are now documented.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.139 2010/07/19 15:43:10 kristaps Exp $
d96 1
a96 1
For general use in macro lines, these characters must either be escaped
d99 1
a99 1
or, if applicable, an appropriate escape sequence used.
d183 1
a183 1
Macro arguments may be quoted with a double-quote to group
d189 2
a190 8
This produces tokens
.Sq a" ,
.Sq b c ,
.Sq de ,
and
.Sq fg" .
Note that any quoted term, be it argument or macro, is indiscriminately
considered literal text.
d192 1
a192 1
.Sq \&Em a :
d194 1
a194 1
\&.Em "Em a"
d301 1
a301 1
The prologue, which consists of (in order) the
d306 1
a306 1
macros, is required for every document.
d370 1
a370 1
The name(s) and a short description of the documented material.
d376 1
a376 1
\&.Nd a short description
d469 1
a469 1
.Sx \&Sx ,
d500 5
a504 2
Documents any usages of environment variables, e.g.,
.Xr environ 7 .
d510 1
a510 1
It's helpful to document both the file and a short description of how
d568 1
a568 1
Authors should generally be noted by both name and an e-mail address.
d573 1
a573 1
Explanations of common misuses and misunderstandings should be explained
d576 2
a577 1
Extant bugs should be described in this section.
d583 1
a583 1
control character ,
d616 1
a616 1
.Em Parsable
d619 1
a619 1
If a macro is not parsable, subsequent macro invocations on the line
d636 2
a637 2
.Bl -column -compact -offset indent "MacroX" "CallableX" "ParsableX" "closed by XXX"
.It Em Macro Ta Em Callable Ta Em Parsable Ta Em Scope
d659 3
a661 1
.Sx \&It Fl column
d669 2
a670 2
.Bl -column -compact -offset indent "MacroX" "CallableX" "ParsableX" "closed by XXXXXXXXXXX"
.It Em Macro Ta Em Callable Ta Em Parsable Ta Em Scope
d705 2
a706 2
.Bl -column "MacroX" "CallableX" "ParsableX" "closed by XXXX" -compact -offset indent
.It Em Macro Ta Em Callable Ta Em Parsable Ta Em Scope
d740 2
a741 2
.Bl -column "MacroX" "CallableX" "ParsableX" -compact -offset indent
.It Em Macro Ta Em Callable Ta Em Parsable
d781 2
a782 2
.Bl -column "MacroX" "CallableX" "ParsableX" "Arguments" -compact -offset indent
.It Em Macro Ta Em Callable Ta Em Parsable Ta Em Arguments
d936 1
a936 1
Closes an
d941 2
a942 2
Address construct: usually in the context of an computational address in
memory, not a physical (post) address.
d949 1
a949 2
This macro may alternatively accepts the following arguments, although
these may not be specified along with a parameter:
d953 2
a954 1
Renders a line break before each author listing.
d960 7
d969 3
a971 4
section, the default is not to split the first author
listing, but all subsequent author listings, whether or not they're
interspersed by other macros or text, are split.
Thus, specifying
d973 1
a973 4
will cause the first listing also to be split.
If not in the
.Em AUTHORS
section, the default is not to split.
d977 1
a977 14
.D1 \&.An J. D. Ullman .
.Pp
.Em Remarks :
the effects of
.Fl split
or
.Fl nosplit
are re-set when entering the
.Em AUTHORS
section, so if one specifies
.Sx \&An Fl nosplit
in the general document body, it must be re-specified in the
.Em AUTHORS
section.
d979 1
a979 1
Begins a block enclosed by angled brackets.
d995 1
a995 1
Encloses its arguments in angled brackets.
d1015 1
a1015 1
.Dq file ...
d1024 1
a1024 1
Accepts at most one parameter:
d1031 2
a1032 2
A system version of
.At .
d1035 1
a1035 1
Note that these parameters do not begin with a hyphen.
d1051 1
a1051 1
Closes a
d1056 1
a1056 1
Begins a display block.
d1060 1
a1060 1
.Fl type
d1065 4
a1068 4
A display is collection of macros or text which may be collectively
offset or justified in a manner different from that
of the enclosing context.
By default, the block is preceded by a vertical space.
d1070 14
a1083 3
Each display is associated with a type, which must be one of the
following arguments:
.Bl -tag -width 12n -offset indent
d1087 2
a1088 8
Do not justify the block at all.
.It Fl filled
Left- and right-justify the block.
.It Fl literal
Alias for
.Fl unfilled .
.It Fl centered
Centre-justify each line.
d1091 9
a1099 7
The type must be provided first.
Secondary arguments are as follows:
.Bl -tag -width 12n -offset indent
.It Fl offset Ar val
Offset by the value of
.Ar val ,
which is interpreted as one of the following, specified in order:
d1102 2
a1103 2
As one of the pre-defined strings
.Ar indent ,
d1105 1
a1105 1
.Ar indent-two ,
d1107 2
a1108 2
.Ar indent ;
.Ar left ,
d1110 3
a1112 3
.Ar right ,
which justifies to the right margin; and
.Ar center ,
d1115 2
a1116 1
As a precalculated width for a named macro.
d1120 1
a1120 1
.Ar 6n .
d1122 1
a1122 1
As a scaling unit following the syntax described in
d1125 1
a1125 1
As the calculated string length of the opaque string.
d1128 3
a1130 1
If not provided an argument, it will be ignored.
d1132 1
a1132 1
Do not assert a vertical space before the block.
d1137 1
a1137 1
\&.Bd \-unfilled \-offset two-indent \-compact
d1178 1
d1182 4
a1185 2
Begins a collection of macros or text not breaking the line.
Its syntax is as follows:
a1188 1
Subsequent arguments are ignored.
d1191 1
a1191 1
argument is required.
d1193 1
a1193 2
Each line within a keep block is kept intact, so the following example
will not break within each
d1206 5
a1210 2
Begins a list composed of one or more list entries.
Its syntax is as follows:
d1213 1
a1213 1
.Fl type
d1220 8
a1227 4
A list is associated with a type, which is a required argument.
Other arguments are
.Fl width ,
defined per-type as accepting a literal or
d1229 14
a1242 11
value;
.Fl offset ,
also accepting a literal or
.Sx Scaling Widths
value setting the list's global offset; and
.Fl compact ,
suppressing the default vertical space printed before each list entry.
A list entry is specified by the
.Sx \&It
macro, which consists of a head and optional body (depending on the list
type).
d1246 4
a1249 4
A list offset by a bullet.
The head of list entries must be empty.
List entry bodies are positioned after the bullet.
The
d1251 1
a1251 1
argument varies the width of list bodies' left-margins.
d1256 2
a1257 5
argument has no effect.
The number of columns is specified as parameters to the
.Sx \&Bl
macro.
These dictate the width of columns either as
d1259 2
a1260 2
or literal text.
If the initial macro of a
a1262 2
.Sx \&It ,
an
d1264 3
a1266 1
context spanning each line is implied until an
d1268 1
a1268 1
line macro is encountered, at which point list bodies are interpreted as
d1273 3
a1275 6
A list offset by a dash (hyphen).
The head of list entries must be empty.
List entry bodies are positioned past the dash.
The
.Fl width
argument varies the width of list bodies' left-margins.
d1279 2
a1280 4
but with additional formatting to the head.
The
.Fl width
argument varies the width of list bodies' left-margins.
d1282 5
a1286 6
An enumerated list offset by the enumeration from 1.
The head of list entries must be empty.
List entry bodies are positioned after the enumeration.
The
.Fl width
argument varies the width of list bodies' left-margins.
d1290 4
a1293 5
but instead of list bodies positioned after the head, they trail the
head text.
The
.Fl width
argument varies the width of list bodies' left-margins.
d1298 3
a1300 2
List bodies follow the list head.
The
d1304 2
a1305 3
This produces blocks of text.
The head of list entries must be empty.
The
d1309 1
a1309 1
List bodies are positioned on the line following the head.
d1314 1
a1314 2
A list offset by list entry heads.
List entry bodies are positioned after the head as specified by the
d1317 3
d1323 2
d1327 1
a1327 1
Begins a block enclosed by square brackets.
d1355 1
a1355 1
Closes a
d1360 1
a1360 1
Begins a block enclosed by curly braces.
d1417 1
a1417 1
Configuration declaration.
d1454 1
a1454 2
Start a debugging context.
This macro is parsed, but generally ignored.
d1458 3
d1462 1
a1462 1
Closes a
d1473 1
a1473 1
.D1 Pf \. Sx \&Dd Cm date
d1476 2
a1477 2
.Cm date
field may be either
d1508 1
a1508 1
Begins a block enclosed by double quotes.
d1546 1
a1546 1
.Cm title
d1548 2
a1549 2
.Cm section
.Op Cm volume | arch
d1556 1
a1556 1
.It Cm title
d1561 1
a1561 1
.It Cm section
d1600 1
a1600 1
.It Cm volume
d1629 1
a1629 1
.It Cm arch
d1632 1
a1632 1
.Cm volume
d1707 1
a1707 1
.D1 Pf \. Sx \&Ec Op Cm TERM
d1710 1
a1710 1
.Cm TERM
d1718 1
a1718 1
Ends a font mode context started by
d1721 1
a1721 1
Ends a keep context started by
d1724 1
a1724 1
Ends a list context started by
d1746 2
a1747 1
This macro is obsolete and not implemented.
d1752 1
a1752 1
.D1 Pf \. Sx \&Eo Op Cm TERM
d1755 1
a1755 1
.Cm TERM
d1778 6
a1783 6
Inserts text regarding a utility's exit value.
This macro must consist of the
.Fl std
argument followed by an optional
.Ar utility .
If
d1785 1
a1785 1
is not provided, the document's name as stipulated in
d1787 1
a1787 1
is provided.
d1823 1
a1823 1
Ends a function context started by
d1974 1
a1974 1
the arguments is enclosed in angled braces.
d2228 1
a2228 1
Closes multi-line
d2362 1
a2362 1
Closes a
d2367 1
a2367 1
Begins a bibliographic
@


1.139
log
@Finished document -mdoc macros.  Note `br' and `sp' remain.

Noted in arch.in and st.in that mdoc.7 must be updated if entries are
added.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.138 2010/07/19 15:28:11 kristaps Exp $
d951 2
a952 1
.Bl -tag -width 12n -offset indent
d960 3
a962 1
In the AUTHORS section, the default is not to split the first author
d968 3
a970 1
If not in the AUTHORS section, the default is not to split.
d981 3
a983 1
are re-set when entering the AUTHORS section, so if one specifies
d985 2
a986 1
in the general document body, it must be re-specified in the AUTHORS
d1000 4
a1003 4
form of a function:
.Bd -literal -offset indent
\&.Fn execve Ap d
.Ed
d1035 2
a1036 1
.Bl -tag -width 12n -offset indent
d1326 1
a1326 1
.Bd -literal -offset indent
d1359 1
a1359 1
.Bd -literal -offset indent
d1494 1
a1494 1
.D1 \&.Dl % mandoc mdoc.7 | less
d1505 6
a1510 1
.D1 \&.D1 \&Do April is the cruellest month \&Dc \e(em T.S. Eliot
d2105 3
d2675 7
d2683 14
@


1.138
log
@Added documentation for several more macros.  Only a few remaining!

Applied "new-sentence, new-line" here and there.

Refer to "whitespace", not "white-space".

Remove long-commented-out CAVEATS, all of which have been addressed or
at least discussed to some extent or another.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.137 2010/07/19 10:48:36 kristaps Exp $
d1512 2
a1513 2
.Ss \&Qq ,
.Ss \&Sq ,
d1516 1
d1756 2
a1757 2
Inserts text regarding a utility's exit values.
This macro must have first the
d1759 1
a1759 1
argument specified, then an optional
d1766 3
d1888 1
d2382 13
d2457 96
d2575 1
a2575 1
.D1 \&.Tn IBM .
@


1.137
log
@Note discarding of \m, \M, and \s in COMPATIBILITY sections.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.136 2010/07/19 09:19:22 kristaps Exp $
d30 4
a33 2
manuals.  In this reference document, we describe its syntax, structure,
and usage.  Our reference implementation is mandoc; the
d42 2
a43 1
are parsed for macros.  Other lines are interpreted within the scope of
d52 2
a53 2
character, and, in certain circumstances, the tab character.  All
manuals must have
d60 2
a61 1
line.  A macro line with only a control character and comment escape,
d63 3
a65 2
is also ignored.  Macro lines with only a control character and optionally
whitespace are stripped from input.
d453 2
a454 2
All of these macros are output on their own line.  If two such
dissimilar macros are pair-wise invoked (except for
d866 2
a867 1
block.  Multiple authors should each be accorded their own
d869 3
a871 2
line.  Author names should be ordered with full or abbreviated
forename(s) first, then full surname.
d875 2
a876 1
block.  This macro may also be used in a non-bibliographic context when
d889 2
a890 2
block.  This should follow the reduced or canonical form syntax
described in
d915 2
a916 1
block.  Multiple institutional authors should each be accorded their own
d926 3
a928 2
block.  This macro may also be used in a non-bibliographical context
when referring to article titles.
d938 2
a939 1
block.  Does not have any tail arguments.
d990 1
a990 1
Inserts an apostrophe without any surrounding white-space.
d1054 2
a1055 1
block.  Does not have any tail arguments.
d1304 2
a1305 2
A list offset by list entry heads.  List entry bodies are positioned
after the head as specified by the
d1343 2
a1344 1
block.  Does not have any tail arguments.
d1412 1
a1412 1
white-space and align consecutive
d1448 2
a1449 1
block.  Does not have any tail arguments.
d1492 2
a1493 2
Begins a block enclosed by double quotes.  Does not have any head
arguments.
d1501 3
a1503 1
Encloses its arguments in double quotes.
d1512 3
a1515 1
.Ss \&Dt
d1536 1
a1536 1
.Qq UNKNOWN
d1576 1
a1576 1
.Qq 1
d1717 6
d1940 1
a1940 1
.Qq include
d1946 1
a1946 1
.Qq #include ,
d2018 2
a2019 2
interpreted as a macro).  Note that the tab phrase delimiter may only be
used within the
d2063 6
d2085 5
d2092 1
a2092 1
.Qq mailto:
d2163 1
a2163 1
.Qq noop
d2169 11
d2206 1
a2206 1
.Bd -literal -offset indent
d2283 1
a2283 1
.Pq Qq prefix
d2308 2
d2311 5
d2317 2
d2320 11
d2378 2
d2381 14
d2409 2
d2412 9
d2422 16
d2440 6
d2447 10
d2458 4
a2702 68
.\"
.\" XXX: this really isn't the place for these caveats.
.\" .
.\" .
.\" .Sh CAVEATS
.\" There are many ambiguous parts of mdoc.
.\" .
.\" .Pp
.\" .Bl -dash -compact
.\" .It
.\" .Sq \&Fa
.\" should be
.\" .Sq \&Va
.\" as function arguments are variables.
.\" .It
.\" .Sq \&Ft
.\" should be
.\" .Sq \&Vt
.\" as function return types are still types.  Furthermore, the
.\" .Sq \&Ft
.\" should be removed and
.\" .Sq \&Fo ,
.\" which ostensibly follows it, should follow the same convention as
.\" .Sq \&Va .
.\" .It
.\" .Sq \&Va
.\" should formalise that only one or two arguments are acceptable: a
.\" variable name and optional, preceding type.
.\" .It
.\" .Sq \&Fd
.\" is ambiguous.  It's commonly used to indicate an include file in the
.\" synopsis section.
.\" .Sq \&In
.\" should be used, instead.
.\" .It
.\" Only the
.\" .Sq \-literal
.\" argument to
.\" .Sq \&Bd
.\" makes sense.  The remaining ones should be removed.
.\" .It
.\" The
.\" .Sq \&Xo
.\" and
.\" .Sq \&Xc
.\" macros should be deprecated.
.\" .It
.\" The
.\" .Sq \&Dt
.\" macro lacks clarity.  It should be absolutely clear which title will
.\" render when formatting the manual page.
.\" .It
.\" A
.\" .Sq \&Lx
.\" should be provided for Linux (\(`a la
.\" .Sq \&Ox ,
.\" .Sq \&Nx
.\" etc.).
.\" .It
.\" There's no way to refer to references in
.\" .Sq \&Rs/Re
.\" blocks.
.\" .It
.\" The \-split and \-nosplit dictates via
.\" .Sq \&An
.\" are re-set when entering and leaving the AUTHORS section.
.\" .El
.\" .
@


1.136
log
@Removed \s documentation, as we (1) never supported it, and (2) never
will.

Also whack the dot-separator from the embedded man.7 manual.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.135 2010/07/16 21:09:39 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: July 16 2010 $
d2432 3
d2482 1
a2482 1
.Sq \e."
@


1.135
log
@Fixed dquote to be \*q.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.134 2010/07/15 23:50:15 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: July 15 2010 $
d138 1
a138 22
Text may also be sized with the
.Sq \es
escape, whose syntax is one of
.Sq \es+-n
for one-digit numerals;
.Sq \es(+-nn
or
.Sq \es+-(nn
for two-digit numerals; and
.Sq \es[+-N] ,
.Sq \es+-[N] ,
.Sq \es'+-N' ,
or
.Sq \es+-'N'
for arbitrary-digit numerals:
.Pp
.D1 \es+1bigger\es-1
.D1 \es[+10]much bigger\es[-10]
.D1 \es+(10much bigger\es-(10
.D1 \es+'100'much much bigger\es-'100'
.Pp
Note these forms are
@


1.134
log
@document .Sm; prodded by kristaps@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.133 2010/07/06 11:07:21 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: July 6 2010 $
d55 1
a55 1
.Sq \e" ,
d58 1
a58 1
.Sq \&.\e" ,
@


1.133
log
@Clarified `Bk' operation in mdoc.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.132 2010/07/06 10:55:50 kristaps Exp $
d2335 12
@


1.132
log
@Documented `En', `Es', `Hf', `Ic', `Lp', `Nd', `No', `Oc', `Oo', `Op',
`Pa', `Pc', `Po', `Pq', `Pp', and `Va'.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.131 2010/07/05 13:12:32 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: July 5 2010 $
d1181 1
a1181 2
Begins a keep block, containing a collection of macros or text
to be kept together in the output.
a1185 4
Currently, the only argument implemented is
.Fl words ,
requesting to keep together all words of the contained text
on the same output line.
d1187 3
d1191 4
a1194 1
Examples:
d1197 2
a1198 1
\&.Op o Ar output_file
d1202 2
a1203 2
See also
.Sx \&Ek .
@


1.131
log
@Manual clean-ups.  Add syntax message for `Bd', `Bk', and `Bl'.
Document `Eo' and `Ec'.  Add context-end notes `Ec' and `Fc'.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.130 2010/07/04 22:04:04 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: July 4 2010 $
d1719 1
d1741 1
d1915 1
d1917 16
d2071 2
d2085 23
d2146 6
d2171 3
d2175 9
d2185 10
d2243 8
d2252 2
d2255 13
d2269 2
d2272 3
d2276 4
d2360 5
@


1.130
log
@Assert my copyright, making it explicit that i'm granting the same license
on those parts of the code and text that i have written as Kristaps is.
"fine with me" kristaps@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.129 2010/07/02 13:07:46 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: July 2 2010 $
d1067 8
d1099 1
a1099 1
.It Fl offset Ar width
d1101 1
a1101 1
.Ar width ,
d1112 1
a1112 1
which has no effect ;
a1132 4
.It Fl file Ar file
Prepend the file
.Ar file
before any text or macros within the block.
d1183 4
a1186 1
One argument is required; additional arguments are ignored.
d1191 1
a1191 5
A
.Fl lines
argument to keep together all lines of the contained text
on the same page has been desired for a long time,
but has never been implemented.
d1204 10
d1682 11
d1694 2
d1720 10
d1790 2
d2036 3
d2413 1
a2413 1
Furthermore, the
d2415 1
a2415 1
argument is not supported in mandoc.
@


1.129
log
@Add documentation for Bf/Ef.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.128 2010/07/01 15:38:56 schwarze Exp $
d3 2
a4 1
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@bsd.lv>
d18 1
a18 1
.Dd $Mdocdate: July 1 2010 $
@


1.128
log
@Improve .Nm indentation in the SYNOPSIS;
kristaps@@ will do the missing HTML part soon.
"looks nicer" jmc@@
"seems perfect to me" sobrado@@
"slap it in" kristaps@@
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.127 2010/06/27 13:30:51 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 27 2010 $
d1142 33
d1195 3
d1670 2
@


1.127
log
@Document .Bk and .Ek; reminded by kristaps@@.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.126 2010/06/12 11:41:50 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: June 12 2010 $
d481 13
d688 1
d692 10
d1985 36
@


1.126
log
@Removed stipulation that an empty `Bd -offset' will default to 6n.  Not
sure where this came about.  Added regression tests to convince myself
that this is so.  Also consolidated COMPATIBILITY notes regarding `Bd'.
Added COMPATIBILITY note to the effect that old groff pukes on `Bd
-compact -ragged' (regression test will fail on old groff).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.125 2010/06/12 10:09:19 kristaps Exp $
d1119 19
d1611 2
@


1.125
log
@Added enum mdoc_disp (similar to enum mdoc_list).  Display types are now
only calculated once in mdoc_validate.c.

Noted that `Bd -file xxx' is not supported:  it now raises a fatal
warning.  This is noted in mdoc.7.

Empty `Bd' now defaults to LIST_ragged, which is not quite what groff
does, but close enough (gross just throws away the `Bd' and gets upset
when it encounters an `Ed').
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.124 2010/06/07 12:20:07 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: June 7 2010 $
d1097 1
a1097 4
If unset, it will revert to the value of
.Ar 8n
as described in
.Sx Scaling Widths .
d2169 2
a2170 5
groff supports a
.Fl file Ar filename
argument to
.Sx \&Bd .
mandoc does not.
d2246 1
a2246 1
Display types
d2248 1
a2248 1
.Fl center
d2250 3
a2252 4
.Fl right
are aliases for
.Fl left
in mandoc.  Furthermore, the
d2254 1
a2254 1
argument is ignored.
@


1.124
log
@Added version bits for 1.10.1.

Spell-checked manuals.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.123 2010/06/07 11:14:13 kristaps Exp $
d2172 6
@


1.123
log
@I really should run -Tlint on my own manuals before committing them.
EOLN whitespace fixed.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.122 2010/06/07 11:01:15 kristaps Exp $
d58 1
a58 1
is also ignored.  Macro lines with only a control charater and optionally
d170 1
a170 1
demark special output characters and strings by way of input codes.
d976 1
a976 1
This is generally used as a grammatic device when referring to the verb
d1882 1
a1882 1
Furthermore, note that quoted sections propogate over tab-delimited
d2188 1
a2188 1
at times newline(s) are suppressed dependong on whether a prior
d2253 1
a2253 1
in manodc.  Furthermore, the
@


1.122
log
@Normalise SYNOPSIS behaviour after I gave up on following groff's
inconsistent behaviour.  In short:

       Some macros are displayed differently in the SYNOPSIS
       section, particularly Nm, Cd, Fd, Fn, Fo, In, Vt, and Ft.
       All of these macros are output on their own line.  If two
       such dissimilar macros are pair-wise invoked (except for Ft
       before Fo or Fn), they are separated by a vertical space,
       unless in the case of Fo, Fn, and Ft, which are always
       separated by vertical space.

Behaviour ok Jason McIntyre, ingo@@.  Fallout will be treated
case-by-case.

I had to clear out some regressions that were testing against groff's
stranger behaviours: these will now break, as we don't care about such
invocations.

Also removed the newline for `Cd' invocation in a non-SYNOPSIS context.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.121 2010/06/06 22:25:56 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: June 6 2010 $
d474 1
a474 1
.Sx \&Fn ) , 
d2105 1
a2105 1
syntax when invoked as the first macro in the 
@


1.121
log
@Small fix to preserve trailing semicolons in examples.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.120 2010/06/06 10:49:56 kristaps Exp $
d336 5
a340 2
Following that, convention dictates specifying at least the SYNOPSIS and
DESCRIPTION sections, although this varies between manual sections.
d456 4
a459 2
See
.Sx \&Op ,
d461 1
d463 16
d480 1
a480 2
and
.Sx \&Vt .
d1680 2
d1711 1
a1711 4
If invoked in the
.Em SYNOPSIS
section, vertical space is asserted before and after the macro.
In all cases, the function arguments are surrounded in parenthesis and
d1725 1
a1725 3
.Sx \&Fa ,
.Sx \&Fo ,
.Sx \&Fc ,
a1748 8
In the
.Em SYNOPSIS
section, a
.Sx \&Fo
block is surrounded by vertical space unless
.Sx \&Ft
is the prior macro, in which case it is preceded by only a newline.
.Pp
d1754 1
a1757 3
.Sx \&Fn .
.Sx \&Fc .
.Ss \&Fr
a1763 11
If invoked before a
.Sx \&Fo
or
.Sx \&Fn
in the
.Em SYNOPSIS
section, a line-break will follow.
Furthermore, if invoked in the
.Em SYNOPSIS
section, it will assert vertical space prior to its arguments.
.Pp
d1772 2
a1773 2
.Sx \&Fo ,
.Sx \&Fc ,
d1775 1
a1775 1
.Sx \&Fn .
d1804 1
a1804 2
the arguments is enclosed in angled braces, and a newline is asserted.
In all other invocations, only angled braces will enclose the argument.
d1806 1
a1806 1
Examples
d1808 3
d2100 2
a2101 1
This is also used for indicating global variables in the SYNOPSIS
d2105 3
a2107 2
syntax when invoked as the first macro in the SYNOPSIS section, else it
accepts ordinary
d2120 1
a2120 1
.Sx \&Ft
@


1.120
log
@Shortened "its calling syntax" -> "its syntax".

Better documentation for `Fa' and some others.

Added `Ft', `Fo', and some COMPATIBILITY notes.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.119 2010/06/04 22:16:27 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: June 4 2010 $
d1888 1
a1888 1
.D1 .It \(dqcol1 ; <TAB> col2 ;\(dq ;
d2116 1
a2116 1
.D1 \&.Vt extern const char * const sys_signame[] ;
d2151 1
a2151 1
.D1 \&.Xr mandoc 1 ;
@


1.119
log
@Fixed `Fn' newline behaviour and added some regression tests to this
extent.

Documented `Fn'.  Please note the COMPATIBILITY note regarding historic
groff.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.118 2010/06/04 21:49:39 kristaps Exp $
d1337 1
a1337 1
Its calling syntax is as follows:
d1339 1
a1339 1
.D1 \. Ns Sx \&Db Cm on | off
d1349 1
a1349 1
Its calling syntax is as follows:
d1351 1
a1351 1
.D1 \. Ns Sx \&Dd Cm date
d1410 11
a1420 3
Its calling syntax is as follows:
.Pp
.D1 \. Ns Sx \&Dt Op Cm title Op Cm section Op Cm volume | arch
d1622 7
d1635 2
d1648 3
d1680 1
a1680 1
Its calling syntax is as follows:
d1687 1
a1696 1
.D1 \&.Fn funcname
d1699 4
d1711 38
d1751 28
d1813 2
a1814 1
A list item.  The syntax of this macro depends on the list type.
d1823 1
a1823 1
have the following calling syntax:
d1825 1
a1825 1
.D1 \. Ns Sx \&It Cm args
d1834 1
a1834 1
have the following calling syntax:
d1836 1
a1836 1
.D1 \. Ns Sx \&It
d1847 1
a1847 1
list has syntax
d1849 1
a1849 1
.D1 \. Ns Sx \&It Op Cm args
d1851 1
a1851 1
with subsequent lines interpreted as with
d1860 1
a1860 1
Its syntax is
d1862 1
a1862 1
.D1 \. Ns Sx \&It Op Cm args
d1864 1
a1864 1
where
d1896 1
a1896 1
The calling syntax is as follows:
d1898 1
a1898 1
.D1 \. Ns Sx \&Lb Cm library
d1920 1
a1920 1
The calling syntax is as follows:
d1922 1
a1922 1
.D1 \. Ns Sx \&Lk Cm uri Op Cm name
d1936 1
a1936 1
The calling syntax is as follows:
d1938 1
a1938 1
.D1 \. Ns Sx \&Mt Cm address
d1971 2
a1972 1
file.  Its calling syntax is as follows:
d1974 1
a1974 1
.D1 \. Ns Sx \&Os Op Cm system
d2046 1
d2132 1
a2132 1
Its calling syntax is
d2134 1
a2134 1
.D1 \. Ns Sx \&Xr Cm name section
d2171 26
a2285 5
.Sx \&Fo
macro only produces the first parameter.
This is not the case in mandoc.
.It
In groff, the
@


1.118
log
@Documented `In' in full.

Fixed `In' to behave properly: it wasn't properly breaking lines,
formatting, or really anything else.  Noted COMPATIBILITY with
OpenBSD's groff, which pukes all over `In'.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.117 2010/06/04 20:57:26 kristaps Exp $
d1659 27
d2078 6
@


1.117
log
@Documented `Db', `El', `Fa', and `Fd'.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.116 2010/06/03 15:54:27 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: June 3 2010 $
d36 1
a36 1
document follows simple rules:  lines beginning with the control
d125 1
a125 1
the current font scope only:  if a macro opens a font scope alongside
d1682 13
d2051 6
@


1.116
log
@Document the `Mt' macro.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.115 2010/06/03 14:52:32 kristaps Exp $
d1335 5
d1567 7
d1613 18
d1633 7
@


1.115
log
@Compatibility note about `Ta' being a line macro.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.114 2010/06/03 14:29:52 kristaps Exp $
d1765 9
@


1.114
log
@Complete, rigorous documentation of the `Bl' and `It' macros, including
the peculiarities with `It'-less `Bl -column' invocations, column
phrases, per-type syntax of `It', etc.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.113 2010/06/02 12:01:00 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: June 2 2010 $
d1992 5
@


1.113
log
@Strip empty-line markers from mdoc.template and its mdoc.7 embedded form
(as per Jason McIntyre's suggestion for manuals in general).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.112 2010/05/31 10:19:31 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: May 31 2010 $
d1139 12
a1150 16
List entry bodies must be left empty.
Column bodies have the following syntax:
.Pp
.D1 .It col1 <TAB> ... coln
.D1 .It col1 \&Ta ... coln
.D1 .It col1 <TAB> col2 \&Ta coln
.Pp
where columns may be separated by tabs, the literal string
.Qq \&Ta ,
or a mixture of both.
These are equivalent except that quoted sections propogate over tabs,
for example,
.Pp
.D1 .It \(dqcol1 ; <TAB> col2 ;\(dq ;
.Pp
will preserve the semicolon whitespace except for the last.
d1205 3
d1646 80
@


1.112
log
@Fix unescaped `Ta' invocations in mdoc.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.111 2010/05/30 11:00:53 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: May 30 2010 $
a345 1
\&.
a350 1
\&.
a354 1
\&.
@


1.111
log
@Made `Dt' default to LOCAL and UNKNOWN instead of local and unknown (note case).

Have `Dt' default to UNKNOWN if it's an empty string.

Raise a warning if `Dt' title isn't capitalised.

Sync'd `Dt' documentation with reality.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.110 2010/05/26 10:39:35 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: May 26 2010 $
d1146 2
a1147 2
.D1 .It col1 Ta ... coln
.D1 .It col1 <TAB> col2 Ta coln
d1150 1
a1150 1
.Qq Ta ,
@


1.110
log
@Documented `Ud'.

Proper EOS handling for `Rv', `Ex', `Ud', and `Bt'.

Both `Bt' and `Ud' now warn about and discard line arguments (reported
by Ulrich Spoerlein).

Collapsed posts_xr into posts_wtext (harmless: they're the same thing).

Added regressions for `Ud' and `Bt'.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.109 2010/05/26 09:35:35 kristaps Exp $
d1411 1
a1411 1
.D1 \. Ns Sx \&Dt Cm title section Op Cm volume | arch
d1416 4
a1419 2
The document's title (name).
This should be capitalised and is required.
d1456 3
a1458 2
It is also required and should correspond to the manual's filename
suffix.
a1529 1
.D1 \&.Dt FOO 9 KM i386
@


1.109
log
@Fixed `Lb' to be in_line (reported by Ulrich Spoerlein).

Added `Lb' documentation to mdoc.7.

Removed harmless but superfluous pre_lb check (was just NULL entries).

Added regressions for `Lb' (NOTE that these will only run on new groff,
as old groff doesn't support `Lb' at all).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.108 2010/05/15 16:24:37 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: May 15 2010 $
d1823 2
@


1.108
log
@LIBRARY can also occur in section 9.
All manual sections (unknown, 3p, 3f, etc.) correctly handled by -mdoc.
Useful warning printed if unknown manual section.
Checking for manual sections (e.g., LIBRARY) checks only first character, so 3p, 3f, etc. are free.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.107 2010/05/15 07:01:51 kristaps Exp $
d734 3
a736 1
in a SYNOPSIS section line, else it is
d1649 22
@


1.107
log
@Documented EOS buffered spaces and added `]'.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.106 2010/05/14 17:31:25 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: May 14 2010 $
d350 1
a350 1
\&.\e\*q The next is for sections 2 & 3 only.
d412 1
a412 1
assumed to be a function in a section 2 or 3 manual.
@


1.106
log
@Backed out check for `Ex' manual sec (ok schwarze@@, joerg@@), in turn backing out check_msec() and deps.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.105 2010/05/14 16:02:29 kristaps Exp $
d304 6
a309 1
or question mark.
d312 4
a315 1
the boundary of a macro line.
@


1.105
log
@"Warn on unknown argument for .At and print it like [new] groff." (patch by Joerg Sonnenberger, ed. Kristaps)
Keep short-log of commits in index.sgml.
Document compatibility with new/old groff in mdoc.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.104 2010/05/14 15:17:23 kristaps Exp $
d1959 1
d1961 1
a1961 1
.Sx \&Ex
@


1.104
log
@Finish initial documentation of the Bl lists.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.103 2010/05/14 15:02:03 kristaps Exp $
d1963 6
@


1.103
log
@Re-addition of cleaned-up list documentation in mdoc.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.102 2010/05/14 14:21:17 kristaps Exp $
d1096 12
d1118 3
d1123 3
d1152 3
d1159 3
d1166 3
d1174 3
d1182 3
d1188 3
d1193 3
@


1.102
log
@Added documentation bits.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.101 2010/05/12 17:08:03 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: May 12 2010 $
d1095 68
a1162 54
.\" Begins a list composed of one or more list entries.  A list entry is
.\" specified by the
.\" .Sx \&It
.\" macro, which consists of a head and optional body.  By default, a list
.\" is preceded by a blank line.  A list must specify one of the following
.\" list types:
.\" .Bl -tag -width 12n
.\" .It Fl bullet
.\" A list offset by a bullet.  The head of list entries must be empty.
.\" List entry bodies are justified after the bullet.
.\" .It Fl column
.\" A columnated list.  The number of columns is specified as arguments to
.\" the
.\" .Sx \&Bl
.\" macro (the deprecated form of following the invocation of
.\" .Fl column
.\" is also accepted).  Arguments dictate the width of columns specified in
.\" list entries.  List entry bodies must be left empty.  Columns specified
.\" in the list entry head are justified to their position in the sequence
.\" of columns.
.\" .It Fl dash
.\" A list offset by a dash (hyphen).  The head of list entries must be
.\" empty.  List entry bodies are justified past the dash.
.\" .It Fl diag
.\" Like
.\" .Fl inset
.\" lists, but with additional formatting to the head.
.\" .It Fl enum
.\" A list offset by a number indicating list entry position.  The head of
.\" list entries must be empty.  List entry bodies are justified past the
.\" enumeration.
.\" .It Fl hang
.\" Like
.\" .Fl tag ,
.\" but instead of list bodies justifying to the head on the first line,
.\" they trail the head text.
.\" .It Fl hyphen
.\" Synonym for
.\" .Fl dash .
.\" .It Fl inset
.\" Like
.\" .Fl tag ,
.\" but list entry bodies aren't justified.
.\" .It Fl item
.\" An un-justified list.  This produces blocks of text.
.\" .It Fl ohang
.\" List bodies are placed on the line following the head.
.\" .It Fl tag
.\" A list offset by list entry heads.  List entry bodies are justified
.\" after the head.
.\" .El
.\" .Pp
.\" More...
.\" .
@


1.101
log
@Put the eos-checker into libmandoc.h.
Added bits in mdoc.7 and man.7 about EOS spacing.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.100 2010/05/12 16:45:18 kristaps Exp $
d305 3
@


1.100
log
@End of sentence, end of line for mdoc.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.99 2010/05/12 08:41:17 kristaps Exp $
d299 6
@


1.99
log
@mdoc_atosec -> mdoc_str2sec (consistent with str2 being different from a2).
Changed ordering of sections (EXIT STATUS moved around), argued for by Ulrich Sporlein.
Fixed mdoc_str2sec not to use weird structure.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.98 2010/05/08 22:26:39 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: May 8 2010 $
d104 2
a105 1
or a single one-character sequence.  See
d107 2
a108 1
for a complete list.  Examples include
d123 2
a124 1
respectively) may be used instead.  A text decoration is valid within
d131 2
a132 1
are only valid within the font scope of the macro.  If
d181 2
a182 1
for a complete list.  Examples include
d195 2
a196 2
In macro lines, whitespace delimits arguments and is discarded.  If
arguments are quoted, whitespace within the quotes is retained.
d199 4
a202 4
space-delimited terms or to retain blocks of whitespace.  A quoted
argument begins with a double-quote preceded by whitespace.  The next
double-quote not pair-wise adjacent to another double-quote terminates
the literal, regardless of surrounding whitespace.
d211 2
a212 1
considered literal text.  Thus, the following produces
d222 2
a223 2
that require a date argument.  The canonical form for dates is the
American format:
d229 2
a230 1
value is an optionally zero-padded numeral.  The
d232 2
a233 1
value is the full month name.  The
d257 2
a258 2
Negative numbers, while accepted, are truncated to zero.  The following
scaling units are accepted:
d296 2
a297 1
is necessarily non-portable across output media.  See
d370 2
a371 2
document are conventionally ordered as they appear above.  Sections
should be composed as follows:
d374 2
a375 2
The name(s) and a short description of the documented material.  The
syntax for this as follows:
d395 2
a396 2
assumed to be a function in a section 2 or 3 manual.  The syntax for
this is as follows:
d461 3
a463 3
Implementation-specific notes should be kept here.  This is useful when
implementing standard functions that may have side effects or notable
algorithmic implications.
d467 2
a468 2
which is used for commands.  It documents the return values of functions
in sections 2, 3, and 9.
d479 3
a481 2
Documents files used.  It's helpful to document both the file and a
short description of how the file is used (created, modified, etc.).
d486 2
a487 2
Command exit status for section 1, 6, and 8 manuals.  This section is
the dual of
d489 2
a490 2
which is used for functions.  Historically, this information was
described in
d497 3
a499 3
Example usages.  This often contains snippets of well-formed,
well-tested invocations.  Make doubly sure that your examples work
properly!
d501 2
a502 1
Documents error conditions.  This is most useful in section 4 manuals.
d517 4
a520 3
References other manuals with related topics.  This section should exist
for most manuals.  Cross-references should conventionally be ordered
first by section, then alphabetically.
d525 2
a526 2
References any standards implemented or used.  If not adhering to any
standards, the
d554 4
a557 3
at the beginning of the line.  An arbitrary amount of whitespace may
sit between the control character and the macro name.  Thus, the
following are equivalent:
d563 2
a564 1
The syntax of a macro depends on its classification.  In this section,
d577 3
a579 2
line-macro.  If a macro is not callable, then its invocation after the
initial line macro is interpreted as opaque text, such that
d587 3
a589 2
(ostensibly callable) macros.  If a macro is not parsable, subsequent
macro invocations on the line will be interpreted as opaque text.
d595 2
a596 2
Multi-line scope closed by an explicit closing macro.  All macros
contains bodies; only
d644 2
a645 2
Like block full-explicit, but also with single-line scope.  Each
has at least a body and, in limited circumstances, a head
d722 3
a724 3
end of line, fixed argument lengths, and/or subsequent macros.  In-line
macros have only text children.  If a number (or inequality) of
arguments is
d814 2
a815 1
alphabetically.  For the scoping of individual macros, see
d896 3
a898 2
Author name.  This macro may alternatively accepts the following
arguments, although these may not be specified along with a parameter:
d909 2
a910 1
interspersed by other macros or text, are split.  Thus, specifying
d912 2
a913 2
will cause the first listing also to be split.  If not in the AUTHORS
section, the default is not to split.
d929 2
a930 2
Begins a block enclosed by angled brackets.  Does not have any head
arguments.
d938 3
a940 3
Inserts an apostrophe without any surrounding white-space.  This is
generally used as a grammatic device when referring to the verb form of
a function:
d963 2
a964 1
Command arguments.  If an argument is not provided, the string
d973 2
a974 1
Formats an AT&T version.  Accepts at most one parameter:
d1004 5
a1008 4
Begins a display block.  A display is collection of macros or text which
may be collectively offset or justified in a manner different from that
of the enclosing context.  By default, the block is preceded by a
vertical space.
d1026 2
a1027 1
The type must be provided first.  Secondary arguments are as follows:
d1048 2
a1049 2
As a precalculated width for a named macro.  The most popular is the
imaginary macro
d1141 2
a1142 2
Begins a block enclosed by square brackets.  Does not have any head
arguments.
d1173 2
a1174 2
Begins a block enclosed by curly braces.  Does not have any head
arguments.
d1230 2
a1231 1
Configuration declaration.  This denotes strings accepted by
d1241 2
a1242 1
declarations.  This practise is discouraged.
d1244 2
a1245 2
Command modifiers.  Useful when specifying configuration options or
keys.
d1254 4
a1257 2
One-line indented display.  This is formatted by the default rules and
is useful for simple indented statements.  It is followed by a newline.
d1272 2
a1273 1
Document date.  This is the mandatory first macro of any
d1275 2
a1276 1
manual.  Its calling syntax is as follows:
d1300 4
a1303 2
One-line intended display.  This is formatted as literal text and is
useful for commands and invocations.  It is followed by a newline.
d1333 2
a1334 1
Document title.  This is the mandatory second macro of any
d1336 2
a1337 1
file.  Its calling syntax is as follows:
d1344 2
a1345 2
The document's title (name).  This should be capitalised and is
required.
d1347 2
a1348 1
The manual section.  This may be one of
d1414 2
a1415 1
This specifies a specific relevant architecture.  If
d1418 3
a1420 1
subsequent that.  It, too, is optional.  It must be one of
d1493 3
a1495 3
Denotes text that should be emphasised.  Note that this is a
presentation term and should not be used for stylistically decorating
technical terms.
d1520 2
a1521 2
Inserts text regarding a utility's exit values.  This macro must have
first the
d1534 3
a1536 2
Command-line flag.  Used when listing arguments to command-line
utilities.  Prints a fixed-width hyphen
d1538 4
a1541 3
directly followed by each argument.  If no arguments are provided, a hyphen is
printed followed by a space.  If the argument is a macro, a hyphen is
prefixed to the subsequent macro output.
d1579 2
a1580 1
Format a hyperlink.  The calling syntax is as follows:
d1618 2
a1619 1
Document operating system version.  This is the mandatory third macro of
d1628 3
a1630 3
parameter specifies the relevant operating system or environment.  Left
unspecified, it defaults to the local operating system version.  This is
the suggested form.
d1676 2
a1677 1
block.  Does not have any tail arguments.
d1681 3
a1683 2
block.  Does not have any head arguments.  The block macro may only
contain
d1730 2
a1731 1
Format the UNIX name.  Accepts no argument.
d1747 4
a1750 3
A variable type.  This is also used for indicating global variables in the
SYNOPSIS section, in which case a variable name is also specified.  Note that
it accepts
d1773 3
a1775 3
Open an extension scope.  This macro originally existed to extend the
9-argument limit of troff; since this limit has been lifted, the macro
has been deprecated.
d1787 2
a1788 1
are the name and section of the linked manual.  If
d1792 2
a1793 2
is inserted into the token stream.  This behaviour is for compatibility
with
d1825 2
a1826 1
certain list types.  mandoc does.
d1830 2
a1831 1
arguments.  mandoc and newer groff implementations do.
d1836 2
a1837 1
within line-macro scopes.  mandoc follows a consistent system.
d1840 2
a1841 1
move to prior lines.  Furthermore, the
d1846 2
a1847 2
standalone double-quote in formatted output.  This idiosyncratic
behaviour is not applicable in mandoc.
d1858 2
a1859 2
argument is ignored.  Lastly, since text is not right-justified in
mandoc (or even groff),
d1868 2
a1869 2
Historic groff has many un-callable macros.  Most of these (excluding
some block-level macros) are now callable.
d1886 2
a1887 1
delimiter to render.  This is not supported in mandoc.
d1891 2
a1892 2
macro only produces the first parameter.  This is not the case in
mandoc.
d1899 2
a1900 2
macros were stipulated only to occur in certain manual sections.  mandoc
does not have these restrictions.
@


1.98
log
@Adding initial mailing list section to homepage.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.97 2010/05/08 10:28:24 kristaps Exp $
a336 2
\&.\e\*q The next is for sections 1 & 8 only.
\&.\e\*q .Sh EXIT STATUS
d342 2
a454 11
.It Em EXIT STATUS
Command exit status for section 1, 6, and 8 manuals.  This section is
the dual of
.Em RETURN VALUES ,
which is used for functions.  Historically, this information was
described in
.Em DIAGNOSTICS ,
a practise that is now discouraged.
.Pp
See
.Sx \&Ex .
d475 11
@


1.97
log
@Note that whitespace is really only the space character.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.96 2010/05/08 08:36:44 kristaps Exp $
d184 1
a184 1
Whitespace consists of the space character.  
@


1.96
log
@Strip trailing, unescaped whitespace from free-form, non-literal lines (like groff).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.95 2010/05/07 15:49:36 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: May 7 2010 $
d184 1
d187 1
a187 1
Blank free-form lines, which may include spaces, are only permitted
@


1.95
log
@De-chunking of text removed from parsers.  This is a significant change (and I don't really like it), but it's what groff does.
Distinction of ARGS_PHRASE and ARGS_PPHRASE in backend (not yet used).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.94 2010/04/13 05:26:49 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: April 13 2010 $
d184 4
a187 8
In non-literal free-form lines, consecutive blocks of whitespace are
pruned from input and added later in the output filter, if applicable:
.Bd -literal -offset indent
These     spaces   are    pruned       from    input.
\&.Bd \-literal
These         are              not.
\&.Ed
.Ed
a190 6
.Pp
Blank lines are only permitted within literal contexts, as are lines
containing only whitespace.  Tab characters are only acceptable when
delimiting
.Sq \&Bl \-column
or when in a literal context.
@


1.94
log
@As per Jason McIntyre's heartful urgings, do away with '.' separators between logical sections.
Change email address to BSD.lv one (this is not an academic project...)
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.93 2010/04/07 19:37:54 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: April 7 2010 $
a1826 4
In mandoc, blocks of whitespace are stripped from both macro and
free-form text lines (except when in literal mode); groff would retain
whitespace in free-form text lines.
.It
@


1.93
log
@Added some clarifying bits to mdoc.7 regarding GNU troff, mandoc, and Heirloom troff.  Bits on Heirloom troff suggested from private communication with Gunnar Ritter (maintainer of Heirloom troff) (Heirloom uses BSD-4.4 mdoc files, from which historic groff -mdoc descends).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.92 2010/04/07 18:50:35 kristaps Exp $
d3 1
a3 1
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@kth.se>
a19 2
.
.
a22 2
.
.
a32 1
.
a44 2
.
.
a51 2
.
.
a59 2
.
.
a86 1
.
a93 2
.
.
a111 2
.
.
a158 2
.
.
a182 2
.
.
a191 1
.
a194 1
.
a200 2
.
.
a206 1
.
a219 1
.
a221 1
.
a247 1
.
a253 1
.
a298 2
.
.
a392 1
.
a402 1
.
a445 1
.
a459 1
.
a463 1
.
a474 1
.
a482 1
.
a488 1
.
a494 1
.
a498 1
.
a508 1
.
a513 1
.
a520 1
.
a528 1
.
a532 1
.
a538 1
.
a541 1
.
a543 1
.
a545 1
.
a546 2
.
.
a557 1
.
a567 1
.
a576 1
.
a582 1
.
a586 2
.
.
a596 1
.
a608 2
.
.
a627 1
.
a635 2
.
.
a652 1
.
a680 2
.
.
a687 1
.
a711 2
.
.
a726 1
.
a804 2
.
.
a808 1
.
a815 1
.
a820 1
.
a828 1
.
a834 1
.
a838 1
.
a842 1
.
a846 1
.
a850 1
.
a854 1
.
a860 1
.
a864 1
.
a869 1
.
a871 1
.
a875 1
.
a879 1
.
a886 1
.
a917 1
.
a926 1
.
a933 1
.
a951 1
.
a960 1
.
a986 1
.
a990 1
.
a1068 1
.
a1137 1
.
a1153 1
.
a1157 1
.
a1169 1
.
a1177 1
.
a1194 1
.
a1197 1
.
a1214 1
.
a1226 1
.
a1236 1
.
a1247 1
.
a1252 1
.
a1278 1
.
a1289 1
.
a1298 1
.
a1309 1
.
a1432 1
.
a1441 1
.
a1458 1
.
a1463 1
.
a1471 1
.
a1482 1
.
a1483 1
.
a1490 1
.
a1520 1
.
a1541 1
.
a1558 1
.
a1582 1
.
a1608 1
.
a1613 1
.
a1630 1
.
a1640 1
.
a1644 1
.
a1682 1
.
a1709 1
.
a1732 1
.
a1735 1
.
a1739 1
.
a1762 1
.
a1764 2
.
.
a1774 1
.
a1777 1
.
a1783 1
.
a1788 1
.
a1797 1
.
a1802 1
.
a1806 1
.
a1825 1
.
a1829 1
.
a1832 1
.
a1838 1
.
a1844 1
.
a1849 1
.
a1854 1
.
a1863 2
.
.
a1866 2
.
.
d1871 1
a1871 1
.An Kristaps Dzonsons Aq kristaps@@kth.se .
@


1.92
log
@Allowing `Cd' to be in section 9 (noted by Joerg Sonnenberger).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.91 2010/04/07 08:17:16 kristaps Exp $
d34 1
a34 3
and usage.  Our reference implementation is
.Xr mandoc 1 .
The
d36 1
a36 2
section describes compatibility with
.Xr groff 1 .
d1322 1
a1322 2
Configuration declaration (suggested for use in section four and nine
manuals).  This denotes strings accepted by
d1905 3
a1907 3
This section documents compatibility with other roff implementations, at
this time limited to
.Xr groff 1 .
d1910 1
a1910 1
refers to those versions before the
d1916 4
d1925 1
d1927 1
a1927 3
In
.Xr groff 1 ,
the
d1930 2
a1931 1
certain list types.  This irregular behaviour has been discontinued.
d1933 1
a1933 3
Historic
.Xr groff 1
does not print a dash for empty
d1935 1
a1935 1
arguments.  This behaviour has been discontinued.
d1937 1
a1937 2
.Xr groff 1
behaves strangely (even between versions) when specifying
d1939 3
a1941 2
escapes within line-macro scopes.  These aberrations have been
normalised.
d1943 2
a1944 5
Negative scaling units are now truncated to zero instead of creating
interesting conditions, such as with
.Sx \&sp
.Fl 1i .
Furthermore, the
d1947 1
d1951 2
a1952 1
behaviour is no longer applicable.
d1960 2
a1961 2
.Fl left .
The
d1963 2
a1964 1
argument is ignored.  Since text is not right-justified,
d1972 1
d1974 4
a1977 3
Blocks of whitespace are stripped from both macro and free-form text
lines (except when in literal mode), while groff would retain whitespace
in free-form text lines.
d1980 2
a1981 2
some block-level macros) are now callable, conforming to the
non-historic groff version.
d1987 2
a1988 1
but is a proper delimiter in this implementation.
d1990 1
a1990 2
.Sx \&It
.Fl nested
d1995 1
d2000 2
a2001 1
delimiter to render.  This is not supported.
d2005 11
a2015 1
macro only produces the first parameter.  This is no longer the case.
@


1.91
log
@Breaking mdoc.7's multiline examples into sets of D1.  A few errors found here and there.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.90 2010/04/06 17:01:27 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: April 6 2010 $
d1325 1
a1325 1
Configuration declaration (suggested for use only in section four
@


1.90
log
@Removed warning for `Er' when not used in certain sections (pointed out by Joerg Sonnenberger).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.89 2010/04/06 11:19:57 kristaps Exp $
d977 2
a978 4
.Bd -literal -offset indent
\&.Ad [0,$]
\&.Ad 0x00000000
.Ed
d999 2
a1000 5
.Bd -literal -offset indent
\&.An -nosplit
\&.An J. E. Hopcraft ,
\&.An J. D. Ullman .
.Ed
d1017 1
a1017 3
.Bd -literal -offset indent
\&.Fl -key= Ns Ao Ar val Ac
.Ed
d1034 1
a1034 3
.Bd -literal -offset indent
\&.Fl -key= Ns Aq Ar val
.Ed
d1055 3
a1057 5
.Bd -literal -offset indent
\&.Fl o Ns Ar file1
\&.Ar
\&.Ar arg1 , arg2 .
.Ed
d1073 2
a1074 4
.Bd -literal -offset indent
\&.At
\&.At V.1
.Ed
d1234 1
a1234 1
\&.Dv BUFSIZ Bc
d1244 1
a1244 3
.Bd -literal -offset indent
\&.Bq 1 , Dv BUFSIZ
.Ed
d1269 1
a1269 1
\&.Va n Brc
d1279 1
a1279 3
.Bd -literal -offset indent
\&.Brq 1 , ... , Va n
.Ed
d1289 2
a1290 4
.Bd -literal -offset indent
\&.Bsx 1.0
\&.Bsx
.Ed
d1311 2
a1312 4
.Bd -literal -offset indent
\&.Bx 4.4
\&.Bx
.Ed
d1330 1
a1330 3
.Bd -literal -offset indent
\&.Cd device le0 at scode?
.Ed
d1343 2
a1344 4
.Bd -literal -offset indent
\&.Cm ControlPath
\&.Cm ControlMaster
.Ed
d1354 1
a1354 3
.Bd -literal -offset indent
\&.D1 Fl abcdefgh
.Ed
d1385 3
a1387 5
.Bd -literal -offset indent
\&.Dd $\&Mdocdate$
\&.Dd $\&Mdocdate: July 21 2007$
\&.Dd July 21, 2007
.Ed
d1399 1
a1399 3
.Bd -literal -offset indent
\&.Dl % mandoc mdoc.7 | less
.Ed
d1411 1
a1411 3
.Bd -literal -offset indent
\&.D1 Do April is the cruellest month Dc \e(em T.S. Eliot
.Ed
d1420 1
a1420 1
.Bd -literal -offset indent
d1542 4
a1545 6
.Bd -literal -offset indent
\&.Dt FOO 1
\&.Dt FOO 4 KM
\&.Dt FOO 9 i386
\&.Dt FOO 9 KM i386
.Ed
d1556 2
a1557 4
.Bd -literal -offset indent
\&.Dv BUFSIZ
\&.Dv STDOUT_FILENO
.Ed
d1567 2
a1568 4
.Bd -literal -offset indent
\&.Dx 2.4.1
\&.Dx
.Ed
d1585 1
d1592 2
a1593 4
.Bd -literal -offset indent
\&.Ed Warnings!
\&.Ed Remarks :
.Ed
d1601 2
a1602 4
.Bd -literal -offset indent
\&.Er EPERM
\&.Er ENOENT
.Ed
d1614 2
a1615 4
.Bd -literal -offset indent
\&.Ev DISPLAY
\&.Ev PATH
.Ed
d1640 4
a1643 6
.Bd -literal -offset indent
\&.Fl a b c
\&.Fl Pf a b
\&.Fl
\&.Op Fl o Ns Ar file
.Ed
d1657 2
a1658 4
.Bd -literal -offset indent
\&.Fx 7.1
\&.Fx
.Ed
d1682 2
a1683 4
.Bd -literal -offset indent
\&.Lk http://bsd.lv "The BSD.lv Project"
\&.Lk http://bsd.lv
.Ed
d1700 2
a1701 4
.Bd -literal -offset indent
\&.Nx 5.01
\&.Nx
.Ed
d1731 3
a1733 5
.Bd -literal -offset indent
\&.Os
\&.Os KTH/CSC/TCS
\&.Os BSD 4.3
.Ed
d1751 2
a1752 4
.Bd -literal -offset indent
\&.Ox 4.5
\&.Ox
.Ed
d1802 1
a1802 1
.Bd -literal -offset indent
d1835 1
a1835 3
.Bd -literal -offset indent
\&.Ux
.Ed
d1863 2
a1864 4
.Bd -literal -offset indent
\&.Vt unsigned char
\&.Vt extern const char * const sys_signame[] ;
.Ed
d1900 3
a1902 5
.Bd -literal -offset indent
\&.Xr mandoc 1
\&.Xr mandoc 1 ;
\&.Xr mandoc 1 s behaviour
.Ed
@


1.89
log
@Note on `Fl' documented in mdoc.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.88 2010/04/06 07:17:51 kristaps Exp $
d1638 1
a1638 1
Error constants (suggested for use only in section two manuals).
@


1.88
log
@Fix mdoc bug found by Claus Assmann: `Pf' should be callable.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.87 2010/03/31 07:13:53 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: March 31 2010 $
d1679 3
a1681 2
before each delimited argument.  If no arguments are provided, a hyphen
is still printed.
d1686 1
@


1.87
log
@Macro types enum-ated (enum mdoct) (for easier debugging in gdb of "tok" values).
Initial check-in of Ingo Schwarze's patch for Xo/Xc handling (in blocks ifdef'd "UGLY").
Put Oc-close-Op parts into UGLY ifdef blocks.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.86 2010/03/26 07:07:58 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: March 26 2010 $
d863 1
a863 1
.It Sx \&Pf  Ta    \&No     Ta    Yes      Ta    1
@


1.86
log
@Fixed misspelt "Loongson" (noted by Ingo Schwarze).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.85 2010/03/21 18:16:41 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: March 21 2010 $
d1930 3
d1934 4
@


1.85
log
@Added Longsoon architecture (thanks Jason McIntyre, Ingo Schwarze).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.84 2010/02/17 19:22:50 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: February 17 2010 $
d1556 1
a1556 1
.Ar longsoon ,
@


1.84
log
@Macro documentation for `Xr'.
Re-added macros following `Vt' (lost somehow?).
Removed `Xr' <3 stipulations.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.83 2010/01/30 08:55:39 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: January 30 2010 $
d1556 1
@


1.83
log
@Added `Vt' double-type documentation.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.82 2010/01/07 19:10:10 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate$
d875 1
a875 1
.It Sx \&Xr  Ta    Yes      Ta    Yes      Ta    >0, <3
d1928 31
@


1.82
log
@Fix white-space issues found by mandoc's better white-space finder.
Fixed bogus `\\' escapes in some manuals.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.81 2010/01/01 16:52:00 kristaps Exp $
d773 1
d775 8
d1904 23
a1926 5
.Ss \&Xc
.Ss \&Xo
.Ss \&Xr
.Ss \&br
.Ss \&sp
@


1.81
log
@Noted non-accepted comment syntax (thanks Joerg Sonnenberger).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.80 2010/01/01 16:27:32 kristaps Exp $
d135 1
a135 1
(revert to previous mode):  
d173 1
a173 1
Note these forms are 
d175 1
a175 1
recommended for 
d181 1
a181 1
Historically, 
d183 1
a183 1
also defined a set of package-specific 
d185 1
a185 1
which, like 
d346 1
a346 1
The first section (sections are denoted by 
d423 1
a423 1
See 
d441 1
a441 1
configuration. 
d472 1
a472 1
Manuals not in these sections generally don't need a 
d475 1
a475 1
See 
d484 1
a484 1
This expands upon the brief, one-line description in 
d686 1
a686 1
.Pc 
d869 1
a869 1
.El   
d1029 1
a1029 1
Encloses its arguments in angled brackets.  
d1076 1
a1076 1
\&.At 
d1245 1
a1245 1
Encloses its arguments in square brackets.  
d1392 1
a1392 1
The 
d1441 1
a1441 1
Encloses its arguments in double quotes.  
d1927 1
a1927 1
Historic 
d1929 1
a1929 1
does not print a dash for empty 
@


1.80
log
@Issue of `Pa' put to rest by Jason McIntyre.  Noted in COMPATIBILITY.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.79 2010/01/01 13:35:30 kristaps Exp $
d1916 4
@


1.79
log
@Documented `Fl' in mdoc.7.
Backed out stipulation that `Fl ""' is ignored: this is not the case in !OpenBSD groffs.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.78 2009/11/16 09:52:47 kristaps Exp $
d422 5
d437 1
a437 2
.Sx \&Lb
for details.
d474 8
d495 1
d551 2
a552 1
.Sx \&Bl No \-diag .
d1177 54
a1230 1
.
d1916 7
d1938 1
a1938 1
.Cm \-1i .
@


1.78
log
@More clarification in manuals.  Added per-OUTPUT section in mandoc.1.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.77 2009/11/12 05:50:12 kristaps Exp $
d1599 16
d1849 6
@


1.77
log
@Basically re-wrote -Tascii font handling: instead of incrementers for
bold and underline, we use a stack (no cascading, no double-font-mode).
Font modes with \f only affect the current stack point, as documented in
mdoc.7 and man.7.  While -mdoc stacks fonts with embedded macros, -man
replaces them (the stack is always size 1).  This works for all
invocations in supported systems' manual corpora to date.  It doesn't
support groff's insanity with line-scoped \f as documented in mdoc.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.76 2009/11/09 05:11:46 kristaps Exp $
d143 1
a143 1
.Sx \&Bf 
d1841 1
a1841 1
.Sx \&sp 
d1852 1
a1852 1
.Sx \&Bd 
d1883 1
a1883 1
.Sx \&It 
@


1.76
log
@Documented \s and cleaned up \f documentation in mdoc.7, man.7.
-Thtml now using a2roffdeco().
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.75 2009/11/06 10:31:31 kristaps Exp $
d140 11
a150 1
respectively) may be used instead.
d1833 6
d1841 2
a1842 1
.Sq \&sp -1i .
d1852 2
a1853 1
.Sx \&Bd Fl center
d1883 2
a1884 1
.Sx \&It Fl nested
@


1.75
log
@-Tascii now correctly ignores \s clauses.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.74 2009/11/05 08:40:16 kristaps Exp $
d135 1
a135 2
(revert to previous mode).  A numerical representation 3, 2, or 1
(bold, italic, and Roman, respectively) may be used instead.  
d137 29
a165 1
These form is not recommended for 
@


1.74
log
@Correct support for `\fX' font modes in -Tascii.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.73 2009/11/02 11:39:40 kristaps Exp $
d136 3
a138 2
(bold, italic, and Roman, respectively) may be used instead.  This form
is not recommended for 
@


1.73
log
@Copied over and modified manual structure from man.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.72 2009/11/02 06:22:45 kristaps Exp $
d134 4
a137 2
escape followed by an indicator: B (bold), I, (italic), or P and R
(Roman, or reset).  This form is not recommended for 
d139 1
a139 1
which encourages semantic, not presentation, annotation.
@


1.72
log
@Added mandoc_a2time() for proper date conversion.
Fitted TH and Dd handlers to use mandoc_a2time().
Documented date syntax for -man, fixed documentation for -mdoc.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.71 2009/10/31 06:50:25 kristaps Exp $
d366 12
a377 3
.Bl -tag -width Ds -offset Ds
.It NAME
Must contain at least one
d379 166
a544 28
followed by
.Sx \&Nd .
The name needs re-stating since one
.Nm
documents can be used for more than one utility or function, such as
.Xr grep 1
also being referenced as
.Xr egrep 1
and
.Xr fgrep 1 .
.It LIBRARY
.It SYNOPSIS
.It DESCRIPTION
.It IMPLEMENTATION NOTES
.It EXIT STATUS
.It RETURN VALUES
.It ENVIRONMENT
.It FILES
.It EXAMPLES
.It DIAGNOSTICS
.It ERRORS
.It SEE ALSO
.It STANDARDS
.It HISTORY
.It AUTHORS
.It CAVEATS
.It BUGS
.It SECURITY CONSIDERATIONS
@


1.71
log
@Patch on DragonFly BSD syntax (thanks Sascha Wildner).
Noted inclusion into DragonFly BSD (thanks Sascha Wildner).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.70 2009/10/26 04:09:45 kristaps Exp $
d215 2
a216 3
that require a date argument.  The 
.Em canonical form
for dates is the American format:
d228 1
a228 7
The
.Em non-canonical form
is the same as the canonical form, but without the comma between the
.Cm Day
and
.Cm Year
field.
d230 2
a231 5
Lastly,
.Em reduced form
dates range from only a
.Cm Year
to the full canonical or non-canonical form.
a237 1
.D1 "May 20 2009" Pq non-canonical form
d702 2
a703 1
block.  This should follow the reduced syntax for 
a704 2
Canonical or non-canonical form is not necessary since publications are
often referenced only by year, or month and year.
d1143 1
a1143 1
.Xr cvs 1
d1146 1
@


1.70
log
@Full `%U' support.
`Lk' display fixed.
Renamed arg2xxxx as a2xxxx for consistency.
Renamed print_foot to print_man_foot for consistency.
Removed default printing of `~' when `Lk' not provided (not sure where I got that from).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.69 2009/10/24 05:52:13 kristaps Exp $
d1347 1
a1347 1
Format the DragonFlyBSD version provided as an argument, or a default
@


1.69
log
@Added `%U' to -mdoc (doesn't render in a nice way yet).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.68 2009/10/22 10:36:20 kristaps Exp $
d762 1
a762 1
URI of current document.
d1454 13
@


1.68
log
@Typo in mdoc.7 fixed (thanks to Joerg Sonnenberger).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.67 2009/10/22 10:33:28 kristaps Exp $
d614 1
d617 1
d761 3
@


1.67
log
@Groff-compatibility fix (Ds) (noted by Joerg Sonnenberger).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.66 2009/10/20 05:45:21 kristaps Exp $
d1550 1
a1550 1
block.  Does not have any head arguments.  The block macro and may only
@


1.66
log
@More updates to mdoc.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.65 2009/10/19 11:02:23 kristaps Exp $
d946 1
a946 1
.Ar Ds ,
@


1.65
log
@Continued work on mdoc.7.
Noted buffer overwrite bug in -Thtml -mdoc (will fix later).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.64 2009/10/19 10:18:05 kristaps Exp $
d213 36
a248 1
TODO.
d305 1
a305 1
Each
d307 4
a310 1
document must begin with a document prologue, containing, in order,
d314 6
a319 2
.Sx \&Os ,
then the NAME section containing at least one
d322 8
a329 1
.Sx \&Nd :
a371 1
.
d373 37
a409 2
Subsequent SYNOPSIS and DESCRIPTION sections are strongly encouraged,
but non-compulsory.
d690 2
a691 4
line.
.Pp
Author names should be ordered with full or abbreviated forename(s)
first, then full surname.
d711 1
a711 1
block.  This should follow the canonical syntax for 
d713 2
d784 1
a784 1
Renders a line break is rendered before each author listing.
d856 1
a856 1
Command arguments.  If an argument is not provided, the strings
d858 1
a858 1
are used as a default.
d887 1
d889 1
a889 1
.Sx \&Bsx ,
d974 5
d1058 1
d1066 3
d1082 1
d1090 15
d1106 12
d1119 13
d1134 4
d1139 27
d1167 13
d1181 11
d1193 11
d1205 124
d1330 11
d1342 19
d1367 10
d1380 11
d1392 1
d1394 9
d1404 10
d1434 1
d1436 1
a1436 1
.Sx \&Bsx ,
d1468 1
d1470 1
a1470 1
.Sx \&Bsx ,
d1480 25
d1506 5
d1525 1
d1608 1
d1610 1
a1610 1
.Sx \&Bsx ,
@


1.64
log
@Fixed -mdoc -Thtml with -item lists not to default-indent when width isn't specified.
Many more cleanups to mdoc.7 (ongoing completion and documentation of all macros).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.63 2009/10/19 07:34:43 kristaps Exp $
d623 1
a623 1
.Em Compatibility remark :
d802 9
a885 8
\&.Bd \-literal \-offset indent
int 
main(void) 
{
        printf("Hello, world!\en");
}
\&.Ed

d887 1
a887 2
Hello
      world.
d894 1
d896 12
d909 18
d928 4
d933 12
d946 10
d957 18
d977 18
d1028 18
d1061 18
d1085 18
d1171 16
@


1.63
log
@Beginning of mdoc.7 full-reference in place.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.62 2009/10/18 19:01:24 kristaps Exp $
d273 2
a274 2
.Sq \&Dd ,
.Sq \&Dt ,
d276 1
a276 1
.Sq \&Os ,
d278 1
a278 1
.Sq \&Nm
d280 1
a280 1
.Sq \&Nd :
d334 6
a339 5
sit between the control character and the macro name.  Thus,
.Sq \&.Pp
and
.Sq \&.\ \ \ \&Pp
are equivalent.  Macro names are two or three characters in length.
d378 1
a378 1
.Pq Sq \&Bf
d389 8
a396 8
.It \&Bd     Ta    \&No     Ta    \&No     Ta    closed by \&Ed
.It \&Bf     Ta    \&No     Ta    \&No     Ta    closed by \&Ef
.It \&Bk     Ta    \&No     Ta    \&No     Ta    closed by \&Ek
.It \&Bl     Ta    \&No     Ta    \&No     Ta    closed by \&El
.It \&Ed     Ta    \&No     Ta    \&No     Ta    opened by \&Bd
.It \&Ef     Ta    \&No     Ta    \&No     Ta    opened by \&Bf
.It \&Ek     Ta    \&No     Ta    \&No     Ta    opened by \&Bk
.It \&El     Ta    \&No     Ta    \&No     Ta    opened by \&Bl
d404 5
a408 5
.Sq \&It \-bullet ,
.Sq \-hyphen ,
.Sq \-dash ,
.Sq \-enum ,
.Sq \-item
d410 5
a414 3
don't have heads, while
.Sq \&It \-column
may have multiple heads.
d423 4
a426 4
.It \&It     Ta    \&No     Ta    Yes      Ta    closed by \&It, \&El
.It \&Nd     Ta    \&No     Ta    \&No     Ta    closed by \&Sh
.It \&Sh     Ta    \&No     Ta    \&No     Ta    closed by \&Sh
.It \&Ss     Ta    \&No     Ta    \&No     Ta    closed by \&Sh, \&Ss
d433 4
a436 1
.Pq So \&Fo Sc , So \&Eo Sc
d438 1
a438 1
.Pq So \&Ec Sc .
d451 1
a451 1
.It \&Ac     Ta    Yes      Ta    Yes      Ta    opened by Sx \&Ao
d453 16
a468 16
.It \&Bc     Ta    Yes      Ta    Yes      Ta    closed by \&Bo
.It \&Bo     Ta    Yes      Ta    Yes      Ta    opened by \&Bc
.It \&Brc    Ta    Yes      Ta    Yes      Ta    opened by \&Bro
.It \&Bro    Ta    Yes      Ta    Yes      Ta    closed by \&Brc
.It \&Dc     Ta    Yes      Ta    Yes      Ta    opened by \&Do
.It \&Do     Ta    Yes      Ta    Yes      Ta    closed by \&Dc
.It \&Ec     Ta    Yes      Ta    Yes      Ta    opened by \&Eo
.It \&Eo     Ta    Yes      Ta    Yes      Ta    closed by \&Ec
.It \&Fc     Ta    Yes      Ta    Yes      Ta    opened by \&Fo
.It \&Fo     Ta    \&No     Ta    \&No     Ta    closed by \&Fc
.It \&Oc     Ta    Yes      Ta    Yes      Ta    closed by \&Oo
.It \&Oo     Ta    Yes      Ta    Yes      Ta    opened by \&Oc
.It \&Pc     Ta    Yes      Ta    Yes      Ta    closed by \&Po
.It \&Po     Ta    Yes      Ta    Yes      Ta    opened by \&Pc
.It \&Qc     Ta    Yes      Ta    Yes      Ta    opened by \&Oo
.It \&Qo     Ta    Yes      Ta    Yes      Ta    closed by \&Oc
d471 4
a474 4
.It \&Sc     Ta    Yes      Ta    Yes      Ta    opened by \&So
.It \&So     Ta    Yes      Ta    Yes      Ta    closed by \&Sc
.It \&Xc     Ta    Yes      Ta    Yes      Ta    opened by \&Xo
.It \&Xo     Ta    Yes      Ta    Yes      Ta    closed by \&Xc
d489 11
a499 11
.It \&Aq     Ta    Yes      Ta    Yes
.It \&Bq     Ta    Yes      Ta    Yes
.It \&Brq    Ta    Yes      Ta    Yes
.It \&D1     Ta    \&No     Ta    \&Yes
.It \&Dl     Ta    \&No     Ta    Yes
.It \&Dq     Ta    Yes      Ta    Yes
.It \&Op     Ta    Yes      Ta    Yes
.It \&Pq     Ta    Yes      Ta    Yes
.It \&Ql     Ta    Yes      Ta    Yes
.It \&Qq     Ta    Yes      Ta    Yes
.It \&Sq     Ta    Yes      Ta    Yes
d534 60
a593 60
.It \&Ad     Ta    Yes      Ta    Yes      Ta    n
.It \&An     Ta    Yes      Ta    Yes      Ta    n
.It \&Ap     Ta    Yes      Ta    Yes      Ta    0
.It \&Ar     Ta    Yes      Ta    Yes      Ta    n
.It \&At     Ta    Yes      Ta    Yes      Ta    1
.It \&Bsx    Ta    Yes      Ta    Yes      Ta    n
.It \&Bt     Ta    \&No     Ta    \&No     Ta    0
.It \&Bx     Ta    Yes      Ta    Yes      Ta    n
.It \&Cd     Ta    Yes      Ta    Yes      Ta    >0
.It \&Cm     Ta    Yes      Ta    Yes      Ta    n
.It \&Db     Ta    \&No     Ta    \&No     Ta    1
.It \&Dd     Ta    \&No     Ta    \&No     Ta    >0
.It \&Dt     Ta    \&No     Ta    \&No     Ta    n
.It \&Dv     Ta    Yes      Ta    Yes      Ta    n
.It \&Dx     Ta    Yes      Ta    Yes      Ta    n
.It \&Em     Ta    Yes      Ta    Yes      Ta    >0
.It \&En     Ta    \&No     Ta    \&No     Ta    0
.It \&Er     Ta    Yes      Ta    Yes      Ta    >0
.It \&Es     Ta    \&No     Ta    \&No     Ta    0
.It \&Ev     Ta    Yes      Ta    Yes      Ta    n
.It \&Ex     Ta    \&No     Ta    \&No     Ta    n
.It \&Fa     Ta    Yes      Ta    Yes      Ta    n
.It \&Fd     Ta    \&No     Ta    \&No     Ta    >0
.It \&Fl     Ta    Yes      Ta    Yes      Ta    n
.It \&Fn     Ta    Yes      Ta    Yes      Ta    >0
.It \&Fr     Ta    \&No     Ta    \&No     Ta    n
.It \&Ft     Ta    Yes      Ta    Yes      Ta    n
.It \&Fx     Ta    Yes      Ta    Yes      Ta    n
.It \&Hf     Ta    \&No     Ta    \&No     Ta    n
.It \&Ic     Ta    Yes      Ta    Yes      Ta    >0
.It \&In     Ta    \&No     Ta    \&No     Ta    n
.It \&Lb     Ta    \&No     Ta    \&No     Ta    1
.It \&Li     Ta    Yes      Ta    Yes      Ta    n
.It \&Lk     Ta    Yes      Ta    Yes      Ta    n
.It \&Lp     Ta    \&No     Ta    \&No     Ta    0
.It \&Ms     Ta    Yes      Ta    Yes      Ta    >0
.It \&Mt     Ta    Yes      Ta    Yes      Ta    >0
.It \&Nm     Ta    Yes      Ta    Yes      Ta    n
.It \&No     Ta    Yes      Ta    Yes      Ta    0
.It \&Ns     Ta    Yes      Ta    Yes      Ta    0
.It \&Nx     Ta    Yes      Ta    Yes      Ta    n
.It \&Os     Ta    \&No     Ta    \&No     Ta    n
.It \&Ot     Ta    \&No     Ta    \&No     Ta    n
.It \&Ox     Ta    Yes      Ta    Yes      Ta    n
.It \&Pa     Ta    Yes      Ta    Yes      Ta    n
.It \&Pf     Ta    \&No     Ta    Yes      Ta    1
.It \&Pp     Ta    \&No     Ta    \&No     Ta    0
.It \&Rv     Ta    \&No     Ta    \&No     Ta    n
.It \&Sm     Ta    \&No     Ta    \&No     Ta    1
.It \&St     Ta    \&No     Ta    Yes      Ta    1
.It \&Sx     Ta    Yes      Ta    Yes      Ta    >0
.It \&Sy     Ta    Yes      Ta    Yes      Ta    >0
.It \&Tn     Ta    Yes      Ta    Yes      Ta    >0
.It \&Ud     Ta    \&No     Ta    \&No     Ta    0
.It \&Ux     Ta    Yes      Ta    Yes      Ta    n
.It \&Va     Ta    Yes      Ta    Yes      Ta    n
.It \&Vt     Ta    Yes      Ta    Yes      Ta    >0
.It \&Xr     Ta    Yes      Ta    Yes      Ta    >0, <3
.It \&br     Ta    \&No     Ta    \&No     Ta    0
.It \&sp     Ta    \&No     Ta    \&No     Ta    1
d606 1
a606 1
.Sq \%%A
d611 1
d617 1
d626 1
d632 1
d637 1
d642 1
d647 1
d652 1
d657 1
d662 1
a662 1
.Sq \&%Q
d664 1
d669 1
d675 1
d680 1
d685 1
d690 1
a690 1
Example:
d695 1
d697 34
d735 1
a735 1
Example:
d740 3
a742 5
Note that, although this is overwhelmingly used to note URIs, the
.Sx \&Lk
and
.Sx \&Mt
macros are better suited for this purpose.
d744 7
d752 20
d773 11
d785 18
d804 4
d809 82
d966 1
d971 1
d993 1
a993 1
Example:
d1010 1
a1053 9
The
.Sq \-split
or
.Sq \-nosplit
argument to 
.Sq \&An
applies to the whole document, not just to the current section as it
does in groff.
.It
d1058 6
d1065 9
a1073 2
.Sq \&sp
macro does not accept negative numbers.
d1089 1
a1089 1
.Sq \&It \-nested
d1092 1
a1092 1
.Sq \-enum
a1094 8
.Sq \&It \-column
syntax where column widths may be preceded by other arguments (instead
of proceeded) is not supported.
.It
The
.Sq \&At
macro only accepts a single parameter.
.It
d1096 1
a1096 1
.Sq \&Li
d1101 1
a1101 1
.Sq \&Fo
d1116 68
a1183 66
.
.
.Sh CAVEATS
There are many ambiguous parts of mdoc.
.
.Pp
.Bl -dash -compact
.It
.Sq \&Fa
should be
.Sq \&Va
as function arguments are variables.
.It
.Sq \&Ft
should be
.Sq \&Vt
as function return types are still types.  Furthermore, the
.Sq \&Ft
should be removed and
.Sq \&Fo ,
which ostensibly follows it, should follow the same convention as
.Sq \&Va .
.It
.Sq \&Va
should formalise that only one or two arguments are acceptable: a
variable name and optional, preceding type.
.It
.Sq \&Fd
is ambiguous.  It's commonly used to indicate an include file in the
synopsis section.
.Sq \&In
should be used, instead.
.It
Only the
.Sq \-literal
argument to
.Sq \&Bd
makes sense.  The remaining ones should be removed.
.It
The
.Sq \&Xo
and
.Sq \&Xc
macros should be deprecated.
.It
The
.Sq \&Dt
macro lacks clarity.  It should be absolutely clear which title will
render when formatting the manual page.
.It
A
.Sq \&Lx
should be provided for Linux (\(`a la
.Sq \&Ox ,
.Sq \&Nx
etc.).
.It
There's no way to refer to references in
.Sq \&Rs/Re
blocks.
.It
The \-split and \-nosplit dictates via
.Sq \&An
are re-set when entering and leaving the AUTHORS section.
.El
.
@


1.62
log
@Fix in syntax of scaling widths in mdoc.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.61 2009/10/18 13:58:48 kristaps Exp $
d212 3
d445 2
a446 2
.It \&Ac     Ta    Yes      Ta    Yes      Ta    opened by \&Ao
.It \&Ao     Ta    Yes      Ta    Yes      Ta    closed by \&Ac
d463 2
a464 2
.It \&Re     Ta    \&No     Ta    \&No     Ta    opened by \&Rs
.It \&Rs     Ta    \&No     Ta    \&No     Ta    closed by \&Re
d516 12
a527 12
.It \&%A     Ta    \&No     Ta    \&No     Ta    >0
.It \&%B     Ta    \&No     Ta    \&No     Ta    >0
.It \&%C     Ta    \&No     Ta    \&No     Ta    >0
.It \&%D     Ta    \&No     Ta    \&No     Ta    >0
.It \&%I     Ta    \&No     Ta    \&No     Ta    >0
.It \&%J     Ta    \&No     Ta    \&No     Ta    >0
.It \&%N     Ta    \&No     Ta    \&No     Ta    >0
.It \&%O     Ta    \&No     Ta    \&No     Ta    >0
.It \&%P     Ta    \&No     Ta    \&No     Ta    >0
.It \&%R     Ta    \&No     Ta    \&No     Ta    >0
.It \&%T     Ta    \&No     Ta    \&No     Ta    >0
.It \&%V     Ta    \&No     Ta    \&No     Ta    >0
d591 244
@


1.61
log
@Fixed typo in Makefile.
Added initial scaling-units section in mdoc.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.60 2009/09/28 22:09:08 kristaps Exp $
d221 1
a221 1
.Sq Li [+-]?[0-9]*.[0-9]*[unit] ,
@


1.60
log
@Compat fix in mdoc.7 (joerg@@netbsd.org).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.59 2009/08/20 13:32:09 kristaps Exp $
d76 1
d212 53
d602 7
@


1.59
log
@Synchronised man.7, mdoc.7, mdoc.template manual structure.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.58 2009/08/20 13:22:48 kristaps Exp $
d300 1
a300 1
.Sq \&.Fl Sh
d302 1
a302 1
.Sq Fl Sh .
@


1.58
log
@Updated manual structure in mdoc.7.
Synchronised mdoc.template and mdoc.7 manual structure.
`Rv' and `Ex' now accept multiple arguments (-std made standalone, terms as children).
`Rv' and `Ex' format correctly in -Tascii (plurals, commas, etc.).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.57 2009/08/20 12:08:40 kristaps Exp $
d244 1
@


1.57
log
@Documented omission of `na' and `Dt'.
Clarified COMPATIBILITY section (which modes/inputs).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.56 2009/08/18 14:27:16 kristaps Exp $
d70 2
a71 1
is also ignored.
d228 1
d230 34
a263 2
\&.Nm mdoc
\&.Nd mdoc language reference
d490 1
a490 1
.It \&Ex     Ta    \&No     Ta    \&No     Ta    0
d517 1
a517 1
.It \&Rv     Ta    \&No     Ta    \&No     Ta    0
@


1.56
log
@libmdoc accepts whitespace following control character.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.55 2009/07/29 08:58:11 kristaps Exp $
d23 2
a24 2
. Nm mdoc
. Nd mdoc language reference
d29 1
a29 1
. Nm mdoc
d31 2
a32 2
. Bx
. Ux
d35 1
a35 1
. Xr mandoc 1 .
d37 1
a37 1
. Sx COMPATIBILITY
d39 3
a41 2
. Xr groff 1 .
. Pp
d43 1
a43 1
. Nm
d46 1
a46 1
. Sq \.
d49 1
a49 1
. Bd -literal -offset indent
d52 1
a52 1
. Ed
d56 1
a56 1
. Nm
d60 1
a60 1
. Ux
d64 1
a64 1
. Ss Comments
d66 1
a66 1
.  Sq \e" ,
d69 1
a69 1
.  Sq \&.\e" ,
d73 1
a73 1
. Ss Reserved Characters
d75 26
a100 25
.  Bl -tag -width Ds -offset indent -compact
.   It \&.
.    Pq period
.   It \&,
.    Pq comma
.   It \&:
.    Pq colon
.   It \&;
.    Pq semicolon
.   It \&(
.    Pq left-parenthesis
.   It \&)
.    Pq right-parenthesis
.   It \&[
.    Pq left-bracket
.   It \&]
.    Pq right-bracket
.   It \&?
.    Pq question
.   It \&!
.    Pq exclamation
.   It \&|
.    Pq vertical bar
.  El
.  Pp
d102 1
a102 1
.  Sx MACRO SYNTAX .
d105 1
a105 1
.  Pq Sq \e&
d109 1
a109 1
. Ss Special Characters
d112 1
a112 1
.  Sq \e
d114 1
a114 1
.  Sq \&(
d116 1
a116 1
.  Sq \&[
d118 1
a118 1
.  Sq \&] ) ;
d120 1
a120 1
.  Xr mandoc_char 7
d122 2
a123 2
.  Sq \e(em
.  Pq em-dash
d125 2
a126 2
.  Sq \ee
.  Pq back-slash .
d129 1
a129 1
. Ss Text Decoration
d131 1
a131 1
.  Sq \ef
d134 1
a134 1
.  Nm ,
d138 1
a138 1
. Ss Predefined Strings
d140 1
a140 1
.  Xr groff 1
d142 1
a142 1
.  Dq predefined strings ,
d144 1
a144 1
.  Sx Special Characters ,
d147 1
a147 1
.  Sq \e* :
d149 1
a149 1
.  Sq \e*X ,
d151 1
a151 1
.  Sq \e*(XX ,
d153 1
a153 1
.  Sq \e*[N] .
d155 1
a155 1
.  Xr mandoc_char 7
d157 2
a158 2
.  Sq \e*(Am
.  Pq ampersand
d160 2
a161 2
.  Sq \e*(Ba
.  Pq vertical bar .
d164 1
a164 1
. Ss Whitespace
d167 1
a167 1
.  Bd -literal -offset indent
d172 3
a174 2
.  Ed
.  Pp
d177 2
a178 1
.  Pp
d182 1
a182 1
.  Sq \&Bl \-column
d186 1
a186 1
. Ss Quotation
d192 2
a193 1
.  Pp
d195 3
a197 3
.  Sq a" ,
.  Sq b c ,
.  Sq de ,
d199 1
a199 1
.  Sq fg" .
d202 2
a203 2
.  Sq \&Em a :
.  Bd -literal -offset indent
d205 3
a207 2
.  Ed
.  Pp
d213 1
a213 1
. Nm
d215 2
a216 2
. Sq \&Dd ,
. Sq \&Dt ,
d218 1
a218 1
. Sq \&Os ,
d220 1
a220 1
. Sq \&Nm
d222 2
a223 2
. Sq \&Nd :
. Bd -literal -offset indent
d230 3
a232 2
. Ed
. Pp
d240 1
a240 1
. Sq \&. ,
d243 1
a243 1
. Sq \&.Pp
d245 1
a245 1
. Sq \&.\ \ \ \&Pp
d247 2
a248 1
. Pp
d250 1
a250 1
. Sq \-arg
d252 1
a252 1
. Sq parm
d254 1
a254 1
. Sq \&Yo
d256 1
a256 1
. Sq \&Yc
d258 2
a259 1
. Pp
d261 1
a261 1
. Em Callable
d265 1
a265 1
. Sq \&.Fl Sh
d267 3
a269 2
. Sq Fl Sh .
. Pp
d271 1
a271 1
. Em Parsable
d275 2
a276 1
. Pp
d278 1
a278 1
. Em Scope
d282 1
a282 1
. Ss Block full-explicit
d285 1
a285 1
.  Pq Sq \&Bf
d287 1
a287 1
.  Bd -literal -offset indent
d291 14
a304 13
.  Ed
.  Pp
.  Bl -column -compact -offset indent "MacroX" "CallableX" "ParsableX" "closed by XXX"
.   It Em Macro Ta Em Callable Ta Em Parsable Ta Em Scope
.   It \&Bd     Ta    \&No     Ta    \&No     Ta    closed by \&Ed
.   It \&Bf     Ta    \&No     Ta    \&No     Ta    closed by \&Ef
.   It \&Bk     Ta    \&No     Ta    \&No     Ta    closed by \&Ek
.   It \&Bl     Ta    \&No     Ta    \&No     Ta    closed by \&El
.   It \&Ed     Ta    \&No     Ta    \&No     Ta    opened by \&Bd
.   It \&Ef     Ta    \&No     Ta    \&No     Ta    opened by \&Bf
.   It \&Ek     Ta    \&No     Ta    \&No     Ta    opened by \&Bk
.   It \&El     Ta    \&No     Ta    \&No     Ta    opened by \&Bl
.  El
d307 1
a307 1
. Ss Block full-implicit
d310 7
a316 7
.  Po
.   Sq \&It \-bullet ,
.   Sq \-hyphen ,
.   Sq \-dash ,
.   Sq \-enum ,
.   Sq \-item
.  Pc
d318 1
a318 1
.  Sq \&It \-column
d320 1
a320 1
.  Bd -literal -offset indent
d323 1
a323 9
.  Ed
.  Pp
.  Bl -column -compact -offset indent "MacroX" "CallableX" "ParsableX" "closed by XXXXXXXXXXX"
.   It Em Macro Ta Em Callable Ta Em Parsable Ta Em Scope
.   It \&It     Ta    \&No     Ta    Yes      Ta    closed by \&It, \&El
.   It \&Nd     Ta    \&No     Ta    \&No     Ta    closed by \&Sh
.   It \&Sh     Ta    \&No     Ta    \&No     Ta    closed by \&Sh
.   It \&Ss     Ta    \&No     Ta    \&No     Ta    closed by \&Sh, \&Ss
.  El
d325 8
d334 2
a335 1
. Ss Block partial-explicit
d338 1
a338 1
.  Pq So \&Fo Sc , So \&Eo Sc
d340 2
a341 2
.  Pq So \&Ec Sc .
.  Bd -literal -offset indent
d348 30
a377 29
.  Ed
.  Pp
.  Bl -column "MacroX" "CallableX" "ParsableX" "closed by XXXX" -compact -offset indent
.   It Em Macro Ta Em Callable Ta Em Parsable Ta Em Scope
.   It \&Ac     Ta    Yes      Ta    Yes      Ta    opened by \&Ao
.   It \&Ao     Ta    Yes      Ta    Yes      Ta    closed by \&Ac
.   It \&Bc     Ta    Yes      Ta    Yes      Ta    closed by \&Bo
.   It \&Bo     Ta    Yes      Ta    Yes      Ta    opened by \&Bc
.   It \&Brc    Ta    Yes      Ta    Yes      Ta    opened by \&Bro
.   It \&Bro    Ta    Yes      Ta    Yes      Ta    closed by \&Brc
.   It \&Dc     Ta    Yes      Ta    Yes      Ta    opened by \&Do
.   It \&Do     Ta    Yes      Ta    Yes      Ta    closed by \&Dc
.   It \&Ec     Ta    Yes      Ta    Yes      Ta    opened by \&Eo
.   It \&Eo     Ta    Yes      Ta    Yes      Ta    closed by \&Ec
.   It \&Fc     Ta    Yes      Ta    Yes      Ta    opened by \&Fo
.   It \&Fo     Ta    \&No     Ta    \&No     Ta    closed by \&Fc
.   It \&Oc     Ta    Yes      Ta    Yes      Ta    closed by \&Oo
.   It \&Oo     Ta    Yes      Ta    Yes      Ta    opened by \&Oc
.   It \&Pc     Ta    Yes      Ta    Yes      Ta    closed by \&Po
.   It \&Po     Ta    Yes      Ta    Yes      Ta    opened by \&Pc
.   It \&Qc     Ta    Yes      Ta    Yes      Ta    opened by \&Oo
.   It \&Qo     Ta    Yes      Ta    Yes      Ta    closed by \&Oc
.   It \&Re     Ta    \&No     Ta    \&No     Ta    opened by \&Rs
.   It \&Rs     Ta    \&No     Ta    \&No     Ta    closed by \&Re
.   It \&Sc     Ta    Yes      Ta    Yes      Ta    opened by \&So
.   It \&So     Ta    Yes      Ta    Yes      Ta    closed by \&Sc
.   It \&Xc     Ta    Yes      Ta    Yes      Ta    opened by \&Xo
.   It \&Xo     Ta    Yes      Ta    Yes      Ta    closed by \&Xc
.  El
d380 1
a380 1
. Ss Block partial-implicit
d382 1
a382 1
.  Sx Reserved Characters
d384 1
a384 1
.  Bd -literal -offset indent
d386 1
a386 16
.  Ed
.  Pp
.  Bl -column "MacroX" "CallableX" "ParsableX" -compact -offset indent
.   It Em Macro Ta Em Callable Ta Em Parsable
.   It \&Aq     Ta    Yes      Ta    Yes
.   It \&Bq     Ta    Yes      Ta    Yes
.   It \&Brq    Ta    Yes      Ta    Yes
.   It \&D1     Ta    \&No     Ta    \&Yes
.   It \&Dl     Ta    \&No     Ta    Yes
.   It \&Dq     Ta    Yes      Ta    Yes
.   It \&Op     Ta    Yes      Ta    Yes
.   It \&Pq     Ta    Yes      Ta    Yes
.   It \&Ql     Ta    Yes      Ta    Yes
.   It \&Qq     Ta    Yes      Ta    Yes
.   It \&Sq     Ta    Yes      Ta    Yes
.  El
d388 15
d404 2
a405 1
. Ss In-line
d407 1
a407 1
.  Sx Reserved Characters ,
d411 1
a411 1
.  Pq n ,
d413 1
a413 1
.  Bd -literal -offset indent
d419 78
a496 77
.  Ed
.  Pp
.  Bl -column "MacroX" "CallableX" "ParsableX" "Arguments" -compact -offset indent
.   It Em Macro Ta Em Callable Ta Em Parsable Ta Em Arguments
.   It \&%A     Ta    \&No     Ta    \&No     Ta    >0
.   It \&%B     Ta    \&No     Ta    \&No     Ta    >0
.   It \&%C     Ta    \&No     Ta    \&No     Ta    >0
.   It \&%D     Ta    \&No     Ta    \&No     Ta    >0
.   It \&%I     Ta    \&No     Ta    \&No     Ta    >0
.   It \&%J     Ta    \&No     Ta    \&No     Ta    >0
.   It \&%N     Ta    \&No     Ta    \&No     Ta    >0
.   It \&%O     Ta    \&No     Ta    \&No     Ta    >0
.   It \&%P     Ta    \&No     Ta    \&No     Ta    >0
.   It \&%R     Ta    \&No     Ta    \&No     Ta    >0
.   It \&%T     Ta    \&No     Ta    \&No     Ta    >0
.   It \&%V     Ta    \&No     Ta    \&No     Ta    >0
.   It \&Ad     Ta    Yes      Ta    Yes      Ta    n
.   It \&An     Ta    Yes      Ta    Yes      Ta    n
.   It \&Ap     Ta    Yes      Ta    Yes      Ta    0
.   It \&Ar     Ta    Yes      Ta    Yes      Ta    n
.   It \&At     Ta    Yes      Ta    Yes      Ta    1
.   It \&Bsx    Ta    Yes      Ta    Yes      Ta    n
.   It \&Bt     Ta    \&No     Ta    \&No     Ta    0
.   It \&Bx     Ta    Yes      Ta    Yes      Ta    n
.   It \&Cd     Ta    Yes      Ta    Yes      Ta    >0
.   It \&Cm     Ta    Yes      Ta    Yes      Ta    n
.   It \&Db     Ta    \&No     Ta    \&No     Ta    1
.   It \&Dd     Ta    \&No     Ta    \&No     Ta    >0
.   It \&Dt     Ta    \&No     Ta    \&No     Ta    n
.   It \&Dv     Ta    Yes      Ta    Yes      Ta    n
.   It \&Dx     Ta    Yes      Ta    Yes      Ta    n
.   It \&Em     Ta    Yes      Ta    Yes      Ta    >0
.   It \&En     Ta    \&No     Ta    \&No     Ta    0
.   It \&Er     Ta    Yes      Ta    Yes      Ta    >0
.   It \&Es     Ta    \&No     Ta    \&No     Ta    0
.   It \&Ev     Ta    Yes      Ta    Yes      Ta    n
.   It \&Ex     Ta    \&No     Ta    \&No     Ta    0
.   It \&Fa     Ta    Yes      Ta    Yes      Ta    n
.   It \&Fd     Ta    \&No     Ta    \&No     Ta    >0
.   It \&Fl     Ta    Yes      Ta    Yes      Ta    n
.   It \&Fn     Ta    Yes      Ta    Yes      Ta    >0
.   It \&Fr     Ta    \&No     Ta    \&No     Ta    n
.   It \&Ft     Ta    Yes      Ta    Yes      Ta    n
.   It \&Fx     Ta    Yes      Ta    Yes      Ta    n
.   It \&Hf     Ta    \&No     Ta    \&No     Ta    n
.   It \&Ic     Ta    Yes      Ta    Yes      Ta    >0
.   It \&In     Ta    \&No     Ta    \&No     Ta    n
.   It \&Lb     Ta    \&No     Ta    \&No     Ta    1
.   It \&Li     Ta    Yes      Ta    Yes      Ta    n
.   It \&Lk     Ta    Yes      Ta    Yes      Ta    n
.   It \&Lp     Ta    \&No     Ta    \&No     Ta    0
.   It \&Ms     Ta    Yes      Ta    Yes      Ta    >0
.   It \&Mt     Ta    Yes      Ta    Yes      Ta    >0
.   It \&Nm     Ta    Yes      Ta    Yes      Ta    n
.   It \&No     Ta    Yes      Ta    Yes      Ta    0
.   It \&Ns     Ta    Yes      Ta    Yes      Ta    0
.   It \&Nx     Ta    Yes      Ta    Yes      Ta    n
.   It \&Os     Ta    \&No     Ta    \&No     Ta    n
.   It \&Ot     Ta    \&No     Ta    \&No     Ta    n
.   It \&Ox     Ta    Yes      Ta    Yes      Ta    n
.   It \&Pa     Ta    Yes      Ta    Yes      Ta    n
.   It \&Pf     Ta    \&No     Ta    Yes      Ta    1
.   It \&Pp     Ta    \&No     Ta    \&No     Ta    0
.   It \&Rv     Ta    \&No     Ta    \&No     Ta    0
.   It \&Sm     Ta    \&No     Ta    \&No     Ta    1
.   It \&St     Ta    \&No     Ta    Yes      Ta    1
.   It \&Sx     Ta    Yes      Ta    Yes      Ta    >0
.   It \&Sy     Ta    Yes      Ta    Yes      Ta    >0
.   It \&Tn     Ta    Yes      Ta    Yes      Ta    >0
.   It \&Ud     Ta    \&No     Ta    \&No     Ta    0
.   It \&Ux     Ta    Yes      Ta    Yes      Ta    n
.   It \&Va     Ta    Yes      Ta    Yes      Ta    n
.   It \&Vt     Ta    Yes      Ta    Yes      Ta    >0
.   It \&Xr     Ta    Yes      Ta    Yes      Ta    >0, <3
.   It \&br     Ta    \&No     Ta    \&No     Ta    0
.   It \&sp     Ta    \&No     Ta    \&No     Ta    1
.  El   
d502 1
a502 1
. Xr groff 1 .
d504 1
a504 1
. Qq historic groff
d506 1
a506 1
. Pa doc.tmac
d508 5
a512 4
. Pq somewhere between 1.15 and 1.19 .
. Pp
. Bl -dash -compact
.  It
d514 1
a514 1
.   Sq \-split
d516 1
a516 1
.   Sq \-nosplit
d518 1
a518 1
.   Sq \&An
d521 1
a521 1
.  It
d525 1
a525 1
.  It
d527 1
a527 1
.   Sq \&sp
d529 1
a529 1
.  It
d533 1
a533 1
.  It
d537 1
a537 1
.  It
d539 1
a539 1
.   Sq \(ba
d541 1
a541 1
.   Qq go orbital
d543 2
a544 2
.  It
.   Sq \&It \-nested
d547 1
a547 1
.   Sq \-enum
d549 2
a550 2
.  It
.   Sq \&It \-column
d553 1
a553 1
.  It
d555 1
a555 1
.   Sq \&At
d557 1
a557 1
.  It
d559 1
a559 1
.   Sq \&Li
d562 1
a562 1
.  It
d564 1
a564 1
.   Sq \&Fo
d566 1
a566 1
. El
d570 2
a571 2
. Xr mandoc 1 ,
. Xr mandoc_char 7
d576 1
a576 1
. Nm
d578 1
a578 1
. An Kristaps Dzonsons Aq kristaps@@kth.se .
d583 5
a587 4
. Pp
. Bl -dash -compact
.  It
.   Sq \&Fa
d589 1
a589 1
.   Sq \&Va
d591 2
a592 2
.  It
.   Sq \&Ft
d594 1
a594 1
.   Sq \&Vt
d596 1
a596 1
.   Sq \&Ft
d598 1
a598 1
.   Sq \&Fo ,
d600 3
a602 3
.   Sq \&Va .
.  It
.   Sq \&Va
d605 2
a606 2
.  It
.   Sq \&Fd
d609 1
a609 1
.   Sq \&In
d611 1
a611 1
.  It
d613 1
a613 1
.   Sq \-literal
d615 1
a615 1
.   Sq \&Bd
d617 1
a617 1
.  It
d619 1
a619 1
.   Sq \&Xo
d621 1
a621 1
.   Sq \&Xc
d623 1
a623 1
.  It
d625 1
a625 1
.   Sq \&Dt
d628 1
a628 1
.  It
d630 1
a630 1
.   Sq \&Lx
d632 2
a633 2
.   Sq \&Ox ,
.   Sq \&Nx
d635 1
a635 1
.  It
d637 1
a637 1
.   Sq \&Rs/Re
d639 1
a639 1
.  It
d641 1
a641 1
.   Sq \&An
d643 1
a643 1
. El
@


1.55
log
@Documented behaviour of interpreting parsable/callable macros.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.54 2009/07/27 12:35:54 kristaps Exp $
d20 2
a21 1
.\" SECTION---------------------------------------------
d23 4
a26 3
.Nm mdoc
.Nd mdoc language reference
.\" SECTION---------------------------------------------
d29 1
a29 1
.Nm mdoc
d31 2
a32 2
.Bx
.Ux
d35 1
a35 1
.Xr mandoc 1 .
d37 1
a37 1
.Sx COMPATIBILITY
d39 2
a40 3
.Xr groff 1 .
.\" PARAGRAPH------------
.Pp
d42 1
a42 1
.Nm
d45 1
a45 1
.Sq \.
d48 1
a48 1
.Bd -literal -offset indent
d51 3
a53 2
.Ed
.\" SECTION---------------------------------------------
d55 1
a55 1
.Nm
d59 1
a59 1
.Ux
d61 3
a63 2
.\" SUB-SECTION----------------------
.Ss Comments
d65 1
a65 1
.Sq \e" ,
d68 1
a68 1
.Sq \&.\e" ,
d70 3
a72 2
.\" SUB-SECTION----------------------
.Ss Reserved Characters
d74 25
a98 26
.Bl -tag -width Ds -offset indent -compact
.It \&.
.Pq period
.It \&,
.Pq comma
.It \&:
.Pq colon
.It \&;
.Pq semicolon
.It \&(
.Pq left-parenthesis
.It \&)
.Pq right-parenthesis
.It \&[
.Pq left-bracket
.It \&]
.Pq right-bracket
.It \&?
.Pq question
.It \&!
.Pq exclamation
.It \&|
.Pq vertical bar
.El
.\" PARAGRAPH------------
.Pp
d100 1
a100 1
.Sx MACRO SYNTAX .
d103 1
a103 1
.Pq Sq \e&
d105 3
a107 2
.\" SUB-SECTION----------------------
.Ss Special Characters
d110 1
a110 1
.Sq \e
d112 1
a112 1
.Sq \&(
d114 1
a114 1
.Sq \&[
d116 1
a116 1
.Sq \&] ) ;
d118 1
a118 1
.Xr mandoc_char 7
d120 2
a121 2
.Sq \e(em
.Pq em-dash
d123 5
a127 4
.Sq \ee
.Pq back-slash .
.\" SUB-SECTION----------------------
.Ss Text Decoration
d129 1
a129 1
.Sq \ef
d132 1
a132 1
.Nm ,
d134 3
a136 2
.\" SUB-SECTION----------------------
.Ss Predefined Strings
d138 1
a138 1
.Xr groff 1
d140 1
a140 1
.Dq predefined strings ,
d142 1
a142 1
.Sx Special Characters ,
d145 1
a145 1
.Sq \e* :
d147 1
a147 1
.Sq \e*X ,
d149 1
a149 1
.Sq \e*(XX ,
d151 1
a151 1
.Sq \e*[N] .
d153 1
a153 1
.Xr mandoc_char 7
d155 2
a156 2
.Sq \e*(Am
.Pq ampersand
d158 5
a162 4
.Sq \e*(Ba
.Pq vertical bar .
.\" SUB-SECTION----------------------
.Ss Whitespace
d165 1
a165 1
.Bd -literal -offset indent
d170 2
a171 3
.Ed
.\" PARAGRAPH------------
.Pp
d174 1
a174 2
.\" PARAGRAPH------------
.Pp
d178 1
a178 1
.Sq \&Bl \-column
d180 3
a182 2
.\" SUB-SECTION----------------------
.Ss Quotation
d188 1
a188 2
.\" PARAGRAPH------------
.Pp
d190 3
a192 3
.Sq a" ,
.Sq b c ,
.Sq de ,
d194 1
a194 1
.Sq fg" .
d197 2
a198 2
.Sq \&Em a :
.Bd -literal -offset indent
d200 2
a201 3
.Ed
.\" PARAGRAPH------------
.Pp
d203 2
a204 1
.\" SECTION---------------------------------------------
d207 1
a207 1
.Nm
d209 2
a210 2
.Sq \&Dd ,
.Sq \&Dt ,
d212 1
a212 1
.Sq \&Os ,
d214 1
a214 1
.Sq \&Nm
d216 2
a217 2
.Sq \&Nd :
.Bd -literal -offset indent
d224 2
a225 3
.Ed
.\" PARAGRAPH------------
.Pp
d228 2
a229 1
.\" SECTION---------------------------------------------
d231 10
a240 5
Every line beginning with the control character
.Sq \.
is processed for macros, two- or three-character sequences.
.\" PARAGRAPH------------
.Pp
d242 1
a242 1
.Sq \-arg
d244 1
a244 1
.Sq parm
d246 1
a246 1
.Sq \&Yo
d248 1
a248 1
.Sq \&Yc
d250 1
a250 2
.\" PARAGRAPH------------
.Pp
d252 1
a252 1
.Em Callable
d256 1
a256 1
.Sq \&.Fl Sh
d258 2
a259 3
.Sq Fl Sh .
.\" PARAGRAPH------------
.Pp
d261 1
a261 1
.Em Parsable
d265 1
a265 2
.\" PARAGRAPH------------
.Pp
d267 1
a267 1
.Em Scope
d269 3
a271 2
.\" SUB-SECTION----------------------
.Ss Block full-explicit
d274 1
a274 1
.Pq Sq \&Bf
d276 1
a276 1
.Bd -literal -offset indent
d280 16
a295 16
.Ed
.\" PARAGRAPH------------
.Pp
.Bl -column -compact -offset indent "MacroX" "CallableX" "ParsableX" "closed by XXX"
.It Em Macro Ta Em Callable Ta Em Parsable Ta Em Scope
.It \&Bd     Ta    \&No     Ta    \&No     Ta    closed by \&Ed
.It \&Bf     Ta    \&No     Ta    \&No     Ta    closed by \&Ef
.It \&Bk     Ta    \&No     Ta    \&No     Ta    closed by \&Ek
.It \&Bl     Ta    \&No     Ta    \&No     Ta    closed by \&El
.It \&Ed     Ta    \&No     Ta    \&No     Ta    opened by \&Bd
.It \&Ef     Ta    \&No     Ta    \&No     Ta    opened by \&Bf
.It \&Ek     Ta    \&No     Ta    \&No     Ta    opened by \&Bk
.It \&El     Ta    \&No     Ta    \&No     Ta    opened by \&Bl
.El
.\" SUB-SECTION----------------------
.Ss Block full-implicit
d298 7
a304 7
.Po
.Sq \&It \-bullet ,
.Sq \-hyphen ,
.Sq \-dash ,
.Sq \-enum ,
.Sq \-item
.Pc
d306 1
a306 1
.Sq \&It \-column
d308 1
a308 1
.Bd -literal -offset indent
d311 12
a322 12
.Ed
.\" PARAGRAPH------------
.Pp
.Bl -column -compact -offset indent "MacroX" "CallableX" "ParsableX" "closed by XXXXXXXXXXX"
.It Em Macro Ta Em Callable Ta Em Parsable Ta Em Scope
.It \&It     Ta    \&No     Ta    Yes      Ta    closed by \&It, \&El
.It \&Nd     Ta    \&No     Ta    \&No     Ta    closed by \&Sh
.It \&Sh     Ta    \&No     Ta    \&No     Ta    closed by \&Sh
.It \&Ss     Ta    \&No     Ta    \&No     Ta    closed by \&Sh, \&Ss
.El
.\" SUB-SECTION----------------------
.Ss Block partial-explicit
d325 1
a325 1
.Pq So \&Fo Sc , So \&Eo Sc
d327 2
a328 2
.Pq So \&Ec Sc .
.Bd -literal -offset indent
d335 32
a366 32
.Ed
.\" PARAGRAPH------------
.Pp
.Bl -column "MacroX" "CallableX" "ParsableX" "closed by XXXX" -compact -offset indent
.It Em Macro Ta Em Callable Ta Em Parsable Ta Em Scope
.It \&Ac     Ta    Yes      Ta    Yes      Ta    opened by \&Ao
.It \&Ao     Ta    Yes      Ta    Yes      Ta    closed by \&Ac
.It \&Bc     Ta    Yes      Ta    Yes      Ta    closed by \&Bo
.It \&Bo     Ta    Yes      Ta    Yes      Ta    opened by \&Bc
.It \&Brc    Ta    Yes      Ta    Yes      Ta    opened by \&Bro
.It \&Bro    Ta    Yes      Ta    Yes      Ta    closed by \&Brc
.It \&Dc     Ta    Yes      Ta    Yes      Ta    opened by \&Do
.It \&Do     Ta    Yes      Ta    Yes      Ta    closed by \&Dc
.It \&Ec     Ta    Yes      Ta    Yes      Ta    opened by \&Eo
.It \&Eo     Ta    Yes      Ta    Yes      Ta    closed by \&Ec
.It \&Fc     Ta    Yes      Ta    Yes      Ta    opened by \&Fo
.It \&Fo     Ta    \&No     Ta    \&No     Ta    closed by \&Fc
.It \&Oc     Ta    Yes      Ta    Yes      Ta    closed by \&Oo
.It \&Oo     Ta    Yes      Ta    Yes      Ta    opened by \&Oc
.It \&Pc     Ta    Yes      Ta    Yes      Ta    closed by \&Po
.It \&Po     Ta    Yes      Ta    Yes      Ta    opened by \&Pc
.It \&Qc     Ta    Yes      Ta    Yes      Ta    opened by \&Oo
.It \&Qo     Ta    Yes      Ta    Yes      Ta    closed by \&Oc
.It \&Re     Ta    \&No     Ta    \&No     Ta    opened by \&Rs
.It \&Rs     Ta    \&No     Ta    \&No     Ta    closed by \&Re
.It \&Sc     Ta    Yes      Ta    Yes      Ta    opened by \&So
.It \&So     Ta    Yes      Ta    Yes      Ta    closed by \&Sc
.It \&Xc     Ta    Yes      Ta    Yes      Ta    opened by \&Xo
.It \&Xo     Ta    Yes      Ta    Yes      Ta    closed by \&Xc
.El
.\" SUB-SECTION----------------------
.Ss Block partial-implicit
d368 1
a368 1
.Sx Reserved Characters
d370 1
a370 1
.Bd -literal -offset indent
d372 19
a390 19
.Ed
.\" PARAGRAPH------------
.Pp
.Bl -column "MacroX" "CallableX" "ParsableX" -compact -offset indent
.It Em Macro Ta Em Callable Ta Em Parsable
.It \&Aq     Ta    Yes      Ta    Yes
.It \&Bq     Ta    Yes      Ta    Yes
.It \&Brq    Ta    Yes      Ta    Yes
.It \&D1     Ta    \&No     Ta    \&Yes
.It \&Dl     Ta    \&No     Ta    Yes
.It \&Dq     Ta    Yes      Ta    Yes
.It \&Op     Ta    Yes      Ta    Yes
.It \&Pq     Ta    Yes      Ta    Yes
.It \&Ql     Ta    Yes      Ta    Yes
.It \&Qq     Ta    Yes      Ta    Yes
.It \&Sq     Ta    Yes      Ta    Yes
.El
.\" SUB-SECTION----------------------
.Ss In-line
d392 1
a392 1
.Sx Reserved Characters ,
d396 1
a396 1
.Pq n ,
d398 1
a398 1
.Bd -literal -offset indent
d404 79
a482 79
.Ed
.\" PARAGRAPH------------
.Pp
.Bl -column "MacroX" "CallableX" "ParsableX" "Arguments" -compact -offset indent
.It Em Macro Ta Em Callable Ta Em Parsable Ta Em Arguments
.It \&%A     Ta    \&No     Ta    \&No     Ta    >0
.It \&%B     Ta    \&No     Ta    \&No     Ta    >0
.It \&%C     Ta    \&No     Ta    \&No     Ta    >0
.It \&%D     Ta    \&No     Ta    \&No     Ta    >0
.It \&%I     Ta    \&No     Ta    \&No     Ta    >0
.It \&%J     Ta    \&No     Ta    \&No     Ta    >0
.It \&%N     Ta    \&No     Ta    \&No     Ta    >0
.It \&%O     Ta    \&No     Ta    \&No     Ta    >0
.It \&%P     Ta    \&No     Ta    \&No     Ta    >0
.It \&%R     Ta    \&No     Ta    \&No     Ta    >0
.It \&%T     Ta    \&No     Ta    \&No     Ta    >0
.It \&%V     Ta    \&No     Ta    \&No     Ta    >0
.It \&Ad     Ta    Yes      Ta    Yes      Ta    n
.It \&An     Ta    Yes      Ta    Yes      Ta    n
.It \&Ap     Ta    Yes      Ta    Yes      Ta    0
.It \&Ar     Ta    Yes      Ta    Yes      Ta    n
.It \&At     Ta    Yes      Ta    Yes      Ta    1
.It \&Bsx    Ta    Yes      Ta    Yes      Ta    n
.It \&Bt     Ta    \&No     Ta    \&No     Ta    0
.It \&Bx     Ta    Yes      Ta    Yes      Ta    n
.It \&Cd     Ta    Yes      Ta    Yes      Ta    >0
.It \&Cm     Ta    Yes      Ta    Yes      Ta    n
.It \&Db     Ta    \&No     Ta    \&No     Ta    1
.It \&Dd     Ta    \&No     Ta    \&No     Ta    >0
.It \&Dt     Ta    \&No     Ta    \&No     Ta    n
.It \&Dv     Ta    Yes      Ta    Yes      Ta    n
.It \&Dx     Ta    Yes      Ta    Yes      Ta    n
.It \&Em     Ta    Yes      Ta    Yes      Ta    >0
.It \&En     Ta    \&No     Ta    \&No     Ta    0
.It \&Er     Ta    Yes      Ta    Yes      Ta    >0
.It \&Es     Ta    \&No     Ta    \&No     Ta    0
.It \&Ev     Ta    Yes      Ta    Yes      Ta    n
.It \&Ex     Ta    \&No     Ta    \&No     Ta    0
.It \&Fa     Ta    Yes      Ta    Yes      Ta    n
.It \&Fd     Ta    \&No     Ta    \&No     Ta    >0
.It \&Fl     Ta    Yes      Ta    Yes      Ta    n
.It \&Fn     Ta    Yes      Ta    Yes      Ta    >0
.It \&Fr     Ta    \&No     Ta    \&No     Ta    n
.It \&Ft     Ta    Yes      Ta    Yes      Ta    n
.It \&Fx     Ta    Yes      Ta    Yes      Ta    n
.It \&Hf     Ta    \&No     Ta    \&No     Ta    n
.It \&Ic     Ta    Yes      Ta    Yes      Ta    >0
.It \&In     Ta    \&No     Ta    \&No     Ta    n
.It \&Lb     Ta    \&No     Ta    \&No     Ta    1
.It \&Li     Ta    Yes      Ta    Yes      Ta    n
.It \&Lk     Ta    Yes      Ta    Yes      Ta    n
.It \&Lp     Ta    \&No     Ta    \&No     Ta    0
.It \&Ms     Ta    Yes      Ta    Yes      Ta    >0
.It \&Mt     Ta    Yes      Ta    Yes      Ta    >0
.It \&Nm     Ta    Yes      Ta    Yes      Ta    n
.It \&No     Ta    Yes      Ta    Yes      Ta    0
.It \&Ns     Ta    Yes      Ta    Yes      Ta    0
.It \&Nx     Ta    Yes      Ta    Yes      Ta    n
.It \&Os     Ta    \&No     Ta    \&No     Ta    n
.It \&Ot     Ta    \&No     Ta    \&No     Ta    n
.It \&Ox     Ta    Yes      Ta    Yes      Ta    n
.It \&Pa     Ta    Yes      Ta    Yes      Ta    n
.It \&Pf     Ta    \&No     Ta    Yes      Ta    1
.It \&Pp     Ta    \&No     Ta    \&No     Ta    0
.It \&Rv     Ta    \&No     Ta    \&No     Ta    0
.It \&Sm     Ta    \&No     Ta    \&No     Ta    1
.It \&St     Ta    \&No     Ta    Yes      Ta    1
.It \&Sx     Ta    Yes      Ta    Yes      Ta    >0
.It \&Sy     Ta    Yes      Ta    Yes      Ta    >0
.It \&Tn     Ta    Yes      Ta    Yes      Ta    >0
.It \&Ud     Ta    \&No     Ta    \&No     Ta    0
.It \&Ux     Ta    Yes      Ta    Yes      Ta    n
.It \&Va     Ta    Yes      Ta    Yes      Ta    n
.It \&Vt     Ta    Yes      Ta    Yes      Ta    >0
.It \&Xr     Ta    Yes      Ta    Yes      Ta    >0, <3
.It \&br     Ta    \&No     Ta    \&No     Ta    0
.It \&sp     Ta    \&No     Ta    \&No     Ta    1
.El
.\" SECTION---------------------------------------------
d486 1
a486 1
.Xr groff 1 .
d488 1
a488 1
.Qq historic groff
d490 1
a490 1
.Pa doc.tmac
d492 4
a495 6
.Pq somewhere between 1.15 and 1.19 .
.\" PARAGRAPH------------
.Pp
.Bl -dash -compact
.\" LIST-ITEM
.It
d497 1
a497 1
.Sq \-split
d499 1
a499 1
.Sq \-nosplit
d501 1
a501 1
.Sq \&An
d504 1
a504 2
.\" LIST-ITEM
.It
d508 1
a508 2
.\" LIST-ITEM
.It
d510 1
a510 1
.Sq \&sp
d512 1
a512 2
.\" LIST-ITEM
.It
d516 1
a516 2
.\" LIST-ITEM
.It
d520 1
a520 2
.\" LIST-ITEM
.It
d522 1
a522 1
.Sq \(ba
d524 1
a524 1
.Qq go orbital
d526 2
a527 3
.\" LIST-ITEM
.It
.Sq \&It \-nested
d530 1
a530 1
.Sq \-enum
d532 2
a533 3
.\" LIST-ITEM
.It
.Sq \&It \-column
d536 1
a536 2
.\" LIST-ITEM
.It
d538 1
a538 1
.Sq \&At
d540 1
a540 2
.\" LIST-ITEM
.It
d542 1
a542 1
.Sq \&Li
d545 1
a545 2
.\" LIST-ITEM
.It
d547 1
a547 1
.Sq \&Fo
d549 3
a551 2
.El
.\" SECTION---------------------------------------------
d553 4
a556 3
.Xr mandoc 1 ,
.Xr mandoc_char 7
.\" SECTION---------------------------------------------
d559 1
a559 1
.Nm
d561 3
a563 2
.An Kristaps Dzonsons Aq kristaps@@kth.se .
.\" SECTION---------------------------------------------
d566 4
a569 6
.\" PARAGRAPH------------
.Pp
.Bl -dash -compact
.\" LIST-ITEM
.It
.Sq \&Fa
d571 1
a571 1
.Sq \&Va
d573 2
a574 3
.\" LIST-ITEM
.It
.Sq \&Ft
d576 1
a576 1
.Sq \&Vt
d578 1
a578 1
.Sq \&Ft
d580 1
a580 1
.Sq \&Fo ,
d582 3
a584 4
.Sq \&Va .
.\" LIST-ITEM
.It
.Sq \&Va
d587 2
a588 3
.\" LIST-ITEM
.It
.Sq \&Fd
d591 1
a591 1
.Sq \&In
d593 1
a593 2
.\" LIST-ITEM
.It
d595 1
a595 1
.Sq \-literal
d597 1
a597 1
.Sq \&Bd
d599 1
a599 2
.\" LIST-ITEM
.It
d601 1
a601 1
.Sq \&Xo
d603 1
a603 1
.Sq \&Xc
d605 1
a605 2
.\" LIST-ITEM
.It
d607 1
a607 1
.Sq \&Dt
d610 1
a610 2
.\" LIST-ITEM
.It
d612 1
a612 1
.Sq \&Lx
d614 2
a615 2
.Sq \&Ox ,
.Sq \&Nx
d617 1
a617 2
.\" LIST-ITEM
.It
d619 1
a619 1
.Sq \&Rs/Re
d621 1
a621 2
.\" LIST-ITEM
.It
d623 1
a623 1
.Sq \&An
d625 2
a626 1
.El
@


1.54
log
@Clarified special chars/predefined chars in mandoc_char.7.
Cleaned up escape section in man.7, mdoc.7.
Cleaned up function names in term.c.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.53 2009/07/26 19:30:50 kristaps Exp $
d245 8
a252 1
line-macro.  The
d255 5
a259 1
(ostensibly callable) macros.  The
@


1.53
log
@Removed POSIX.1 COMPATIBILITY note in mdoc.7.
Noted that \~ doesn't work in mandoc.1 (thanks uqs@@sporlein.net).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.52 2009/07/26 10:14:22 kristaps Exp $
d114 1
a114 1
.Xr mandoc_char 1
d121 3
a123 10
.\" PARAGRAPH------------
.Pp
An alternative escape sequence is
the slash-asterisk,
.Sq \e* ,
but this method is discouraged for compatibility reasons.
.\" PARAGRAPH------------
.Pp
Terms may
also be text-decorated using the
d126 28
a153 1
(Roman, or reset).  This form is not recommended.
a498 9
Some character sequences in groff are not handled depending on escape
style, e.g.,
.Sq \e(ba
and
.Sq \e*(Ba
may not be interchanged.  This is no longer the case: all character
sequences resolve to the same symbol, regardless the escape style.
.\" LIST-ITEM
.It
a538 6
If an special-character control character is escaped
.Sq \e\e ,
it will obviously not render the subsequent sequence.  Even newer
versions of groff seem to dither on this.
.\" LIST-ITEM
.It
d623 1
a623 1
The \-split and \-nosplit arguments to
d625 1
a625 1
are inane.
@


1.52
log
@Noted POSIX/POSIX.1 disparity (found by uqs@@sporlein.net, discussed with jmc@@openbsd.org et al.).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.51 2009/07/24 12:47:35 kristaps Exp $
a458 8
The POSIX.1
.Sq \&St
macro produce
.Dq POSIX
instead of
.Dq POSIX.1 .
.\" LIST-ITEM
.It
@


1.51
log
@Full support for `An -split/-nosplit'.  Compat documented.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.50 2009/07/20 13:45:11 kristaps Exp $
d459 8
@


1.50
log
@Removed trailing whitespace in manuals.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.49 2009/07/19 09:17:42 kristaps Exp $
d459 10
@


1.49
log
@Made `Cd' parseable (too many SYNOPSIS sections do this).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.48 2009/07/18 23:31:04 kristaps Exp $
d16 1
a16 1
.\" 
d28 2
a29 2
language is used to format 
.Bx 
d36 1
a36 1
section describes compatibility with 
d43 1
a43 1
character 
d58 1
a58 1
line terminators.  
d90 1
a90 1
.Pq exclamation 
d92 1
a92 1
.Pq vertical bar 
d101 1
a101 1
or, if applicable, an appropriate escape sequence used.  
d107 1
a107 1
followed by either an open-parenthesis 
d115 4
a118 4
for a complete list.  Examples include 
.Sq \e(em 
.Pq em-dash 
and 
d140 1
a140 1
\&.Bd \-literal 
d152 1
a152 1
delimiting 
d161 1
a161 1
the literal, regardless of surrounding whitespace.  
d164 1
a164 1
This produces tokens 
d171 1
a171 1
considered literal text.  Thus, the following produces 
d183 1
a183 1
document must begin with a document prologue, containing, in order, 
d190 1
a190 1
followed by 
d203 1
a203 1
but non-compulsory. 
d206 1
a206 1
Every line beginning with the control character 
d212 1
a212 1
.Sq \-arg 
d225 1
a225 1
line-macro.  The 
d238 2
a239 2
\&.Yo \(lB\-arg \(lBparm...\(rB\(rB \(lBhead...\(rB 
\(lBbody...\(rB 
d258 1
a258 1
All macros have bodies; some 
d260 2
a261 2
.Sq \&It \-bullet , 
.Sq \-hyphen , 
d264 1
a264 1
.Sq \-item 
d266 1
a266 1
don't have heads, while 
d270 2
a271 2
\&.Yo \(lB\-arg \(lBparm...\(rB\(rB \(lBhead... \(lBTa head...\(rB\(rB 
\(lBbody...\(rB 
d285 1
a285 1
has at least a body and, in limited circumstances, a head 
d287 1
a287 1
and/or tail 
d290 3
a292 3
\&.Yo \(lB\-arg \(lBparm...\(rB\(rB \(lBhead...\(rB 
\(lBbody...\(rB 
\&.Yc \(lBtail...\(rB 
d295 1
a295 1
\(lBbody...\(rB \&Yc \(lBtail...\(rB 
d328 2
a329 2
Like block full-implicit, but with single-line scope closed by 
.Sx Reserved Characters 
d352 1
a352 1
Closed by 
d357 1
a357 1
.Pq n , 
d446 1
a446 1
this time limited to 
d448 1
a448 1
The term 
d450 1
a450 1
refers to those versions before the 
d452 1
a452 1
file re-write 
d464 1
a464 1
The 
d470 1
a470 1
style, e.g., 
d488 1
a488 1
The vertical bar 
d507 1
a507 1
The 
d524 1
a524 1
In groff, the 
d536 1
a536 1
reference was written by 
d547 1
a547 1
should be 
d570 1
a570 1
synopsis section.  
d582 1
a582 1
The 
d597 1
a597 1
should be provided for Linux (\(`a la 
d599 1
a599 1
.Sq \&Nx 
d608 1
a608 1
The \-split and \-nosplit arguments to 
@


1.48
log
@More clarity fixes in mdoc.7.
Sm/Sy argument to `Bf' fixed (schwarze@@openbsd).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.47 2009/07/18 18:49:19 kristaps Exp $
d390 1
a390 1
.It \&Cd     Ta    Yes      Ta    \&No     Ta    >0
@


1.47
log
@Considerably revamped argument-parsing for correct quoted-literal handling.
Deprecated ARGS_QUOTED (all arguments are quotable).
Documented quotation and whitespace rules in mdoc.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.46 2009/07/17 14:51:04 kristaps Exp $
a133 5
.Pp
Lastly, a standalone double-quote may be produced in a macro line by
using two consecutive double-quotes within a quoted literal.  See
.Sx Quotation
for details.
d160 2
a161 12
double-quote that is 
.Em
preceded by a double-quote terminates the term, regardless of
surrounding whitespace.  Thus, the following construction produces 
.Sq "a""b" ,
since, as mentioned in
.Sx Special Characters ,
two consecutive double-quotes in a quoted literal produce a standalone
double-quote:
.Bd -literal -offset indent
\&.Em "a""""b"
.Ed
d459 5
@


1.46
log
@Better doc of whitespace handling in mdoc.7.
Doc of macro quotation in mdoc.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.45 2009/07/17 12:40:48 kristaps Exp $
d134 5
d152 1
a152 3
arguments are quoted, whitespace is conditionally retained within the
quotes.
.\" TODO: which do and which don't?
d165 26
a190 1
double-quote terminates the term, regardless of surrounding whitespace.
@


1.45
log
@`sp' documented: validates & produces correct output.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.44 2009/07/17 12:08:08 kristaps Exp $
d52 1
a52 1
.Sh INPUT ENCODING
d58 1
a58 1
line termination.  
d136 14
a149 3
In general, consecutive blocks of whitespace are pruned from input.
These are later re-added, when applicable, by 
.Xr mandoc 1 .
d152 3
a154 5
Blank lines are permitted within
.Sq \&Bd \-literal
or
.Sq \&Bd \-unfilled
contexts.  Tab characters are only acceptable when delimiting 
d156 10
a165 5
and in
.Sq \&Bd \-literal
or
.Sq \&Bd \-unfilled
contexts.
d174 5
a178 2
.Sq \&Os 
(using this manual as an example):
a186 6
.Pp
Following these, the document body must begin with the NAME section
containing at least one 
.Sq \&Nm
followed by 
.Sq \&Nd .
d195 1
a195 1
is processed for macros, two- or three-character semantic annotations.
d198 1
a198 1
The syntax of macro depends on its classification.  In this section,
d213 1
a213 1
.Qq Parsable
d518 1
a518 1
utility was written by 
@


1.44
log
@Documented `br' macro in mdoc.7.
Made `Pp' and `Lp' be inline_eoln() (not sure why they weren't before).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.43 2009/07/14 15:57:08 kristaps Exp $
d417 1
d435 5
d466 1
a466 1
.Sq \&.It \-nested
d473 1
a473 1
.Sq \&.It \-column
d479 1
a479 1
.Sq \&.At
d484 1
a484 1
.Sq \&.Li
d496 1
a496 1
.Sq \&.Fo
d517 1
a517 1
.Sq \&.Fa
d519 1
a519 1
.Sq \&.Va
d523 1
a523 1
.Sq \&.Ft
d525 1
a525 1
.Sq \&.Vt
d527 1
a527 1
.Sq \&.Ft
d529 1
a529 1
.Sq \&.Fo ,
d531 1
a531 1
.Sq \&.Va .
d534 1
a534 1
.Sq \&.Va
d539 1
a539 1
.Sq \&.Fd
d542 1
a542 1
.Sq \&.In
d549 1
a549 1
.Sq \&.Bd
d554 1
a554 1
.Sq \&.Xo
d556 1
a556 1
.Sq \&.Xc
d561 1
a561 1
.Sq \&.Dt
d567 1
a567 1
.Sq \&.Lx
d569 2
a570 2
.Sq \&.Ox ,
.Sq \&.Nx 
d575 1
a575 1
.Sq \&.Rs/.Re
d580 1
a580 1
.Sq \&.An
@


1.43
log
@Consolidated some sections.  Much more readable.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.42 2009/07/13 07:23:07 kristaps Exp $
a179 84
.\" SUB-SECTION----------------------
.\" .Ss Classification
.\" Macros are classified by their scope rules: block full-explicit (BFE),
.\" block partial-explicit (BPE), block full-implicit (BFI), block
.\" partial-implicit (BPI), and in-line.
.\" SUB-SECTION----------------------
.\" .Ss Scope
.\" .Bl -inset 
.\" .\" LIST-ITEM
.\" .It Em Block
.\" macros enclose other block macros, in-line macros or text, and
.\" may span multiple lines.
.\" .Bl -inset -offset indent
.\" .\" LIST-ITEM
.\" .It Em Full-block
.\" macros always span multiple lines.  They consist of zero or 
.\" more
.\" .Qq heads ,
.\" subsequent macros or text on the same line following invocation; an
.\" optional
.\" .Qq body ,
.\" which spans subsequent lines of text or macros; and an optional
.\" .Qq tail ,
.\" macros or text on the same line following closure.
.\" .\" LIST-ITEM
.\" .It Em Partial-block
.\" macros may span multiple lines.  They consists of a optional
.\" .Qq head ,
.\" text immediately following invocation; always a 
.\" .Qq body ,
.\" text or macros following the head on the same and subsequent lines; and
.\" optionally a
.\" .Qq tail ,
.\" text immediately following closure.
.\" .\" LIST-ITEM
.\" .It Em In-line
.\" macros may only enclose text and span at most a single line. 
.\" .El
.\" .El
.\" SUB-SECTION----------------------
.\" .Ss Closure
.\" Closure of a macro's scope depends first on its classification, then
.\" on whether it's parsable.  In this table,
.\" .Sq BFE
.\" refers to block full-explicit and so on.
.\" .\" PARAGRAPH------------
.\" .Pp
.\" .Bl -tag -width 12n -offset indent -compact
.\" .It BPE , BFE
.\" corresponding explicit closure macro
.\" .It BFI
.\" end-of-file or a corresponding implicit closure macro
.\" .It BPI
.\" end-of-line (body may be closed by >0 space-separated
.\" .Sx Reserved Characters ,
.\" although block scope will still be open)
.\" .It INL
.\" end-of-line
.\" .El
.\" PARAGRAPH------------
.\" .Pp
.\" If a macro (block or in-line) is parsable, it may also be closed out by
.\" one of the following scenarios (unless specifically noted otherwise):
.\" .\" PARAGRAPH------------
.\" .Pp
.\" .Bl -dash -offset indent -compact
.\" .It 
.\" a sequence of >0 space-separated
.\" .Sx Reserved Characters ,
.\" .It
.\" another macro,
.\" .It
.\" end-of-line, or
.\" .It
.\" completion of a set number of arguments.
.\" .El
.\" PARAGRAPH------------
.\" .Pp
.\" If >0 space-separated
.\" .Sx Reserved Characters
.\" are followed by non-reserved characters, the behaviour differs per
.\" macro.  In general, scope of the macro is closed and re-opened:
.\" subsequent tokens are interpreted as if the scope had just been opened.
.\" In other circumstances, scope is simply closed out.
d223 3
a226 3
.It \&Bl     Ta    \&No     Ta    \&No     Ta    closed by \&El
.It \&El     Ta    \&No     Ta    \&No     Ta    opened by \&Bl
.It \&Bf     Ta    \&No     Ta    \&No     Ta    closed by \&Ef
a227 1
.It \&Bk     Ta    \&No     Ta    \&No     Ta    closed by \&Ek
d229 1
d253 1
a256 1
.It \&It     Ta    \&No     Ta    Yes      Ta    closed by \&It, \&El
d277 1
a278 1
.It \&Ac     Ta    Yes      Ta    Yes      Ta    opened by \&Ao
d281 3
a283 2
.It \&Pc     Ta    Yes      Ta    Yes      Ta    closed by \&Po
.It \&Po     Ta    Yes      Ta    Yes      Ta    opened by \&Pc
d285 4
a288 5
.It \&Dc     Ta    Yes      Ta    Yes      Ta    opened by \&Do
.It \&Xo     Ta    Yes      Ta    Yes      Ta    closed by \&Xc
.It \&Xc     Ta    Yes      Ta    Yes      Ta    opened by \&Xo
.It \&Bro    Ta    Yes      Ta    Yes      Ta    closed by \&Brc
.It \&Brc    Ta    Yes      Ta    Yes      Ta    opened by \&Bro
d291 2
a292 6
.It \&So     Ta    Yes      Ta    Yes      Ta    closed by \&Sc
.It \&Sc     Ta    Yes      Ta    Yes      Ta    opened by \&So
.It \&Fc     Ta    Yes      Ta    Yes      Ta    opened by \&Fo
.It \&Fo     Ta    \&No     Ta    \&No     Ta    closed by \&Fc
.It \&Ec     Ta    Yes      Ta    Yes      Ta    opened by \&Eo
.It \&Eo     Ta    Yes      Ta    Yes      Ta    closed by \&Ec
d297 4
a314 1
.It \&Op     Ta    Yes      Ta    Yes
d316 3
d320 1
d322 1
a324 4
.It \&Brq    Ta    Yes      Ta    Yes
.It \&D1     Ta    \&No     Ta    \&Yes
.It \&Dl     Ta    \&No     Ta    Yes
.It \&Ql     Ta    Yes      Ta    Yes
a345 29
.It \&Dd     Ta    \&No     Ta    \&No     Ta    >0
.It \&Dt     Ta    \&No     Ta    \&No     Ta    n
.It \&Os     Ta    \&No     Ta    \&No     Ta    n
.It \&Pp     Ta    \&No     Ta    \&No     Ta    0
.It \&Ad     Ta    Yes      Ta    Yes      Ta    n
.It \&An     Ta    Yes      Ta    Yes      Ta    n
.It \&Ar     Ta    Yes      Ta    Yes      Ta    n
.It \&Cd     Ta    Yes      Ta    \&No     Ta    >0
.It \&Cm     Ta    Yes      Ta    Yes      Ta    n
.It \&Dv     Ta    Yes      Ta    Yes      Ta    n
.It \&Er     Ta    Yes      Ta    Yes      Ta    >0
.It \&Ev     Ta    Yes      Ta    Yes      Ta    n
.It \&Ex     Ta    \&No     Ta    \&No     Ta    0
.It \&Fa     Ta    Yes      Ta    Yes      Ta    n
.It \&Fd     Ta    \&No     Ta    \&No     Ta    >0
.It \&Fl     Ta    Yes      Ta    Yes      Ta    n
.It \&Fn     Ta    Yes      Ta    Yes      Ta    >0
.It \&Ft     Ta    Yes      Ta    Yes      Ta    n
.It \&Ic     Ta    Yes      Ta    Yes      Ta    >0
.It \&In     Ta    \&No     Ta    \&No     Ta    n
.It \&Li     Ta    Yes      Ta    Yes      Ta    n
.It \&Nm     Ta    Yes      Ta    Yes      Ta    n
.It \&Ot     Ta    \&No     Ta    \&No     Ta    n
.It \&Pa     Ta    Yes      Ta    Yes      Ta    n
.It \&Rv     Ta    \&No     Ta    \&No     Ta    0
.It \&St     Ta    \&No     Ta    Yes      Ta    1
.It \&Va     Ta    Yes      Ta    Yes      Ta    n
.It \&Vt     Ta    Yes      Ta    Yes      Ta    >0
.It \&Xr     Ta    Yes      Ta    Yes      Ta    >0, <3
d358 4
d364 1
d366 2
d369 4
d374 11
d386 7
d394 2
d399 2
d402 1
d404 2
d407 1
d411 1
d413 4
a416 12
.It \&Dx     Ta    Yes      Ta    Yes      Ta    n
.It \&Bt     Ta    \&No     Ta    \&No     Ta    0
.It \&Hf     Ta    \&No     Ta    \&No     Ta    n
.It \&Fr     Ta    \&No     Ta    \&No     Ta    n
.It \&Ud     Ta    \&No     Ta    \&No     Ta    0
.It \&Lb     Ta    \&No     Ta    \&No     Ta    1
.It \&Ap     Ta    Yes      Ta    Yes      Ta    0
.It \&Lp     Ta    \&No     Ta    \&No     Ta    0
.It \&Lk     Ta    Yes      Ta    Yes      Ta    n
.It \&Mt     Ta    Yes      Ta    Yes      Ta    >0
.It \&Es     Ta    \&No     Ta    \&No     Ta    0
.It \&En     Ta    \&No     Ta    \&No     Ta    0
@


1.42
log
@Err/warn fix (schwarze@@openbsd.org).
Lots of whitespace churn in getting functions aligned nicely.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.41 2009/07/12 19:34:51 kristaps Exp $
d20 1
a20 1
.\" SECTION
d24 1
a24 1
.\" SECTION
d31 2
a32 4
manuals.  In this reference document, we describe the syntax and
structure of the 
.Nm
language.  Our reference implementation is
d38 1
a38 1
.\" PARAGRAPH
d51 1
a51 1
.\" SECTION
d55 3
a57 6
character
.Sq \  ,
and, in certain circumstances, the tab character
.Sq \et .
All manuals must have
.Sq \en
d59 1
a59 17
.Pp
The only time a blank line is acceptable is within
the context of 
.Sq \&.Bd \-literal
or
.Sq \&.Bd \-unfilled .
.Pp
Tab characters 
.Pq \et
are only acceptable when delimiting 
.Sq \&.Bl \-column 
and in
.Sq \&.Bd \-literal
or
.Sq \&.Bd \-unfilled
contexts.
.\" SUB-SECTION
d61 7
a67 9
Anything following a
.Sq \e" 
delimiter is considered a comment (unless the 
.Sq \e
itself has been escaped) and is ignored to the end of line.
Furthermore, a macro line with only a control character
.Sq \. ,
optionally followed by whitespace, is ignored.
.\" SUB-SECTION
d94 1
a94 1
.\" PARAGRAPH
d97 3
a99 3
.Sx Closure .
For general non-reserved use, characters must either be escaped with a
non-breaking space
d101 2
a102 2
or, if applicable, an appropriate escape-sequence used.  
.\" SUB-SECTION
d104 2
a105 1
Special character sequences begin with the escape character
d113 9
a121 1
or a single one-character sequence.
d123 2
a124 1
Characters may alternatively be escaped by a slash-asterisk,
d126 2
a127 1
with the same combinations as described above.
d129 2
a130 1
Terms may also be text-decorated using the
d132 3
a134 3
escape followed by a text-decoration letter: B (bold), I, (italic), or P
and R (Roman, or reset).  This form is not recommended.
.\" SUB-SECTION
d136 2
a137 3
Unless in literal mode or specifically escaped, consecutive blocks of
whitespace are pruned from input.  These are later re-added, if
applicable, by a front-end utility such as
d139 15
a153 2
.\" SECTION
.Sh STRUCTURE
d156 3
a158 3
document must begin with the document prologue, containing, in order, 
.Sq \&.Dd ,
.Sq \&.Dt ,
d160 11
a170 1
.Sq \&.Os .
d173 97
a269 84
.Sq \&.Nm
followed by a
.Sq \&.Nd
macro.
.Pp
At least one free-form or macro line must follow this prologue.
.\"
.Ss Classification
Macros are classified by their scope rules.  Some macros are allowed to
deviate from their classifications to preserve backward-compatibility
with old macro combinations still found in the manual corpus.  These are
specifically noted on a per-macro basis.
.\" SUB-SECTION
.Ss Scope
.Bl -inset 
.\" LIST-ITEM
.It Em Block
macros enclose other block macros, in-line macros or text, and
may span multiple lines.
.Bl -inset -offset indent
.\" LIST-ITEM
.It Em Full-block
macros always span multiple lines.  They consist of zero or 
more
.Qq heads ,
subsequent macros or text on the same line following invocation; an
optional
.Qq body ,
which spans subsequent lines of text or macros; and an optional
.Qq tail ,
macros or text on the same line following closure.
.\" LIST-ITEM
.It Em Partial-block
macros may span multiple lines.  They consists of a optional
.Qq head ,
text immediately following invocation; always a 
.Qq body ,
text or macros following the head on the same and subsequent lines; and
optionally a
.Qq tail ,
text immediately following closure.
.\" LIST-ITEM
.It Em In-line
macros may only enclose text and span at most a single line. 
.El
.El
.\" SUB-SECTION
.Ss Closure
Closure of a macro's scope depends first on its classification, then
on whether it's parsable.  In this table,
.Sq BFE
refers to block full-explicit and so on.
.\" PARAGRAPH
.Pp
.Bl -tag -width 12n -offset indent -compact
.It BPE , BFE
corresponding explicit closure macro
.It BFI
end-of-file or a corresponding implicit closure macro
.It BPI
end-of-line (body may be closed by >0 space-separated
.Sx Reserved Characters ,
although block scope will still be open)
.It INL
end-of-line
.El
.\" PARAGRAPH
.Pp
If a macro (block or in-line) is parsable, it may also be closed out by
one of the following scenarios (unless specifically noted otherwise):
.\" PARAGRAPH
.Pp
.Bl -dash -offset indent -compact
.It 
a sequence of >0 space-separated
.Sx Reserved Characters ,
.It
another macro,
.It
end-of-line, or
.It
completion of a set number of arguments.
.El
.\" PARAGRAPH
d271 10
a280 18
If >0 space-separated
.Sx Reserved Characters
are followed by non-reserved characters, the behaviour differs per
macro.  In general, scope of the macro is closed and re-opened:
subsequent tokens are interpreted as if the scope had just been opened.
In other circumstances, scope is simply closed out.
.\" SECTION
.Sh SYNTAX
Macros are two or three characters in length.  The syntax of macro
invocation depends on its classification.  
.Qq \-arg
refers to the macro arguments (which may contain zero or more values).
In these illustrations, 
.Sq \&.Yo
opens the scope of a macro, and if specified,
.Sq \&.Yc
closes it out (closure may be implicit at end-of-line or end-of-file).
.\" PARAGRAPH
d282 15
a296 1
Block full-explicit (may contain head, body, tail).
d298 1
a298 1
\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBhead...\(rB 
d300 1
a300 1
\&.Yc \(lBtail...\(rB 
d302 1
a302 1
.\" PARAGRAPH
d304 25
a328 1
Block full-implicit (may contain zero or more heads, body, no tail).
d330 1
a330 1
\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBhead... \(lBTa head...\(rB\(rB 
a331 1
\&.Yc
d333 1
a333 1
.\" PARAGRAPH
d335 14
a348 1
Block partial-explicit (may contain head, multi-line body, tail).
d350 1
a350 1
\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBhead...\(rB 
d354 1
a354 1
\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBhead...\(rB \
d357 1
a357 1
.\" PARAGRAPH
d359 1
a359 52
Block partial-implicit (no head, body, no tail).  Note that the body
section may be followed by zero or more 
.Sx Reserved Words .
These are in the block scope, but not in the body scope.
.Bd -literal -offset indent
\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBbody...\(rB \(lBreserved...\(rB
.Ed
.\" PARAGRAPH
.Pp
In-lines have \(>=0 scoped arguments.
.Bd -literal -offset indent
\&.Yy \(lB\-arg \(lBval...\(rB\(rB \(lBargs...\(rB

\&.Yy \(lB\-arg \(lBval...\(rB\(rB arg0 arg1 argN
.Ed
.\" SECTION
.Sh MACROS
This section contains a complete list of all 
.Nm
macros, arranged by classification.  A 
.Qq callable
macro is invoked subsequent to the initial macro-line macro.  A
.Qq parsable
macro may be followed by further (ostensibly callable) macros.
.\" SUB-SECTION
.Ss Block full-implicit
The head of these macros follows invocation; the body is the content of
subsequent lines prior to closure.  None of these macros have tails;
some 
.Po
.Sq \&.It \-bullet , 
.Sq \-hyphen , 
.Sq \-dash ,
.Sq \-enum ,
.Sq \-item 
.Pc
don't have heads.
.Pp
.Bl -column -compact -offset indent "MacroX" "CallableX" "ParsableX" "Closing"
.It Em Macro Ta Em Callable Ta Em Parsable Ta Em Closing
.It \&.Nd    Ta    \&No    Ta    \&No    Ta    \&.Sh
.It \&.Sh    Ta    \&No    Ta    \&No    Ta    \&.Sh
.It \&.Ss    Ta    \&No    Ta    \&No    Ta    \&.Sh, \&.Ss
.It \&.It    Ta    \&No    Ta    Yes     Ta    \&.It, \&.El
.El
.\" SUB-SECTION
.Ss Block full-explicit
None of these macros are callable or parsed.  The last column indicates
the explicit scope rules.  All contains bodies, some may contain heads 
.Pq So \&Bf Sc .
.Pp
.Bl -column -compact -offset indent "MacroX" "CallableX" "ParsableX" "closed by XXX"
d361 24
a384 8
.It \&.Bd    Ta    \&No    Ta    \&No    Ta    closed by \&.Ed
.It \&.Ed    Ta    \&No    Ta    \&No    Ta    opened by \&.Bd
.It \&.Bl    Ta    \&No    Ta    \&No    Ta    closed by \&.El
.It \&.El    Ta    \&No    Ta    \&No    Ta    opened by \&.Bl
.It \&.Bf    Ta    \&No    Ta    \&No    Ta    closed by \&.Ef
.It \&.Ef    Ta    \&No    Ta    \&No    Ta    opened by \&.Bf
.It \&.Bk    Ta    \&No    Ta    \&No    Ta    closed by \&.Ek
.It \&.Ek    Ta    \&No    Ta    \&No    Ta    opened by \&.Bk
d386 1
a386 1
.\" SUB-SECTION
d388 7
a394 2
All of these are callable and parsed for further macros.  Their scopes
close at the invocation's end-of-line.
d398 18
a415 68
.It \&.Aq    Ta    Yes   Ta    Yes
.It \&.Op    Ta    Yes   Ta    Yes
.It \&.Bq    Ta    Yes   Ta    Yes
.It \&.Dq    Ta    Yes   Ta    Yes
.It \&.Pq    Ta    Yes   Ta    Yes
.It \&.Qq    Ta    Yes   Ta    Yes
.It \&.Sq    Ta    Yes   Ta    Yes
.It \&.Brq   Ta    Yes   Ta    Yes
.It \&.D1    Ta    \&No  Ta    \&Yes
.It \&.Dl    Ta    \&No  Ta    Yes
.It \&.Ql    Ta    Yes   Ta    Yes
.El
.\" PARAGRAPH
.Pp
The
.Sq \&.Op
may be broken by 
.Sq \&.Oc 
as in the following example:
.Bd -literal -offset indent
\&.Oo
\&.Op Fl a Oc
.Ed
.Pp
In the above example, the scope of
.Sq \&.Op
is technically broken by 
.Sq \&.Oc ,
however, due to the overwhelming existence of this sequence, it's
allowed.
.\" SUB-SECTION
.Ss Block partial-explicit
Each of these contains at least a body and, in limited circumstances, a
head 
.Pq So \&.Fo Sc , So \&.Eo Sc
and/or tail 
.Pq So \&.Ec Sc .
.Pp
.Bl -column "MacroX" "CallableX" "ParsableX" "closed by XXXX" -compact -offset indent
.It Em Macro Ta Em Callable Ta Em Parsable Ta Em Scope
.It \&.Ao    Ta    Yes   Ta    Yes    Ta    closed by \&.Ac
.It \&.Ac    Ta    Yes   Ta    Yes    Ta    opened by \&.Ao
.It \&.Bc    Ta    Yes   Ta    Yes    Ta    closed by \&.Bo
.It \&.Bo    Ta    Yes   Ta    Yes    Ta    opened by \&.Bc
.It \&.Pc    Ta    Yes   Ta    Yes    Ta    closed by \&.Po
.It \&.Po    Ta    Yes   Ta    Yes    Ta    opened by \&.Pc
.It \&.Do    Ta    Yes   Ta    Yes    Ta    closed by \&.Dc
.It \&.Dc    Ta    Yes   Ta    Yes    Ta    opened by \&.Do
.It \&.Xo    Ta    Yes   Ta    Yes    Ta    closed by \&.Xc
.It \&.Xc    Ta    Yes   Ta    Yes    Ta    opened by \&.Xo
.It \&.Bro   Ta    Yes   Ta    Yes    Ta    closed by \&.Brc
.It \&.Brc   Ta    Yes   Ta    Yes    Ta    opened by \&.Bro
.It \&.Oc    Ta    Yes   Ta    Yes    Ta    closed by \&.Oo
.It \&.Oo    Ta    Yes   Ta    Yes    Ta    opened by \&.Oc
.It \&.So    Ta    Yes   Ta    Yes    Ta    closed by \&.Sc
.It \&.Sc    Ta    Yes   Ta    Yes    Ta    opened by \&.So
.It \&.Fc    Ta    Yes   Ta    Yes    Ta    opened by \&.Fo
.It \&.Fo    Ta    \&No  Ta    \&No   Ta    closed by \&.Fc
.It \&.Ec    Ta    Yes   Ta    Yes    Ta    opened by \&.Eo
.It \&.Eo    Ta    Yes   Ta    Yes    Ta    closed by \&.Ec
.It \&.Qc    Ta    Yes   Ta    Yes    Ta    opened by \&.Oo
.It \&.Qo    Ta    Yes   Ta    Yes    Ta    closed by \&.Oc
.It \&.Re    Ta    \&No  Ta    \&No   Ta    opened by \&.Rs
.It \&.Rs    Ta    \&No  Ta    \&No   Ta    closed by \&.Re
.El
.\" SUB-SECTION
.Ss In-line 
In-line macros have only text children.  If a number (or inequality) of
d419 8
d430 70
a499 70
.It \&.Dd    Ta    \&No  Ta    \&No    Ta    >0
.It \&.Dt    Ta    \&No  Ta    \&No    Ta    n
.It \&.Os    Ta    \&No  Ta    \&No    Ta    n
.It \&.Pp    Ta    \&No  Ta    \&No    Ta    0
.It \&.Ad    Ta    Yes   Ta    Yes     Ta    n
.It \&.An    Ta    Yes   Ta    Yes     Ta    n
.It \&.Ar    Ta    Yes   Ta    Yes     Ta    n
.It \&.Cd    Ta    Yes   Ta    \&No    Ta    >0
.It \&.Cm    Ta    Yes   Ta    Yes     Ta    n
.It \&.Dv    Ta    Yes   Ta    Yes     Ta    n
.It \&.Er    Ta    Yes   Ta    Yes     Ta    >0
.It \&.Ev    Ta    Yes   Ta    Yes     Ta    n
.It \&.Ex    Ta    \&No  Ta    \&No    Ta    0
.It \&.Fa    Ta    Yes   Ta    Yes     Ta    n
.It \&.Fd    Ta    \&No  Ta    \&No    Ta    >0
.It \&.Fl    Ta    Yes   Ta    Yes     Ta    n
.It \&.Fn    Ta    Yes   Ta    Yes     Ta    >0
.It \&.Ft    Ta    Yes   Ta    Yes     Ta    n
.It \&.Ic    Ta    Yes   Ta    Yes     Ta    >0
.It \&.In    Ta    \&No  Ta    \&No    Ta    n
.It \&.Li    Ta    Yes   Ta    Yes     Ta    n
.It \&.Nm    Ta    Yes   Ta    Yes     Ta    n
.It \&.Ot    Ta    \&No  Ta    \&No    Ta    n
.It \&.Pa    Ta    Yes   Ta    Yes     Ta    n
.It \&.Rv    Ta    \&No  Ta    \&No    Ta    0
.It \&.St    Ta    \&No  Ta    Yes     Ta    1
.It \&.Va    Ta    Yes   Ta    Yes     Ta    n
.It \&.Vt    Ta    Yes   Ta    Yes     Ta    >0
.It \&.Xr    Ta    Yes   Ta    Yes     Ta    >0, <3
.It \&.%A    Ta    \&No  Ta    \&No    Ta    >0
.It \&.%B    Ta    \&No  Ta    \&No    Ta    >0
.It \&.%C    Ta    \&No  Ta    \&No    Ta    >0
.It \&.%D    Ta    \&No  Ta    \&No    Ta    >0
.It \&.%I    Ta    \&No  Ta    \&No    Ta    >0
.It \&.%J    Ta    \&No  Ta    \&No    Ta    >0
.It \&.%N    Ta    \&No  Ta    \&No    Ta    >0
.It \&.%O    Ta    \&No  Ta    \&No    Ta    >0
.It \&.%P    Ta    \&No  Ta    \&No    Ta    >0
.It \&.%R    Ta    \&No  Ta    \&No    Ta    >0
.It \&.%T    Ta    \&No  Ta    \&No    Ta    >0
.It \&.%V    Ta    \&No  Ta    \&No    Ta    >0
.It \&.At    Ta    Yes   Ta    Yes     Ta    1
.It \&.Bsx   Ta    Yes   Ta    Yes     Ta    n
.It \&.Bx    Ta    Yes   Ta    Yes     Ta    n
.It \&.Db    Ta    \&No  Ta    \&No    Ta    1
.It \&.Em    Ta    Yes   Ta    Yes     Ta    >0
.It \&.Fx    Ta    Yes   Ta    Yes     Ta    n
.It \&.Ms    Ta    Yes   Ta    Yes     Ta    >0
.It \&.No    Ta    Yes   Ta    Yes     Ta    0
.It \&.Ns    Ta    Yes   Ta    Yes     Ta    0
.It \&.Nx    Ta    Yes   Ta    Yes     Ta    n
.It \&.Ox    Ta    Yes   Ta    Yes     Ta    n
.It \&.Pf    Ta    \&No  Ta    Yes     Ta    1
.It \&.Sm    Ta    \&No  Ta    \&No    Ta    1
.It \&.Sx    Ta    Yes   Ta    Yes     Ta    >0
.It \&.Sy    Ta    Yes   Ta    Yes     Ta    >0
.It \&.Tn    Ta    Yes   Ta    Yes     Ta    >0
.It \&.Ux    Ta    Yes   Ta    Yes     Ta    n
.It \&.Dx    Ta    Yes   Ta    Yes     Ta    n
.It \&.Bt    Ta    \&No  Ta    \&No    Ta    0
.It \&.Hf    Ta    \&No  Ta    \&No    Ta    n
.It \&.Fr    Ta    \&No  Ta    \&No    Ta    n
.It \&.Ud    Ta    \&No  Ta    \&No    Ta    0
.It \&.Lb    Ta    \&No  Ta    \&No    Ta    1
.It \&.Ap    Ta    Yes   Ta    Yes     Ta    0
.It \&.Lp    Ta    \&No  Ta    \&No    Ta    0
.It \&.Lk    Ta    Yes   Ta    Yes     Ta    n
.It \&.Mt    Ta    Yes   Ta    Yes     Ta    >0
.It \&.Es    Ta    \&No  Ta    \&No    Ta    0
.It \&.En    Ta    \&No  Ta    \&No    Ta    0
d501 1
a501 9
.Pp
The
.Sq \&.Ot ,
.Sq \&.Fr ,
.Sq \&.Es 
and
.Sq \&.En ,
macros are obsolete.
.\" SECTION
d512 1
d576 1
a576 1
.\" SECTION
d580 1
a580 1
.\" SECTION
d586 1
a586 1
.\" SECTION
d589 1
@


1.41
log
@Fixed `Fo' superfluous space before `('. Noted groff compatibility in mdoc.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.40 2009/07/12 16:34:16 kristaps Exp $
a670 4
.\" LIST-ITEM
.It
The end-of-line whitespace warnings are superfluous holdovers from
historic groff.
@


1.40
log
@`Nd' is now a BFI (was an ELEM).  Noted by joerg@@netbsd.org, behaviour ok jmc@@openbsd.org, etc.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.39 2009/07/12 15:32:26 kristaps Exp $
d583 5
@


1.39
log
@mdoc.7 using -offset indent instead of -offset XXXX or whatever it was.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.38 2009/07/06 09:21:24 kristaps Exp $
d333 1
a456 1
.It \&.Nd    Ta    \&No  Ta    \&No    Ta    n
@


1.38
log
@Initial removal of enum mdoc_warn from mdoc warnings (unnecessary complication).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.37 2009/07/05 19:25:10 kristaps Exp $
d49 1
a49 1
.Bd -literal -offset XXX
d93 1
a93 1
.Bl -tag -width Ds -offset XXXX -compact
d181 1
a181 1
.Bl -inset -offset XXXX
d216 1
a216 1
.Bl -tag -width 12n -offset XXXX -compact
d234 1
a234 1
.Bl -dash -offset XXXX -compact
d267 1
a267 1
.Bd -literal -offset XXXX
d275 1
a275 1
.Bd -literal -offset XXXX
d283 1
a283 1
.Bd -literal -offset XXXX
d297 1
a297 1
.Bd -literal -offset XXXX
d303 1
a303 1
.Bd -literal -offset XXX
d331 1
a331 1
.Bl -column -compact -offset XXXX "MacroX" "CallableX" "ParsableX" "Closing"
d343 1
a343 1
.Bl -column -compact -offset XXXX "MacroX" "CallableX" "ParsableX" "closed by XXX"
d359 1
a359 1
.Bl -column "MacroX" "CallableX" "ParsableX" -compact -offset XXXX
d380 1
a380 1
.Bd -literal -offset XXXX
d399 1
a399 1
.Bl -column "MacroX" "CallableX" "ParsableX" "closed by XXXX" -compact -offset XXXX
d433 1
a433 1
.Bl -column "MacroX" "CallableX" "ParsableX" "Arguments" -compact -offset XXXX
@


1.37
log
@Backed out "-width indent" and "-width indent-two", which aren't
supported by any groff mdoc tmac (and erroneously used in many manuals,
hence the confusion).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.36 2009/07/04 11:04:07 kristaps Exp $
d666 4
@


1.36
log
@Noted secret -width indent/indent-two arguments to `Bl'.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.35 2009/07/04 09:00:41 kristaps Exp $
a529 6
The \-width argument to 
.Sq \&.Bl
respects indent and indent-two (groff does too, but does not document
the fact).
.\" LIST-ITEM
.It
@


1.35
log
@man.7/mdoc.7 properly reflect escape-character handling.
man.7 points to mdoc.7 for COMPATIBILITY.
Whitespace stripping noted in mdoc.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.34 2009/06/25 11:35:28 kristaps Exp $
d530 6
@


1.34
log
@Added note about whitespace being stripped from mdoc/man input and re-added in mandoc(1).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.33 2009/06/25 10:51:21 kristaps Exp $
d139 6
a144 1
with the same combinations as described above.  This form is deprecated.  
d530 14
d550 1
a550 1
.Sq \(Ba
d579 4
a582 5
If an special-character control character 
.Sq \e 
is escaped, it will
obviously not render the sequence.  Even newer versions of groff seem to
dither on this.
@


1.33
log
@Fixed STRUCTURE repeat (schwarze@@openbsd.org).
Simplified some explanations (nobody cares about ontologies these days).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.32 2009/06/22 13:09:17 kristaps Exp $
d140 6
@


1.32
log
@libman documents require `TH' and at least one node.
libman requirements documented in man.7 STRUCTURE section.
Added STRUCTURE section to mdoc.7, too.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.31 2009/06/22 12:22:35 kristaps Exp $
d31 2
a32 2
manuals.  In this reference document, we describe the syntax, ontology
and structure of the 
d142 21
a162 5
Macros are classified in an ontology described by their scope rules.
Some macros are allowed to deviate from their classifications to
preserve backward-compatibility with old macro combinations still found
in the manual corpus.  These are specifically noted on a per-macro
basis.
a297 16
.Sh STRUCTURE
Each
.Nm
document must begin with the document prologue, containing, in order, 
.Sq \&.Dd ,
.Sq \&.Dt ,
and
.Sq \&.Os .
.Pp
Following these, the document body must begin with the NAME section
containing at least one 
.Sq \&.Nm
followed by a
.Sq \&.Nd
macro.
.\" SECTION
d301 1
a301 1
macros, arranged ontologically.  A 
@


1.31
log
@Added -split and -nosplit "I-Don't-Like" note to mdoc.7 (there really must be another way to do this).
Fixed .Er -width conversion.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.30 2009/06/17 14:08:47 kristaps Exp $
d281 17
a297 1
.\"
@


1.30
log
@`Bl -column' now correctly handles tail entries (Bl -column -more... arg0...).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.29 2009/06/16 19:13:28 kristaps Exp $
d621 5
@


1.29
log
@Modernised comment handling: text following \" is thrown away before
either parser is invoked.  Single-dot lines correctly handled.  This
confirms with both new- and old-groff.  "Comment" subsection added to
mdoc.7 and man.7.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.28 2009/06/12 12:40:44 kristaps Exp $
d304 1
a304 1
.Bl -column "MacroX" "CallableX" "ParsableX" "Closing" -compact -offset XXXX
d316 1
a316 1
.Bl -column "MacroX" "CallableX" "ParsableX" "closed by XXX" -compact -offset XXXX
@


1.28
log
@Made per-macro "now callable" COMPATIBILITY claims into a single "most macros callable".
Added COMPATIBILITY note on escaped special-character sequences.
Vertical bar now correctly delimits (like in new groff).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.27 2009/06/12 09:18:00 kristaps Exp $
d81 10
d93 1
a93 1
.Bl -tag -width 12n -offset XXXX -compact
@


1.27
log
@`Lk' is correctly handled as CALLABLE (note groff munges nested output).
`Mt' is now CALLABLE.
Fixed missing validate/action of zero-element, non-called inline elements.
Fixed missing validate/action of nested inline element re-calls.
Fixed bogus column argv index in validator.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.26 2009/06/11 20:02:37 kristaps Exp $
d34 6
a39 1
language.
d104 2
d480 9
a488 5
The mdoc language was traditionally a 
.Qq roff
macro package; most existing manuals were written with mdoc syntax
dictated by system-dependent roff installations.  This section documents
compatibility with these systems.
d493 10
a502 8
.Sq \&.An ,
.Sq \&.Fo ,
.Sq \&.Lk ,
.Sq \&.Ms ,
.Sq \&.Mt ,
and
.Sq \&.St
historically weren't callable.
d506 2
a507 1
is assumed for all lists: any list may be nested and
a521 12
The system-name macros (
.Ns Sq \&.At ,
.Sq \&.Bsx ,
.Sq \&.Bx ,
.Sq \&.Fx ,
.Sq \&.Nx ,
.Sq \&.Ox ,
and
.Sq \&.Ux )
are callable.
.\" LIST-ITEM
.It
d528 5
a532 2
.Sq \&.Cd
is callable.
d546 1
a546 1
There are several ambiguous parts of mdoc.
@


1.26
log
@`Ft' and `Ms' are now callable and compat-noted in mdoc.7 (joerg@@netbsd.org).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.25 2009/06/11 19:56:14 kristaps Exp $
d458 2
a459 2
.It \&.Lk    Ta    \&No  Ta    Yes     Ta    >0
.It \&.Mt    Ta    \&No  Ta    Yes     Ta    >0
d484 1
d486 1
d489 1
a489 1
historically weren't callable (they are now).
@


1.25
log
@`An' now callable, historic use noted in mdoc.7 (joerg@@netbsd.org).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.24 2009/06/11 07:26:35 kristaps Exp $
d408 1
a408 1
.It \&.Ft    Ta    \&No  Ta    Yes     Ta    n
d439 1
a439 1
.It \&.Ms    Ta    \&No  Ta    Yes     Ta    >0
d484 1
d487 1
a487 1
historically weren't always callable.  Both are now correctly callable.
@


1.24
log
@Fixed email address in manual AUTHOR reference.
Set max right margin to 80 columns (schwarze@@openbsd.org).
Fixed centre-field heading position (schwarze@@openbsd.org).
Also fixed -Tman centre-field.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.23 2009/06/10 20:18:43 kristaps Exp $
d396 1
a396 1
.It \&.An    Ta    \&No  Ta    Yes     Ta    n
d482 2
a483 1
.Sq \&.Fo
@


1.23
log
@Fixed license email address.
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.22 2009/04/12 19:45:26 kristaps Exp $
d534 1
a534 1
.An Kristaps Dzonsons Aq kristaps@@openbsd.org .
@


1.22
log
@Using proper license template (const).
@
text
@d1 1
a1 1
.\"	$Id: mdoc.7,v 1.21 2009/04/12 19:30:45 kristaps Exp $
d3 1
a3 1
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@openbsd.org>
@


1.21
log
@Spelling "preceed" -> "precede" (naddy).
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.20 2009/04/12 19:19:57 kristaps Exp $
d6 2
a7 3
.\" purpose with or without fee is hereby granted, provided that the
.\" above copyright notice and this permission notice appear in all
.\" copies.
d9 7
a15 8
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
.\" WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
.\" AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
.\" DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
.\" PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
.\" TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
.\" PERFORMANCE OF THIS SOFTWARE.
@


1.20
log
@Manual .Dt fields CAPITALISED.
Indent set to 5 chars (nroff compat).
Half-indent set to 3 chars (nroff compat).
Default behaviour is loose-y (ignore macro/char/escape).
Added -fstrict.
Added unknown-character ignoring.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.19 2009/03/27 14:56:15 kristaps Exp $
d497 1
a497 1
syntax where column widths may be preceeded by other arguments (instead
d563 1
a563 1
variable name and optional, preceeding type.
@


1.19
log
@Added some new manuals (mdoc.3 mandoc_char.7).
Support for .br in libman.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.18 2009/03/27 13:44:24 kristaps Exp $
d20 1
a20 1
.Dt mdoc 7
@


1.18
log
@Fixes in going over all OpenBSD manuals.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.17 2009/03/26 23:01:26 kristaps Exp $
a124 417
.Pp
The following is a table of all available escapes.
.Pp
Grammatic:
.Bl -tag -width 12n -offset "XXXX" -compact
.It \e(em
.Pq em-dash
.It \e(en
.Pq en-dash
.It \e-
.Pq hyphen
.It \e\e
.Pq back-slash
.It \e'
.Pq apostrophe
.It \e`
.Pq back-tick
.It \e
.Pq space
.It \e.
.Pq period
.It \e(r!
.Pq upside-down exclamation
.It \e(r?
.Pq upside-down question
.El
.\" PARAGRAPH
.Pp
Enclosures:
.Bl -tag -width 12n -offset "XXXX" -compact
.It \e(lh
.Pq left hand
.It \e(rh
.Pq right hand
.It \e(Fo
.Pq left guillemet
.It \e(Fc
.Pq right guillemet
.It \e(fo
.Pq left guilsing
.It \e(fc
.Pq right guilsing
.It \e(rC
.Pq right brace
.It \e(lC
.Pq left brace
.It \e(ra
.Pq right angle
.It \e(la
.Pq left angle
.It \e(rB
.Pq right bracket
.It \e(lB
.Pq left bracket
.It \eq
.Pq double-quote
.It \e(lq
.Pq left double-quote
.It \e(Lq
.Pq left double-quote, deprecated
.It \e(rq
.Pq right double-quote
.It \e(Rq
.Pq right double-quote, deprecated
.It \e(oq
.Pq left single-quote
.It \e(aq
.Pq right single-quote
.It \e(Bq
.Pq right low double-quote
.It \e(bq
.Pq right low single-quote
.El
.\" PARAGRAPH
.Pp
Indicatives:
.Bl -tag -width 12n -offset "XXXX" -compact
.It \e(<-
.Pq left arrow
.It \e(->
.Pq right arrow
.It \e(ua
.Pq up arrow
.It \e(da
.Pq down arrow
.It \e(<>
.Pq left-right arrow
.It \e(lA
.Pq left double-arrow
.It \e(rA
.Pq right double-arrow
.It \e(uA
.Pq up double-arrow
.It \e(dA
.Pq down double-arrow
.It \e(hA
.Pq left-right double-arrow
.El
.\" PARAGRAPH
.Pp
Mathematical:
.Bl -tag -width 12n -offset "XXXX" -compact
.It \e(es
.Pq empty set
.It \e(ca
.Pq intersection
.It \e(cu
.Pq union
.It \e(gr
.Pq gradient
.It \e(pd
.Pq partial differential
.It \e(ap
.Pq similarity
.It \e(=)
.Pq proper superset
.It \e((=
.Pq proper subset
.It \e(eq
.Pq equals
.It \e(di
.Pq division
.It \e(mu
.Pq multiplication
.It \e(pl
.Pq addition
.It \e(nm
.Pq not element
.It \e(mo
.Pq element
.It \e(Im
.Pq imaginary
.It \e(Re
.Pq real
.It \e(Ah
.Pq aleph
.It \e(te
.Pq existential quantifier
.It \e(fa
.Pq universal quantifier
.It \e(AN
.Pq logical AND
.It \e(OR
.Pq logical OR
.It \e(no
.Pq logical NOT
.It \e(st
.Pq such that
.It \e(tf
.Pq therefore
.It \e(~~
.Pq approximate
.It \e(~=
.Pq approximately equals
.It \e(=~
.Pq congruent
.It \e(Gt
.Pq greater-than, deprecated
.It \e(Lt
.Pq less-than, deprecated
.It \e(<=
.Pq less-than-equal
.It \e(Le
.Pq less-than-equal, deprecated
.It \e(>=
.Pq greater-than-equal
.It \e(Ge
.Pq greater-than-equal
.It \e(==
.Pq equal
.It \e(!=
.Pq not equal
.It \e(Ne
.Pq not equal, deprecated
.It \e(if
.Pq infinity
.It \e(If
.Pq infinity, deprecated
.It \e(na
.Pq NaN , an extension
.It \e(Na
.Pq NaN, deprecated
.It \e(+-
.Pq plus-minus
.It \e(Pm
.Pq plus-minus, deprecated
.It \e(**
.Pq asterisk
.El
.\" PARAGRAPH
.Pp
Ligatures:
.Bl -tag -width 12n -offset "XXXX" -compact
.It \e(ss
.Pq German eszett
.It \e(AE
.Pq upper-case AE
.It \e(ae
.Pq lower-case AE
.It \e(OE
.Pq upper-case OE
.It \e(oe
.Pq lower-case OE
.It \e(ff
.Pq ff ligature
.It \e(fi
.Pq fi ligature
.It \e(fl
.Pq fl ligature
.It \e(Fi
.Pq ffi ligature
.It \e(Fl
.Pq ffl ligature
.El
.\" PARAGRAPH
.Pp
Diacritics and letters:
.Bl -tag -width 12n -offset "XXXX" -compact
.It \e(ga
.Pq grave accent
.It \e(aa
.Pq accute accent
.It \e(a"
.Pq umlaut accent
.It \e(ad
.Pq dieresis accent
.It \e(a~
.Pq tilde accent
.It \e(a^
.Pq circumflex accent
.It \e(ac
.Pq cedilla accent
.It \e(ad
.Pq dieresis accent
.It \e(ah
.Pq caron accent
.It \e(ao
.Pq ring accent
.It \e(ho
.Pq hook accent
.It \e(ab
.Pq breve accent
.It \e(a-
.Pq macron accent
.It \e(-D
.Pq upper-case eth
.It \e(Sd
.Pq lower-case eth
.It \e(TP
.Pq upper-case thorn
.It \e(Tp
.Pq lower-case thorn
.It \e('A
.Pq upper-case acute A
.It \e('E
.Pq upper-case acute E
.It \e('I
.Pq upper-case acute I
.It \e('O
.Pq upper-case acute O
.It \e('U
.Pq upper-case acute U
.It \e('a
.Pq lower-case acute a
.It \e('e
.Pq lower-case acute e
.It \e('i
.Pq lower-case acute i
.It \e('o
.Pq lower-case acute o
.It \e('u
.Pq lower-case acute u
.It \e(`A
.Pq upper-case grave A
.It \e(`E
.Pq upper-case grave E
.It \e(`I
.Pq upper-case grave I
.It \e(`O
.Pq upper-case grave O
.It \e(`U
.Pq upper-case grave U
.It \e(`a
.Pq lower-case grave a
.It \e(`e
.Pq lower-case grave e
.It \e(`i
.Pq lower-case grave i
.It \e(`o
.Pq lower-case grave o
.It \e(`u
.Pq lower-case grave u
.It \e(~A
.Pq upper-case tilde A
.It \e(~N
.Pq upper-case tilde N
.It \e(~O
.Pq upper-case tilde O
.It \e(~a
.Pq lower-case tilde a
.It \e(~n
.Pq lower-case tilde n
.It \e(~o
.Pq lower-case tilde o
.It \e(:A
.Pq upper-case dieresis A
.It \e(:E
.Pq upper-case dieresis E
.It \e(:I
.Pq upper-case dieresis I
.It \e(:O
.Pq upper-case dieresis O
.It \e(:U
.Pq upper-case dieresis U
.It \e(:a
.Pq lower-case dieresis a
.It \e(:e
.Pq lower-case dieresis e
.It \e(:i
.Pq lower-case dieresis i
.It \e(:o
.Pq lower-case dieresis o
.It \e(:u
.Pq lower-case dieresis u
.It \e(:y
.Pq lower-case dieresis y
.It \e(^A
.Pq upper-case circumflex A
.It \e(^E
.Pq upper-case circumflex E
.It \e(^I
.Pq upper-case circumflex I
.It \e(^O
.Pq upper-case circumflex O
.It \e(^U
.Pq upper-case circumflex U
.It \e(^a
.Pq lower-case circumflex a
.It \e(^e
.Pq lower-case circumflex e
.It \e(^i
.Pq lower-case circumflex i
.It \e(^o
.Pq lower-case circumflex o
.It \e(^u
.Pq lower-case circumflex u
.It \e(,C
.Pq upper-case cedilla C
.It \e(,c
.Pq lower-case cedilla c
.It \e(/L
.Pq upper-case stroke L
.It \e(/l
.Pq lower-case stroke l
.It \e(/O
.Pq upper-case stroke O
.It \e(/o
.Pq lower-case stroke o
.It \e(oA
.Pq upper-case ring A
.It \e(oa
.Pq lower-case ring a
.El
.\" PARAGRAPH
.Pp
Monetary:
.Bl -tag -width 12n -offset "XXXX" -compact
.It \e(Cs
.Pq Scandinavian
.It \e(Do
.Pq dollar
.It \e(Po
.Pq pound
.It \e(Ye
.Pq yen
.It \e(Fn
.Pq florin
.It \e(ct
.Pq cent
.El
.\" PARAGRAPH
.Pp
Special symbols:
.Bl -tag -width 12n -offset "XXXX" -compact
.It \e0
.Pq white-space
.It \e(de
.Pq degree
.It \e(ps
.Pq paragraph
.It \e(sc
.Pq section
.It \e(dg
.Pq dagger
.It \e(dd
.Pq double dagger
.It \e(ci
.Pq circle
.It \e(ba
.Pq bar
.It \e(bb
.Pq broken bar
.It \e(Ba
.Pq bar, deprecated
.It \e(co
.Pq copyright
.It \e(rg
.Pq registered
.It \e(tm
.Pq trademarked
.It \e&
.Pq non-breaking space
.It \ee
.Pq escape
.It \e(Am
.Pq ampersand, deprecated
.El 
d439 1
a439 1
.It \&.Em    Ta    Yes   Ta    Yes     Ta    n
d529 2
a530 1
.Xr mandoc 1
@


1.17
log
@Clean-ups to documentation.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.16 2009/03/26 16:23:22 kristaps Exp $
d509 2
@


1.16
log
@All macro-invocations, for consistency, begin with `.' in documentation.
Fixed \\ -> \e in manual documentation.
All preliminary -man macros in place.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.15 2009/03/23 16:02:56 kristaps Exp $
a49 5
.\" PARAGRAPH
.Pp
Macros are two- or three-character sequences whose scope rules, rules
that dictate handling of subsequent-line or same-line arguments, are
governed by one of five classifications described in this document.
d541 1
a541 1
.Sh ONTOLOGY
d628 2
a629 2
Macros are generally two and at times three characters in length.  The
syntax of macro invocation depends on its classification.  
d687 1
a687 1
macro is may be invoked subsequent to the initial macro-line macro.  A
@


1.15
log
@Initial documentation in place for man.7.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.14 2009/03/23 14:22:11 kristaps Exp $
d69 1
a69 1
.Sq \&Bd \-literal
d71 1
a71 1
.Sq \&Bd \-unfilled .
d76 1
a76 1
.Sq \&Bl \-column 
d78 1
a78 1
.Sq \&Bd \-literal
d80 1
a80 1
.Sq \&Bd \-unfilled
d118 1
a118 1
.Sq \\
d128 1
a128 1
.Sq \\* ,
d135 1
a135 1
.It \\(em
d137 1
a137 1
.It \\(en
d141 1
a141 1
.It \\\\
d147 1
a147 1
.It \\
d149 1
a149 1
.It \\.
d151 1
a151 1
.It \\(r!
d153 1
a153 1
.It \\(r?
d160 1
a160 1
.It \\(lh
d162 1
a162 1
.It \\(rh
d164 1
a164 1
.It \\(Fo
d166 1
a166 1
.It \\(Fc
d168 1
a168 1
.It \\(fo
d170 1
a170 1
.It \\(fc
d172 1
a172 1
.It \\(rC
d174 1
a174 1
.It \\(lC
d176 1
a176 1
.It \\(ra
d178 1
a178 1
.It \\(la
d180 1
a180 1
.It \\(rB
d182 1
a182 1
.It \\(lB
d184 1
a184 1
.It \\q
d186 1
a186 1
.It \\(lq
d188 1
a188 1
.It \\(Lq
d190 1
a190 1
.It \\(rq
d192 1
a192 1
.It \\(Rq
d194 1
a194 1
.It \\(oq
d196 1
a196 1
.It \\(aq
d198 1
a198 1
.It \\(Bq
d200 1
a200 1
.It \\(bq
d207 1
a207 1
.It \\(<-
d209 1
a209 1
.It \\(->
d211 1
a211 1
.It \\(ua
d213 1
a213 1
.It \\(da
d215 1
a215 1
.It \\(<>
d217 1
a217 1
.It \\(lA
d219 1
a219 1
.It \\(rA
d221 1
a221 1
.It \\(uA
d223 1
a223 1
.It \\(dA
d225 1
a225 1
.It \\(hA
d232 1
a232 1
.It \\(es
d234 1
a234 1
.It \\(ca
d236 1
a236 1
.It \\(cu
d238 1
a238 1
.It \\(gr
d240 1
a240 1
.It \\(pd
d242 1
a242 1
.It \\(ap
d244 1
a244 1
.It \\(=)
d246 1
a246 1
.It \\((=
d248 1
a248 1
.It \\(eq
d250 1
a250 1
.It \\(di
d252 1
a252 1
.It \\(mu
d254 1
a254 1
.It \\(pl
d256 1
a256 1
.It \\(nm
d258 1
a258 1
.It \\(mo
d260 1
a260 1
.It \\(Im
d262 1
a262 1
.It \\(Re
d264 1
a264 1
.It \\(Ah
d266 1
a266 1
.It \\(te
d268 1
a268 1
.It \\(fa
d270 1
a270 1
.It \\(AN
d272 1
a272 1
.It \\(OR
d274 1
a274 1
.It \\(no
d276 1
a276 1
.It \\(st
d278 1
a278 1
.It \\(tf
d280 1
a280 1
.It \\(~~
d282 1
a282 1
.It \\(~=
d284 1
a284 1
.It \\(=~
d286 1
a286 1
.It \\(Gt
d288 1
a288 1
.It \\(Lt
d290 1
a290 1
.It \\(<=
d292 1
a292 1
.It \\(Le
d294 1
a294 1
.It \\(>=
d296 1
a296 1
.It \\(Ge
d298 1
a298 1
.It \\(==
d300 1
a300 1
.It \\(!=
d302 1
a302 1
.It \\(Ne
d304 1
a304 1
.It \\(if
d306 1
a306 1
.It \\(If
d308 1
a308 1
.It \\(na
d310 1
a310 1
.It \\(Na
d312 1
a312 1
.It \\(+-
d314 1
a314 1
.It \\(Pm
d316 1
a316 1
.It \\(**
d323 1
a323 1
.It \\(ss
d325 1
a325 1
.It \\(AE
d327 1
a327 1
.It \\(ae
d329 1
a329 1
.It \\(OE
d331 1
a331 1
.It \\(oe
d333 1
a333 1
.It \\(ff
d335 1
a335 1
.It \\(fi
d337 1
a337 1
.It \\(fl
d339 1
a339 1
.It \\(Fi
d341 1
a341 1
.It \\(Fl
d348 1
a348 1
.It \\(ga
d350 1
a350 1
.It \\(aa
d352 1
a352 1
.It \\(a"
d354 1
a354 1
.It \\(ad
d356 1
a356 1
.It \\(a~
d358 1
a358 1
.It \\(a^
d360 1
a360 1
.It \\(ac
d362 1
a362 1
.It \\(ad
d364 1
a364 1
.It \\(ah
d366 1
a366 1
.It \\(ao
d368 1
a368 1
.It \\(ho
d370 1
a370 1
.It \\(ab
d372 1
a372 1
.It \\(a-
d374 1
a374 1
.It \\(-D
d376 1
a376 1
.It \\(Sd
d378 1
a378 1
.It \\(TP
d380 1
a380 1
.It \\(Tp
d382 1
a382 1
.It \\('A
d384 1
a384 1
.It \\('E
d386 1
a386 1
.It \\('I
d388 1
a388 1
.It \\('O
d390 1
a390 1
.It \\('U
d392 1
a392 1
.It \\('a
d394 1
a394 1
.It \\('e
d396 1
a396 1
.It \\('i
d398 1
a398 1
.It \\('o
d400 1
a400 1
.It \\('u
d402 1
a402 1
.It \\(`A
d404 1
a404 1
.It \\(`E
d406 1
a406 1
.It \\(`I
d408 1
a408 1
.It \\(`O
d410 1
a410 1
.It \\(`U
d412 1
a412 1
.It \\(`a
d414 1
a414 1
.It \\(`e
d416 1
a416 1
.It \\(`i
d418 1
a418 1
.It \\(`o
d420 1
a420 1
.It \\(`u
d422 1
a422 1
.It \\(~A
d424 1
a424 1
.It \\(~N
d426 1
a426 1
.It \\(~O
d428 1
a428 1
.It \\(~a
d430 1
a430 1
.It \\(~n
d432 1
a432 1
.It \\(~o
d434 1
a434 1
.It \\(:A
d436 1
a436 1
.It \\(:E
d438 1
a438 1
.It \\(:I
d440 1
a440 1
.It \\(:O
d442 1
a442 1
.It \\(:U
d444 1
a444 1
.It \\(:a
d446 1
a446 1
.It \\(:e
d448 1
a448 1
.It \\(:i
d450 1
a450 1
.It \\(:o
d452 1
a452 1
.It \\(:u
d454 1
a454 1
.It \\(:y
d456 1
a456 1
.It \\(^A
d458 1
a458 1
.It \\(^E
d460 1
a460 1
.It \\(^I
d462 1
a462 1
.It \\(^O
d464 1
a464 1
.It \\(^U
d466 1
a466 1
.It \\(^a
d468 1
a468 1
.It \\(^e
d470 1
a470 1
.It \\(^i
d472 1
a472 1
.It \\(^o
d474 1
a474 1
.It \\(^u
d476 1
a476 1
.It \\(,C
d478 1
a478 1
.It \\(,c
d480 1
a480 1
.It \\(/L
d482 1
a482 1
.It \\(/l
d484 1
a484 1
.It \\(/O
d486 1
a486 1
.It \\(/o
d488 1
a488 1
.It \\(oA
d490 1
a490 1
.It \\(oa
d497 1
a497 1
.It \\(Cs
d499 1
a499 1
.It \\(Do
d501 1
a501 1
.It \\(Po
d503 1
a503 1
.It \\(Ye
d505 1
a505 1
.It \\(Fn
d507 1
a507 1
.It \\(ct
d514 1
a514 1
.It \\(de
d516 1
a516 1
.It \\(ps
d518 1
a518 1
.It \\(sc
d520 1
a520 1
.It \\(dg
d522 1
a522 1
.It \\(dd
d524 1
a524 1
.It \\(ci
d526 1
a526 1
.It \\(ba
d528 1
a528 1
.It \\(bb
d530 1
a530 1
.It \\(Ba
d532 1
a532 1
.It \\(co
d534 1
a534 1
.It \\(rg
d536 1
a536 1
.It \\(tm
d538 1
a538 1
.It \\&
d540 1
a540 1
.It \\e
d542 1
a542 1
.It \\(Am
d701 1
a701 1
.Sq \&It \-bullet , 
d754 4
a757 2
.Sq \&Op
may be broken by \&Oc as in the following example:
d764 1
a764 1
.Sq \&Op
d766 1
a766 1
.Sq \&Oc ,
d773 1
a773 1
.Pq So \&Fo Sc , So \&Eo Sc
d775 1
a775 1
.Pq So \&Ec Sc .
d887 3
a889 3
.Sq \&Ot ,
.Sq \&Fr ,
.Sq \&Es 
d891 1
a891 1
.Sq \&En ,
d904 1
a904 1
.Sq \&Fo
d906 1
a906 1
.Sq \&St
d910 1
a910 1
.Sq \&It \-nested
d916 1
a916 1
.Sq \&It \-column
d922 1
a922 1
.Sq \&At
d927 6
a932 6
.Ns Sq \&At ,
.Sq \&Bsx ,
.Sq \&Bx ,
.Sq \&Fx ,
.Sq \&Nx ,
.Sq \&Ox ,
d934 1
a934 1
.Sq \&Ux )
d939 1
a939 1
.Sq \&Li
d944 1
a944 1
.Sq \&Cd
d963 1
a963 1
.Sq \&Fa
d965 1
a965 1
.Sq \&Va
d969 1
a969 1
.Sq \&Ft
d971 1
a971 1
.Sq \&Vt
d973 1
a973 1
.Sq \&Ft
d975 1
a975 1
.Sq \&Fo ,
d977 1
a977 1
.Sq \&Va .
d980 1
a980 1
.Sq \&Va
d985 1
a985 1
.Sq \&Fd
d988 1
a988 1
.Sq \&In
d995 1
a995 1
.Sq \&Bd
d1000 1
a1000 1
.Sq \&Xo
d1002 1
a1002 1
.Sq \&Xc
d1007 1
a1007 1
.Sq \&Dt
d1013 1
a1013 1
.Sq \&Lx
d1015 2
a1016 2
.Sq \&Ox ,
.Sq \&Nx 
d1021 1
a1021 1
.Sq \&Rs/Re
@


1.14
log
@First addition of -man macro support.
Abstraction of mdoc.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.13 2009/03/22 08:52:27 kristaps Exp $
d25 1
a25 1
.Nd mdoc macro reference
d947 1
a947 4
.Xr mdoctree 1 ,
.Xr mdoclint 1 ,
.Xr mdocterm 1 ,
.Xr mdoc 3
@


1.13
log
@More documentation clarification.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.12 2009/03/21 13:47:02 kristaps Exp $
d1019 5
@


1.12
log
@Freed more macros from zero-length restrictions.
Fixed `Fn' spacing.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.11 2009/03/21 13:37:31 kristaps Exp $
d33 7
a39 1
manuals.  An
d42 1
a42 1
character
d45 10
a54 2
prior macros.  This document describes the encoding, ontology and syntax
of these macros.
d56 1
a56 1
.Sh CHARACTER ENCODING
d58 2
a59 1
documents may contain only printable characters, the space character
d547 5
a551 1
Macros are classified in an ontology described by scope rules.  
d751 16
@


1.11
log
@More macros freed from unnecessary limitations on numargs.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.10 2009/03/20 15:14:01 kristaps Exp $
d789 1
a789 1
.It \&.Fa    Ta    Yes   Ta    Yes     Ta    >0
@


1.10
log
@Support for `Bd' of all types (see mdoc.7 for newline/tab rules).
Renamed term.c and terminal.c functions to be term_.
Some bugfixes to lists.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.9 2009/03/19 20:43:13 kristaps Exp $
d785 1
a785 1
.It \&.Dv    Ta    Yes   Ta    Yes     Ta    >0
d787 1
a787 1
.It \&.Ev    Ta    Yes   Ta    Yes     Ta    >0
d796 1
a796 1
.It \&.Li    Ta    Yes   Ta    Yes     Ta    >0
d803 1
a803 1
.It \&.Va    Ta    Yes   Ta    Yes     Ta    >0
d822 1
a822 1
.It \&.Em    Ta    Yes   Ta    Yes     Ta    >0
@


1.9
log
@Finished all symbols.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.8 2009/03/19 18:30:26 kristaps Exp $
d50 17
a66 1
line termination.
@


1.8
log
@Fixed mandoc read from stdin.
Added some more groff_chars.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.7 2009/03/19 11:49:00 kristaps Exp $
d133 1
a133 1
.It \\(<<
d137 1
a137 1
.It \\(Fo
a140 2
.It \\(fo
.Pq right guilsing
d201 54
d483 10
a492 2
.It \\(bu
.Pq bullet
@


1.7
log
@Many more ASCII escapes added.
Stripped nroff punt from mdocterm.c.
Fixed multiple-file handling for mdocterm.c.
Cleared up mdoc.h API.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.6 2009/03/16 23:37:28 kristaps Exp $
d120 4
d169 4
d269 2
d433 2
d437 2
@


1.6
log
@Changed e-mail address to @@openbsd.
Cleaned up manual-page documentation.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.5 2009/03/16 22:19:19 kristaps Exp $
d130 9
a138 3
.Pq left guillemot
.It \\(>>
.Pq right guillemot
d230 1
a230 1
Diacritics and letter combinations:
d232 2
a233 8
.It \\(ga
.Pq accent grave
.It \\(aa
.Pq accent accute
.It \\(ad
.Pq accent dieresis
.It \\(a~
.Pq accent tilde
d242 47
d363 53
@


1.5
log
@Fixed mdoc_phrase escape handling.
Added MDOC_IGNDELIM (Pf, soon Li, etc.).
macro_constant_delimited ignargs -> argv.c parsing.
Renamed macro functions to correspond to ontologies.
`Fo' and `St' made callable (compat documented).
strings.sh deprecated (directly using CPP).
Abstracted ASCII translation into ascii.{c,in}.
ASCII table uses a self-reordering chained hashtable.
Removed old regressions.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.4 2009/03/14 05:21:58 kristaps Exp $
d3 1
a3 1
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@kth.se>
d44 1
a44 2
documents may contain only printable alphanumeric characters, the space
character
d645 1
d655 2
d658 8
d731 1
a731 1
.An Kristaps Dzonsons Aq kristaps@@kth.se .
d786 8
@


1.4
log
@mdoc.3 refers to local mdoc.7.
mdoc.7 includes its compatibility with system-dependent roff installations.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.3 2009/03/13 13:56:13 kristaps Exp $
d75 1
a75 1
.Pq exclmamation 
d77 1
d79 4
a82 1
Use of these characters must either be escaped with a non-breaking space
d84 1
a84 3
or, if applicable, an appropriate escape-sequence used.  Use of reserved
characters is described in
.Sx Closure .
d126 8
d173 12
d225 1
a225 1
Diacritics:
d231 86
d330 4
d354 1
a354 1
macros always span multiple lines.  They consist optionally of one or
d357 2
a358 1
subsequent macros or text on the same line following invocation; a
d365 1
a365 1
macros may span multiple lines.  They consists optionally of a 
a422 89
.\" .\" SUB-SECTION
.\" .Ss Examples
.\" The following examples illustrate each macro classification.
.\" .\" PARAGRAPH
.\" .Pp
.\" Implicit full-block.  Has head, body and no tail.  Scope closed by
.\" second
.\" .Sq \&Sh
.\" invocation.
.\" .Bd -literal -offset XXXX
.\" \&.Sh SECTION 1
.\" body...
.\" \&.Sh SECTION 2
.\" .Ed
.\" .\" PARAGRAPH
.\" .Pp
.\" Nested implicit full-block, where the subsection
.\" .Sq \&Ss
.\" is within the scope of the parent section
.\" .Sq \&Sh
.\" and closed along with its parent by the subsequent
.\" .Sq \&Sh .
.\" .Bd -literal -offset XXXX
.\" \&.Sh SECTION 1
.\" \&.Ss Subsection 1
.\" body...
.\" \&.Sh SECTION 2
.\" .Ed
.\" .\" PARAGRAPH
.\" .Pp
.\" Explicit full-block.  Has a head, a body and no tail.  Scope closed by 
.\" .Sq \&Ef
.\" invocation.
.\" .Bd -literal -offset XXXX
.\" \&.Bf symbolic
.\" body...
.\" \&.Ef
.\" .Ed
.\" .\" PARAGRAPH
.\" .Pp
.\" Nested explicit/implicit scope.  
.\" .Sq \&It
.\" macro is an implicit block whose scope is closed by the explicit
.\" .Sq \&El
.\" closure.
.\" .Bd -literal -offset XXXX
.\" \&.Bl \-bullet
.\" \&.It head
.\" body...
.\" \&.El
.\" .Ed
.\" .\" PARAGRAPH
.\" .Pp
.\" Explicit partial-block.  Has head, body and tail.  Scope closed by
.\" .Sq \&Ec 
.\" invocation.
.\" .Bd -literal -offset XXX
.\" \&.Eo head body... \&Ec tail
.\" .Ed
.\" .\" PARAGRAPH
.\" .Pp
.\" Implicit partial-block.  Has only body.  Scope is closed by end-of-line.
.\" .Bd -literal -offset XXX
.\" \&.Sq body...
.\" .Ed
.\" .\" PARAGRAPH
.\" .Pp
.\" Explicit partial-block with only body and scope closed by 
.\" .Sq \&Ac
.\" invocation.
.\" .Bd -literal -offset XXXX
.\" \&.Ao body... \&Ac
.\" .Ed
.\" .\" PARAGRAPH
.\" .Pp
.\" Implicit partial-block enclosing explicit partial-block.
.\" .Bd -literal -offset XXX
.\" \&.Sq body... \&Ao body... \&Ac
.\" .Ed
.\" .\" PARAGRAPH
.\" .Pp
.\" Inline macros, several in sequence.  Scope is closed for
.\" .Sq \&Fl
.\" by the punctuation delimiter and 
.\" .Sq \&Ar
.\" by the end-of-line.
.\" .Bd -literal -offset XXXX
.\" \&.Fl text0 text1 ; Ar text0 text1
.\" .Ed
d667 6
d722 55
@


1.3
log
@Finished initial mdoc.7.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.2 2009/03/13 09:08:59 kristaps Exp $
d81 2
a82 1
characters is described later in this document.
d87 1
a87 1
and followed by either an open-parenthesis 
d97 3
a99 3
with the same combinations as described above.  This form, however, is
deprecated.  The following is a table of all available escapes, arranged
by classification.  
d232 2
d238 1
a238 6
may span multiple lines.  
.Qq Implicit 
block scope is closed by a subsequent invocation of the same macro,
one of a set of corresponding closure macros or end-of-file.
.Qq Explicit 
block scope is closed by a corresponding closure macro.
a259 1
.El
d262 22
a283 6
macros may only enclose text and span at most a single line.  If
a macro is parsable, its scope may be closed by subsequent macros or
delimiting punctuation.  In-line macros follow different conventions for
closure; see 
.Sx MACROS 
for per-macro details.
d285 25
d410 1
d412 1
a412 1
Block full-explicit (may contain head, body, tail):
d414 3
a416 3
\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBhead...\(rB
\(lBbody...\(rB
\&.Yc \(lBtail...\(rB
d418 1
d420 1
a420 1
Block full-implicit (may contain zero or more heads, body, no tail):
d422 2
a423 2
\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBhead... \(lBTa head...\(rB\(rB
\(lBbody...\(rB
d426 1
d428 1
a428 1
Block partial-explicit (may contain head, multi-line body, tail):
d431 2
a432 2
\(lBbody...\(rB
\&.Yc \(lBtail...\(rB
d435 1
a435 1
\(lBbody...\(rB \&Yc \(lBtail...\(rB
d437 1
d439 4
a442 1
Block partial-implicit (no head, body, no tail):
d444 1
a444 1
\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBbody...\(rB
d446 1
d448 1
a448 2
In-line (may be closed by end-of-line, reserved character, subsequent
macro invocation or finite number of arguments):
d450 1
a450 5
\&.Yy \(lB\-arg \(lBval...\(rB\(rB args...

\&.Yy \(lB\-arg \(lBval...\(rB\(rB args... ;

\&.Yy \(lB\-arg \(lBval...\(rB\(rB args... Xx
d633 48
a686 5
.Sh HISTORY
This manual describes the language accepted by
.Xr mdoc 3 ,
which implements the roff-mdoc macro package.
.\" SECTION
@


1.2
log
@Updating mdoc.7.
@
text
@d1 1
a1 1
.\" $Id: mdoc.7,v 1.1 2009/03/13 07:46:10 kristaps Exp $
d39 2
a40 1
prior macros.  Macros are either two or three characters in length.
d363 2
a364 1
The syntax of macro invocation depends on classification.  
d515 4
a518 1
In-line macros have only text children.  
d522 3
a524 3
.It \&.Dd    Ta    \&No  Ta    \&No    Ta    \&
.It \&.Dt    Ta    \&No  Ta    \&No    Ta    \&
.It \&.Os    Ta    \&No  Ta    \&No    Ta    \&
d526 64
a589 64
.It \&.Ad    Ta    Yes   Ta    Yes     Ta    \&
.It \&.An    Ta    \&No  Ta    Yes     Ta    \&
.It \&.Ar    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Cd    Ta    Yes   Ta    \&No    Ta    \&
.It \&.Cm    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Dv    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Er    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Ev    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Ex    Ta    \&No  Ta    \&No    Ta    \&
.It \&.Fa    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Fd    Ta    \&No  Ta    \&No    Ta    \&
.It \&.Fl    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Fn    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Ft    Ta    \&No  Ta    Yes     Ta    \&
.It \&.Ic    Ta    Yes   Ta    Yes     Ta    \&
.It \&.In    Ta    \&No  Ta    \&No    Ta    \&
.It \&.Li    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Nd    Ta    \&No  Ta    \&No    Ta    \&
.It \&.Nm    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Ot    Ta    \&No  Ta    \&No    Ta    \&
.It \&.Pa    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Rv    Ta    \&No  Ta    \&No    Ta    \&
.It \&.St    Ta    \&No  Ta    Yes     Ta    \&
.It \&.Va    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Vt    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Xr    Ta    Yes   Ta    Yes     Ta    \&
.It \&.%A    Ta    \&No  Ta    \&No    Ta    \&
.It \&.%B    Ta    \&No  Ta    \&No    Ta    \&
.It \&.%C    Ta    \&No  Ta    \&No    Ta    \&
.It \&.%D    Ta    \&No  Ta    \&No    Ta    \&
.It \&.%I    Ta    \&No  Ta    \&No    Ta    \&
.It \&.%J    Ta    \&No  Ta    \&No    Ta    \&
.It \&.%N    Ta    \&No  Ta    \&No    Ta    \&
.It \&.%O    Ta    \&No  Ta    \&No    Ta    \&
.It \&.%P    Ta    \&No  Ta    \&No    Ta    \&
.It \&.%R    Ta    \&No  Ta    \&No    Ta    \&
.It \&.%T    Ta    \&No  Ta    \&No    Ta    \&
.It \&.%V    Ta    \&No  Ta    \&No    Ta    \&
.It \&.At    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Bsx   Ta    Yes   Ta    Yes     Ta    \&
.It \&.Bx    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Db    Ta    \&No  Ta    \&No    Ta    \&
.It \&.Em    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Fx    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Ms    Ta    \&No  Ta    Yes     Ta    \&
.It \&.No    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Ns    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Nx    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Ox    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Pf    Ta    \&No  Ta    Yes     Ta    \&
.It \&.Sm    Ta    \&No  Ta    \&No    Ta    \&
.It \&.Sx    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Sy    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Tn    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Ux    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Bt    Ta    \&No  Ta    \&No    Ta    \&
.It \&.Hf    Ta    \&No  Ta    \&No    Ta    \&
.It \&.Fr    Ta    \&No  Ta    \&No    Ta    \&
.It \&.Ud    Ta    \&No  Ta    \&No    Ta    \&
.It \&.Lb    Ta    \&No  Ta    \&No    Ta    \&
.It \&.Ap    Ta    Yes   Ta    Yes     Ta    \&
.It \&.Lp    Ta    \&No  Ta    \&No    Ta    \&
.It \&.Lk    Ta    \&No  Ta    Yes     Ta    \&
.It \&.Mt    Ta    \&No  Ta    Yes     Ta    \&
d598 5
@


1.1
log
@Added canonical mdoc.7.
Added \q macro.
@
text
@d1 1
a1 1
.\" $Id: mdoc.3,v 1.16 2009/03/12 23:05:21 kristaps Exp $
d52 3
a54 5
.Ss Special Characters
Within a macro line, the following characters are special:
.\" PARAGRAPH
.Pp
.Bl -tag -width Ds -offset XXXX -compact
d56 1
a56 1
period
d58 1
a58 1
comma
d60 1
a60 1
colon
d62 1
a62 1
semicolon
d64 1
a64 1
left-parenthesis
d66 1
a66 1
right-parenthesis
d68 1
a68 1
left-bracket
d70 1
a70 1
right-bracket
d72 1
a72 1
question
d74 1
a74 1
exclmamation 
d79 2
a80 1
or, if applicable, an appropriate escape-sequence used.
a99 1
.Pp
a120 1
.Pp
a151 1
.Pp
a164 1
.Pp
a201 1
.Pp
a210 1
.Pp
d228 1
a228 1
.Sh CLASSIFICATION
d230 1
a230 1
.Bl -tag -width "in-lineX"
d233 1
a233 1
Block macros enclose other block macros, in-line macros or text, and
d240 1
a240 1
.Bl -tag -width "partial-blockX"
d243 2
a244 1
Always spans multiple lines.  Consists optionally of one or more
d253 1
a253 1
May span multiple lines.  Consists optionally of a 
d264 1
a264 1
In-line macros may only enclose text and span at most a single line.  If
d361 51
d415 1
a415 1
macros, arranged ontologically then alphanumerically by macro name.  A 
d419 1
a419 1
macro May be followed by further (ostensibly callable) macros.
d429 2
a430 1
.Sq \-enum 
d454 2
d472 3
d508 2
d512 73
a584 78
.Ss General
.Bl -column "MacroX" "CallableX" "ParsableX" -compact -offset XXXX
.It Em Macro Ta Em Callable Ta Em Parsable
.It \&.Dd    Ta    \&    Ta    \&
.It \&.Dt    Ta    \&    Ta    \&
.It \&.Os    Ta    \&    Ta    \&
.It \&.Pp    Ta    \&    Ta    \&
.It \&.D1    Ta    \&    Ta    \&
.It \&.Dl    Ta    \&    Ta    Yes
.It \&.Ad    Ta    Yes   Ta    Yes
.It \&.An    Ta    \&    Ta    Yes
.It \&.Ar    Ta    Yes   Ta    Yes
.It \&.Cd    Ta    Yes   Ta    \&
.It \&.Cm    Ta    Yes   Ta    Yes
.It \&.Dv    Ta    Yes   Ta    Yes
.It \&.Er    Ta    Yes   Ta    Yes
.It \&.Ev    Ta    Yes   Ta    Yes
.It \&.Ex    Ta    \&    Ta    \&
.It \&.Fa    Ta    Yes   Ta    Yes
.It \&.Fd    Ta    \&    Ta    \&
.It \&.Fl    Ta    Yes   Ta    Yes
.It \&.Fn    Ta    Yes   Ta    Yes
.It \&.Ft    Ta    \&    Ta    \&
.It \&.Ic    Ta    Yes   Ta    Yes
.It \&.In    Ta    \&    Ta    \&
.It \&.Li    Ta    Yes   Ta    Yes
.It \&.Nd    Ta    \&    Ta    \&
.It \&.Nm    Ta    Yes   Ta    Yes
.It \&.Ot    Ta    \&    Ta    \&
.It \&.Pa    Ta    Yes   Ta    Yes
.It \&.Rv    Ta    \&    Ta    \&
.It \&.St    Ta    Yes   Ta    \&
.It \&.Va    Ta    Yes   Ta    Yes
.It \&.Vt    Ta    Yes   Ta    Yes
.It \&.Xr    Ta    Yes   Ta    Yes
.It \&.%A    Ta    \&    Ta    \&
.It \&.%B    Ta    \&    Ta    \&
.It \&.%C    Ta    \&    Ta    \&
.It \&.%D    Ta    \&    Ta    \&
.It \&.%I    Ta    \&    Ta    \&
.It \&.%J    Ta    \&    Ta    \&
.It \&.%N    Ta    \&    Ta    \&
.It \&.%O    Ta    \&    Ta    \&
.It \&.%P    Ta    \&    Ta    \&
.It \&.%R    Ta    \&    Ta    \&
.It \&.%T    Ta    \&    Ta    \&
.It \&.%V    Ta    \&    Ta    \&
.It \&.At    Ta    Yes   Ta    Yes
.It \&.Bsx   Ta    Yes   Ta    Yes
.It \&.Bx    Ta    Yes   Ta    Yes
.It \&.Db    Ta    \&    Ta    \&
.It \&.Em    Ta    Yes   Ta    Yes
.It \&.Fx    Ta    Yes   Ta    Yes
.It \&.Ms    Ta    \&    Ta    Yes
.It \&.No    Ta    Yes   Ta    Yes
.It \&.Ns    Ta    Yes   Ta    Yes
.It \&.Nx    Ta    Yes   Ta    Yes
.It \&.Ox    Ta    Yes   Ta    Yes
.It \&.Pf    Ta    \&    Ta    Yes
.It \&.Ql    Ta    Yes   Ta    Yes
.It \&.Re    Ta    \&    Ta    \&
.It \&.Rs    Ta    \&    Ta    \&
.It \&.Sm    Ta    \&    Ta    \&
.It \&.Sx    Ta    Yes   Ta    Yes
.It \&.Sy    Ta    Yes   Ta    Yes
.It \&.Tn    Ta    Yes   Ta    Yes
.It \&.Ux    Ta    Yes   Ta    Yes
.It \&.Bk    Ta    \&    Ta    \&
.It \&.Ek    Ta    \&    Ta    \&
.It \&.Bt    Ta    \&    Ta    \&
.It \&.Hf    Ta    \&    Ta    \&
.It \&.Fr    Ta    \&    Ta    \&
.It \&.Ud    Ta    \&    Ta    \&
.It \&.Lb    Ta    \&    Ta    \&
.It \&.Ap    Ta    Yes   Ta    Yes
.It \&.Lp    Ta    \&    Ta    \&
.It \&.Lk    Ta    \&    Ta    Yes
.It \&.Mt    Ta    \&    Ta    Yes
d586 12
@
