head	1.3;
access;
symbols
	VERSION_1_13_3:1.2
	VERSION_1_13_2:1.2
	VERSION_1_12_4:1.2
	VERSION_1_13_1:1.2
	VERSION_1_12_3:1.1
	VERSION_1_12_2:1.1
	VERSION_1_12:1.2.0.2
	VERSION_1_12_1:1.1
	VERSION_1_12_0:1.1
	VERSION_1_11_7:1.1
	VERSION_1_11_6:1.1
	VERSION_1_11_5:1.1;
locks; strict;
comment	@ * @;


1.3
date	2015.10.06.18.32.20;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2014.01.04.01.11.00;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.24.18.15.14;	author kristaps;	state Exp;
branches;
next	;


desc
@@


1.3
log
@modernize style: "return" is not a function
@
text
@#if defined(__linux__) || defined(__MINT__)
# define _GNU_SOURCE /* strptime() */
#endif

#include <time.h>

int
main(void)
{
	struct tm tm;
	const char input[] = "2014-01-04";
	return ! (strptime(input, "%Y-%m-%d", &tm) == input + 10 &&
	    tm.tm_year == 114 && tm.tm_mon == 0 && tm.tm_mday == 4);
}
@


1.2
log
@Clean up feature tests:
* Split the configure steering script out of the Makefile.
* Let the configure step depend on the test sources.
* Clean up the test programs such that they can be run.
@
text
@d12 2
a13 2
	return( ! (input+10 == strptime(input, "%Y-%m-%d", &tm) &&
	    114 == tm.tm_year && 0 == tm.tm_mon && 4 == tm.tm_mday));
@


1.1
log
@Scary-looking but otherwise harmless changes allow me to build for Windows.
That is to say, with mingw32.  This amounts to the following:

 (1) break compat.c into compat_strlcpy.c and compat_strlcat.c
 (2) add compat_getsubopt.c (from OpenBSD) and test-getsubopt.c
 (3) add test-strptime.c for HAVE_STRPTIME
 (4) add ifdef bits here and there, where necessary
 (5) remove some harmless unportable stuff (u_char, localtime_r)

I've added the appropriate mdocml.zip target to the Makefile, too.
@
text
@d2 1
a2 1
# define _GNU_SOURCE /* strptime(), getsubopt() */
d8 1
a8 1
main(int argc, char **argv)
d11 3
a13 2
	strptime(*argv, "%D", &tm);
	return 0;
@
