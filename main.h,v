head	1.24;
access;
symbols
	VERSION_1_13_3:1.20
	VERSION_1_13_2:1.19
	VERSION_1_12_4:1.16
	VERSION_1_13_1:1.16
	VERSION_1_12_3:1.15
	VERSION_1_12_2:1.15
	VERSION_1_12:1.16.0.2
	VERSION_1_12_1:1.15
	VERSION_1_12_0:1.15
	VERSION_1_11_7:1.12
	VERSION_1_11_6:1.12
	VERSION_1_11_5:1.12
	VERSION_1_11_4:1.12
	VERSION_1_11_3:1.12
	VERSION_1_11_2:1.10
	VERSION_1_11_1:1.10
	VERSION_1_10_10:1.10
	VERSION_1_10_9:1.10
	VERSION_1_10_8:1.10
	VERSION_1_10_7:1.10
	VERSION_1_10_6:1.10
	VERSION_1_10_5:1.9
	VERSION_1_10_5_PREPDF:1.8
	VERSION_1_10_4:1.8
	VERSION_1_10_3:1.8
	VERSION_1_10_2:1.7
	VERSION_1_10_1:1.5
	VERSION_1_9_24:1.2
	VERSION_1_9_25:1.2
	VERSION_1_9_23:1.2
	VERSION_1_9_22:1.2
	VERSION_1_9_21:1.2
	VERSION_1_9_20:1.2
	VERSION_1_9_19:1.2
	VERSION_1_9_18:1.2
	VERSION_1_9_17:1.2
	VERSION_1_9_16:1.2
	VERSION_1_9_15:1.2
	VERSION_1_9_15-pre2:1.1
	VERSION_1_9_15-pre1:1.1
	VERSION_1_9_14:1.1
	VERSION_1_9_13:1.1
	VERSION_1_9_12:1.1
	VERSION_1_9_11:1.1
	VERSION_1_9_10:1.1
	VERSION_1_9_9:1.1;
locks; strict;
comment	@ * @;


1.24
date	2015.11.07.14.01.16;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2015.10.13.22.59.54;	author schwarze;	state Exp;
branches;
next	1.22;

1.22
date	2015.04.18.16.06.40;	author schwarze;	state Exp;
branches;
next	1.21;

1.21
date	2015.03.27.21.33.20;	author schwarze;	state Exp;
branches;
next	1.20;

1.20
date	2014.12.31.16.52.40;	author schwarze;	state Exp;
branches;
next	1.19;

1.19
date	2014.12.01.08.05.52;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2014.12.01.04.05.32;	author schwarze;	state Exp;
branches;
next	1.17;

1.17
date	2014.10.28.17.36.19;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2014.04.20.16.46.04;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2011.10.06.22.29.12;	author kristaps;	state Exp;
branches;
next	1.14;

1.14
date	2011.09.18.14.14.15;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2011.09.17.15.00.51;	author schwarze;	state Exp;
branches;
next	1.12;

1.12
date	2011.05.20.15.48.22;	author kristaps;	state Exp;
branches;
next	1.11;

1.11
date	2011.05.17.14.38.34;	author kristaps;	state Exp;
branches;
next	1.10;

1.10
date	2010.07.31.23.52.58;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2010.07.25.11.44.31;	author kristaps;	state Exp;
branches;
next	1.8;

1.8
date	2010.06.29.14.53.14;	author kristaps;	state Exp;
branches;
next	1.7;

1.7
date	2010.06.19.20.46.28;	author kristaps;	state Exp;
branches;
next	1.6;

1.6
date	2010.06.08.13.22.37;	author kristaps;	state Exp;
branches;
next	1.5;

1.5
date	2010.06.07.20.57.09;	author kristaps;	state Exp;
branches;
next	1.4;

1.4
date	2010.06.07.10.52.44;	author kristaps;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.15.16.18.23;	author joerg;	state Exp;
branches;
next	1.2;

1.2
date	2010.01.29.14.39.38;	author kristaps;	state Exp;
branches;
next	1.1;

1.1
date	2009.10.13.10.57.25;	author kristaps;	state Exp;
branches;
next	;


desc
@@


1.24
log
@In private header files, __BEGIN_DECLS and __END_DECLS are pointless.
Because these work slightly differently on different systems,
they are becoming a maintenance burden in the portable version,
so delete them.

Besides, one of the chief design goals of the mandoc toolbox is to
make sure that nothing related to documentation requires C++.
Consequently, linking mandoc against any kind of C++ program would
defeat the purpose and is not supported.
I don't understand why kristaps@@ added them in the first place.
@
text
@/*	$Id: main.h,v 1.23 2015/10/13 22:59:54 schwarze Exp $ */
/*
 * Copyright (c) 2009, 2010, 2011 Kristaps Dzonsons <kristaps@@bsd.lv>
 * Copyright (c) 2014, 2015 Ingo Schwarze <schwarze@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHORS DISCLAIM ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#define	UNCONST(a)	((void *)(uintptr_t)(const void *)(a))

struct	roff_man;
struct	manoutput;

/*
 * Definitions for main.c-visible output device functions, e.g., -Thtml
 * and -Tascii.  Note that ascii_alloc() is named as such in
 * anticipation of latin1_alloc() and so on, all of which map into the
 * terminal output routines with different character settings.
 */

void		 *html_alloc(const struct manoutput *);
void		  html_mdoc(void *, const struct roff_man *);
void		  html_man(void *, const struct roff_man *);
void		  html_free(void *);

void		  tree_mdoc(void *, const struct roff_man *);
void		  tree_man(void *, const struct roff_man *);

void		  man_mdoc(void *, const struct roff_man *);
void		  man_man(void *, const struct roff_man *);

void		 *locale_alloc(const struct manoutput *);
void		 *utf8_alloc(const struct manoutput *);
void		 *ascii_alloc(const struct manoutput *);
void		  ascii_free(void *);
void		  ascii_sepline(void *);

void		 *pdf_alloc(const struct manoutput *);
void		 *ps_alloc(const struct manoutput *);
void		  pspdf_free(void *);

void		  terminal_mdoc(void *, const struct roff_man *);
void		  terminal_man(void *, const struct roff_man *);
@


1.23
log
@Major character table cleanup:
* Use ohash(3) rather than a hand-rolled hash table.
* Make the character table static in the chars.c module:
There is no need to pass a pointer around, we most certainly
never want to use two different character tables concurrently.
* No need to keep the characters in a separate file chars.in;
that merely encourages downstream porters to mess with them.
* Sort the characters to agree with the mandoc_chars(7) manual page.
* Specify Unicode codepoints in hex, not decimal (that's the detail
that originally triggered this patch).
No functional change, minus 100 LOC, and i don't see a performance change.
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.22 2015/04/18 16:06:40 schwarze Exp $ */
a20 2
__BEGIN_DECLS

a53 2

__END_DECLS
@


1.22
log
@Replace the structs mdoc and man by a unified struct roff_man.
Almost completely mechanical, no functional change.
Written on the train from Exeter to London returning from p2k15.
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.21 2015/03/27 21:33:20 schwarze Exp $ */
a22 1
struct	mchars;
d33 1
a33 2
void		 *html_alloc(const struct mchars *,
			const struct manoutput *);
d44 3
a46 6
void		 *locale_alloc(const struct mchars *,
			const struct manoutput *);
void		 *utf8_alloc(const struct mchars *,
			const struct manoutput *);
void		 *ascii_alloc(const struct mchars *,
			const struct manoutput *);
d50 2
a51 4
void		 *pdf_alloc(const struct mchars *,
			const struct manoutput *);
void		 *ps_alloc(const struct mchars *,
			const struct manoutput *);
@


1.21
log
@Actually use the new man.conf(5) "output" directive.
Additional functionality, yet minus 45 lines of code.
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.20 2014/12/31 16:52:40 schwarze Exp $ */
d24 1
a24 2
struct	mdoc;
struct	man;
d36 2
a37 2
void		  html_mdoc(void *, const struct mdoc *);
void		  html_man(void *, const struct man *);
d40 2
a41 2
void		  tree_mdoc(void *, const struct mdoc *);
void		  tree_man(void *, const struct man *);
d43 2
a44 2
void		  man_mdoc(void *, const struct mdoc *);
void		  man_man(void *, const struct man *);
d61 2
a62 2
void		  terminal_mdoc(void *, const struct mdoc *);
void		  terminal_man(void *, const struct man *);
@


1.20
log
@When showing more than one formatted manual page, insert horizontal lines
between pages.  Suggested by Theo Buehler <theo at math dot ethz dot ch>.
Even in UTF-8 output mode, do not use fancy line drawing characters such
that you can easily use /^--- to skip to the next manual in your pager.
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.19 2014/12/01 08:05:52 schwarze Exp $ */
d4 1
a4 1
 * Copyright (c) 2014 Ingo Schwarze <schwarze@@openbsd.org>
d10 1
a10 1
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
d12 1
a12 1
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
d26 1
d35 2
a36 1
void		 *html_alloc(const struct mchars *, char *);
d47 6
a52 3
void		 *locale_alloc(const struct mchars *, char *);
void		 *utf8_alloc(const struct mchars *, char *);
void		 *ascii_alloc(const struct mchars *, char *);
d56 4
a59 2
void		 *pdf_alloc(const struct mchars *, char *);
void		 *ps_alloc(const struct mchars *, char *);
@


1.19
log
@header cleanup:
* add missing forward declarations
* remove needless header inclusions
* some style unification
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.18 2014/12/01 04:05:32 schwarze Exp $ */
d4 1
d49 1
@


1.18
log
@remove unneccessary inclusion protection; patch from deraadt@@
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.17 2014/10/28 17:36:19 schwarze Exp $ */
d18 2
d22 1
a25 3
#define	UNCONST(a)	((void *)(uintptr_t)(const void *)(a))


@


1.17
log
@Make the character table available to libroff so it can check the
validity of character escape names and warn about unknown ones.
This requires mchars_spec2cp() to report unknown names again.
Fortunately, that doesn't require changing the calling code because
according to groff, invalid character escapes should not produce
output anyway, and now that we warn about them, that's fine.
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.16 2014/04/20 16:46:04 schwarze Exp $ */
a16 2
#ifndef	MAIN_H
#define	MAIN_H
a56 2

#endif /*!MAIN_H*/
@


1.16
log
@KNF: case (FOO):  ->  case FOO:, remove /* LINTED */ and /* ARGSUSED */,
remove trailing whitespace and blanks before tabs, improve some indenting;
no functional change
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.15 2011/10/06 22:29:12 kristaps Exp $ */
d35 1
a35 2
void		 *html_alloc(char *);
void		 *xhtml_alloc(char *);
d46 3
a48 3
void		 *locale_alloc(char *);
void		 *utf8_alloc(char *);
void		 *ascii_alloc(char *);
d51 2
a52 2
void		 *pdf_alloc(char *);
void		 *ps_alloc(char *);
@


1.15
log
@If -Tman is specified and input is -man, echo the preprocessed (`so'
replaced by file) input.  This replaces earlier behaviour of doing
nothing, which I found unexpected (mandoc should always output).

This requires a buffer in read.c that saves the input lines before being
parsed, with a special hook if `so' is invoked.  This buffer is just
flushed to output if -mman is the input.

While mucking around doing this, I also alpha-ordered the mandoc.h
functions.

Ok schwarze@@, with no screaming when the polished patch was published.
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.14 2011/09/18 14:14:15 schwarze Exp $ */
d28 1
a28 1
/* 
@


1.14
log
@forgotten Copyright bumps; no code change
found while syncing to OpenBSD
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.13 2011/09/17 15:00:51 schwarze Exp $ */
d45 1
@


1.13
log
@Initial, incomplete support for -Tman
to convert mdoc(7) documents to the man(7) language.
This is work in progress and will be developed in tree.
It does already handle the cat(1) manual,
but will hardly handle all your fancy manuals yet.
go ahead  kristaps@@ jmc@@ millert@@ deraadt@@
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.12 2011/05/20 15:48:22 kristaps Exp $ */
d3 1
a3 1
 * Copyright (c) 2009, 2010 Kristaps Dzonsons <kristaps@@bsd.lv>
@


1.12
log
@Flip on -Tutf8 backend support.  This forces the UTF-8 LC_CTYPE and does
little else.  Also remove the check for __STDC_ISO_10646__.  It turns
out that very few systems---even those that support it---actually
declare this and it's just causing problems instead of being useful.
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.11 2011/05/17 14:38:34 kristaps Exp $ */
d44 2
@


1.11
log
@Add mode for -Tlocale.  This mode, with this commit, behaves exactly
like -Tascii.  While adding this, inline term_alloc() (was a one-liner),
remove some switches around the terminal encoding for the symbol table
(unnecessary), and split out ascii_alloc() into ascii_init(), which is
also called from locale_init().
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.10 2010/07/31 23:52:58 schwarze Exp $ */
d45 1
@


1.10
log
@Sync to OpenBSD: add missing Copyright years.
I checked that substantial changes were committed
to these files during these years.
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.9 2010/07/25 11:44:31 kristaps Exp $ */
d44 1
@


1.9
log
@Initial PDF shim over PS.  This produces working PDF output with -Tpdf.
It's currently missing the xref table, so you'll get a warning in most
PDF viewers).  It also produces lots of redundant output, which will go
away once I get a better handle on the PDF spec.  The code doesn't
really touch any existing functionality; it's a bunch of conditionals
atop the -Tps (term_ps.c) implementation.  I'm checking it in now to
have it exist and be auditable.  It needs clean-up, polish, and general
care (and xref!).
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.8 2010/06/29 14:53:14 kristaps Exp $ */
d3 1
a3 1
 * Copyright (c) 2009 Kristaps Dzonsons <kristaps@@bsd.lv>
@


1.8
log
@Add in -Opaper=xxx support for -Tps postscript.  This doesn't have any
functional changes beyond the getsubopt() parse in term_ps.c.  If you
want to test this (it only does -Opaper=a4 and -Opaper=letter; adding
more is trivial), make sure you specify (e.g.) -sPAPERSIZE=a4 to gs(1).
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.7 2010/06/19 20:46:28 kristaps Exp $ */
d47 1
d49 1
a49 1
void		  ps_free(void *);
@


1.7
log
@Churn as I finish email address migration kth.se -> bsd.lv.
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.6 2010/06/08 13:22:37 kristaps Exp $ */
d47 1
a47 1
void		 *ps_alloc(void);
@


1.6
log
@No functionality changes: just restructuring.  Deprecated
terminal_free() in favour of ps_free() and ascii_free().  Moved ps_*()
functions into term_ps.c so that they don't clutter up term.c.
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.5 2010/06/07 20:57:09 kristaps Exp $ */
d3 1
a3 1
 * Copyright (c) 2009 Kristaps Dzonsons <kristaps@@kth.se>
@


1.5
log
@First check-in of PostScript output.  This does not change any logic
within term.c, but does add a small shim over putchar() that switches on
the output engine.  Prints, for this initial version, only monospace and
without font decorations.  It's a start.
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.4 2010/06/07 10:52:44 kristaps Exp $ */
d45 2
d48 2
a51 1
void		  terminal_free(void *);
@


1.4
log
@Add -Owidth=width option to mandoc -Tascii.  Asked for by joerg@@ about a
thousand years ago.  Note that this is normalised to >=60.
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.3 2010/05/15 16:18:23 joerg Exp $ */
d45 1
@


1.3
log
@Make the output width an option for ascii_alloc and use that to compute
the default margin. Hard-code 80 chars/line for now.
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.2 2010/01/29 14:39:38 kristaps Exp $ */
d25 3
d44 1
a44 1
void		 *ascii_alloc(size_t);
@


1.2
log
@Fixed Makefile for `make lint' dep. on config.h
Added -Txhtml for XHTML output (minimal increase to programme logic).  Because groff has it and it bothers me that we don't.
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.1 2009/10/13 10:57:25 kristaps Exp $ */
d41 1
a41 1
void		 *ascii_alloc(void);
@


1.1
log
@Moved output definitions into main.h.
Pushed terminal_{mdoc,man} into {mdoc,man}_term.c.
@
text
@d1 1
a1 1
/*	$Id: main.c,v 1.45 2009/10/13 10:21:24 kristaps Exp $ */
d33 1
@
