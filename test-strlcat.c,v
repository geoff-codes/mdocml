head	1.3;
access;
symbols
	VERSION_1_13_3:1.2
	VERSION_1_13_2:1.2
	VERSION_1_12_4:1.2
	VERSION_1_13_1:1.2
	VERSION_1_12_3:1.1
	VERSION_1_12_2:1.1
	VERSION_1_12:1.2.0.2
	VERSION_1_12_1:1.1
	VERSION_1_12_0:1.1
	VERSION_1_11_7:1.1
	VERSION_1_11_6:1.1
	VERSION_1_11_5:1.1
	VERSION_1_11_4:1.1
	VERSION_1_11_3:1.1
	VERSION_1_11_2:1.1
	VERSION_1_11_1:1.1
	VERSION_1_10_10:1.1
	VERSION_1_10_9:1.1
	VERSION_1_10_8:1.1
	VERSION_1_10_7:1.1
	VERSION_1_10_6:1.1
	VERSION_1_10_5:1.1
	VERSION_1_10_5_PREPDF:1.1
	VERSION_1_10_4:1.1
	VERSION_1_10_3:1.1
	VERSION_1_10_2:1.1
	VERSION_1_10_1:1.1
	VERSION_1_9_24:1.1
	VERSION_1_9_25:1.1
	VERSION_1_9_23:1.1
	VERSION_1_9_22:1.1
	VERSION_1_9_21:1.1
	VERSION_1_9_20:1.1
	VERSION_1_9_19:1.1
	VERSION_1_9_18:1.1
	VERSION_1_9_17:1.1
	VERSION_1_9_16:1.1
	VERSION_1_9_15:1.1
	VERSION_1_9_15-pre2:1.1;
locks; strict;
comment	@ * @;


1.3
date	2015.10.06.18.32.20;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2014.01.04.01.11.00;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.01.17.14.31;	author kristaps;	state Exp;
branches;
next	;


desc
@@


1.3
log
@modernize style: "return" is not a function
@
text
@#include <string.h>

int
main(void)
{
	char buf[3] = "a";
	return ! (strlcat(buf, "b", sizeof(buf)) == 2 &&
	    buf[0] == 'a' && buf[1] == 'b' && buf[2] == '\0');
}
@


1.2
log
@Clean up feature tests:
* Split the configure steering script out of the Makefile.
* Let the configure step depend on the test sources.
* Clean up the test programs such that they can be run.
@
text
@d7 2
a8 2
	return( ! (2 == strlcat(buf, "b", sizeof(buf)) &&
	    'a' == buf[0] && 'b' == buf[1] && '\0' == buf[2]));
@


1.1
log
@Big check-in of compatibility layer.  This should work on most major architectures. Thanks to Joerg Sonnenberger.
@
text
@d4 1
a4 1
main(int argc, char **argv)
d6 3
a8 2
	strlcat(argv[0], argv[1], 10);
	return 0;
@
