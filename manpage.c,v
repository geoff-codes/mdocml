head	1.13;
access;
symbols
	VERSION_1_13_3:1.10
	VERSION_1_13_2:1.9
	VERSION_1_13_1:1.7;
locks; strict;
comment	@ * @;


1.13
date	2015.11.07.17.58.55;	author schwarze;	state Exp;
branches;
next	1.12;

1.12
date	2015.10.06.18.32.19;	author schwarze;	state Exp;
branches;
next	1.11;

1.11
date	2015.03.27.17.37.25;	author schwarze;	state Exp;
branches;
next	1.10;

1.10
date	2015.02.10.08.05.30;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2014.08.17.03.24.47;	author schwarze;	state Exp;
branches;
next	1.8;

1.8
date	2014.08.10.23.54.41;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2014.01.06.03.02.46;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2013.12.31.03.41.14;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2013.12.27.18.51.25;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2013.06.05.02.00.26;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2012.06.09.17.49.13;	author kristaps;	state Exp;
branches;
next	1.2;

1.2
date	2012.06.09.14.11.16;	author kristaps;	state Exp;
branches;
next	1.1;

1.1
date	2012.06.08.10.44.52;	author kristaps;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Modernization, no functional change intended:
Use the POSIX function getline(3) rather than the slightly
dangerous BSD function fgetln(3).
Remove the related compatibility code.
@
text
@/*	$Id: manpage.c,v 1.12 2015/10/06 18:32:19 schwarze Exp $ */
/*
 * Copyright (c) 2012 Kristaps Dzonsons <kristaps@@bsd.lv>
 * Copyright (c) 2013 Ingo Schwarze <schwarze@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#include "config.h"

#include <sys/types.h>

#include <assert.h>
#include <getopt.h>
#include <limits.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "manconf.h"
#include "mansearch.h"

static	void	 show(const char *, const char *);

int
main(int argc, char *argv[])
{
	int		 ch, term;
	size_t		 i, sz, linesz;
	ssize_t		 len;
	struct mansearch search;
	struct manpage	*res;
	char		*conf_file, *defpaths, *auxpaths, *line;
	char		 buf[PATH_MAX];
	const char	*cmd;
	struct manconf	 conf;
	char		*progname;
	extern char	*optarg;
	extern int	 optind;

	term = isatty(STDIN_FILENO) && isatty(STDOUT_FILENO);

	progname = strrchr(argv[0], '/');
	if (progname == NULL)
		progname = argv[0];
	else
		++progname;

	auxpaths = defpaths = conf_file = NULL;
	memset(&conf, 0, sizeof(conf));
	memset(&search, 0, sizeof(struct mansearch));

	while (-1 != (ch = getopt(argc, argv, "C:M:m:S:s:")))
		switch (ch) {
		case ('C'):
			conf_file = optarg;
			break;
		case ('M'):
			defpaths = optarg;
			break;
		case ('m'):
			auxpaths = optarg;
			break;
		case ('S'):
			search.arch = optarg;
			break;
		case ('s'):
			search.sec = optarg;
			break;
		default:
			goto usage;
		}

	argc -= optind;
	argv += optind;

	if (0 == argc)
		goto usage;

	search.outkey = "Nd";
	search.argmode = ARG_EXPR;

	manconf_parse(&conf, conf_file, defpaths, auxpaths);
	ch = mansearch(&search, &conf.manpath, argc, argv, &res, &sz);
	manconf_free(&conf);

	if (0 == ch)
		goto usage;

	if (0 == sz) {
		free(res);
		return EXIT_FAILURE;
	} else if (1 == sz && term) {
		i = 1;
		goto show;
	} else if (NULL == res)
		return EXIT_FAILURE;

	for (i = 0; i < sz; i++) {
		printf("%6zu  %s: %s\n",
			i + 1, res[i].names, res[i].output);
		free(res[i].names);
		free(res[i].output);
	}

	if (0 == term) {
		for (i = 0; i < sz; i++)
			free(res[i].file);
		free(res);
		return EXIT_SUCCESS;
	}

	i = 1;
	printf("Enter a choice [1]: ");
	fflush(stdout);

	line = NULL;
	linesz = 0;
	if ((len = getline(&line, &linesz, stdin)) != -1) {
		if ('\n' == line[--len] && len > 0) {
			line[len] = '\0';
			if ((i = atoi(line)) < 1 || i > sz)
				i = 0;
		}
	}
	free(line);

	if (0 == i) {
		for (i = 0; i < sz; i++)
			free(res[i].file);
		free(res);
		return EXIT_SUCCESS;
	}
show:
	cmd = res[i - 1].form ? "mandoc" : "cat";
	strlcpy(buf, res[i - 1].file, PATH_MAX);
	for (i = 0; i < sz; i++)
		free(res[i].file);
	free(res);

	show(cmd, buf);
	/* NOTREACHED */
usage:
	fprintf(stderr, "usage: %s [-C conf] "
				  "[-M paths] "
				  "[-m paths] "
				  "[-S arch] "
				  "[-s section] "
			          "expr ...\n",
				  progname);
	return EXIT_FAILURE;
}

static void
show(const char *cmd, const char *file)
{
	int		 fds[2];
	pid_t		 pid;

	if (-1 == pipe(fds)) {
		perror(NULL);
		exit(EXIT_FAILURE);
	}

	if (-1 == (pid = fork())) {
		perror(NULL);
		exit(EXIT_FAILURE);
	} else if (pid > 0) {
		dup2(fds[0], STDIN_FILENO);
		close(fds[1]);
		cmd = NULL != getenv("MANPAGER") ?
			getenv("MANPAGER") :
			(NULL != getenv("PAGER") ?
			 getenv("PAGER") : "more");
		execlp(cmd, cmd, (char *)NULL);
		perror(cmd);
		exit(EXIT_FAILURE);
	}

	dup2(fds[1], STDOUT_FILENO);
	close(fds[0]);
	execlp(cmd, cmd, file, (char *)NULL);
	perror(cmd);
	exit(EXIT_FAILURE);
}
@


1.12
log
@modernize style: "return" is not a function
@
text
@d1 1
a1 1
/*	$Id: manpage.c,v 1.11 2015/03/27 17:37:25 schwarze Exp $ */
d40 2
a41 1
	size_t		 i, sz, len;
d44 1
a44 1
	char		*conf_file, *defpaths, *auxpaths, *cp;
d128 6
a133 4
	if (NULL != (cp = fgetln(stdin, &len)))
		if ('\n' == cp[--len] && len > 0) {
			cp[len] = '\0';
			if ((i = atoi(cp)) < 1 || i > sz)
d136 2
@


1.11
log
@Parse the new man.conf(5) "output" directive.
The next step will be to actually use the parsed data.
@
text
@d1 1
a1 1
/*	$Id: manpage.c,v 1.10 2015/02/10 08:05:30 schwarze Exp $ */
d102 1
a102 1
		return(EXIT_FAILURE);
d107 1
a107 1
		return(EXIT_FAILURE);
d120 1
a120 1
		return(EXIT_SUCCESS);
d138 1
a138 1
		return(EXIT_SUCCESS);
d157 1
a157 1
	return(EXIT_FAILURE);
@


1.10
log
@trim trailing white space, no code change;
from Svyatoslav Mishyn <juef at openmailboxd dot org>, Crux Linux
@
text
@d1 1
a1 1
/*	$Id: manpage.c,v 1.9 2014/08/17 03:24:47 schwarze Exp $ */
d31 1
a31 1
#include "manpath.h"
d46 1
a46 1
	struct manpaths	 paths;
d60 1
a60 1
	memset(&paths, 0, sizeof(struct manpaths));
d93 3
a95 3
	manpath_parse(&paths, conf_file, defpaths, auxpaths);
	ch = mansearch(&search, &paths, argc, argv, &res, &sz);
	manpath_free(&paths);
@


1.9
log
@Fully integrate apropos(1) into mandoc(1).
Switch the argmode on the progname, including man(1).
Provide -f and -k options to switch the argmode.
Store the argmode inside struct search, generalizing the flags.
Derive the deftype from the argmode when needed instead of storing it.
Store the outkey inside struct search instead of passing it alone.
While here, get rid of the trailing blanks in Makefile.depend.
@
text
@d1 1
a1 1
/*	$Id: manpage.c,v 1.8 2014/08/10 23:54:41 schwarze Exp $ */
d110 1
a110 1
		printf("%6zu  %s: %s\n", 
d151 1
a151 1
			 	  "[-M paths] "
d155 1
a155 1
			          "expr ...\n", 
d177 1
a177 1
		cmd = NULL != getenv("MANPAGER") ? 
d179 1
a179 1
			(NULL != getenv("PAGER") ? 
@


1.8
log
@Get rid of HAVE_CONFIG_H, it is always defined; idea from libnbcompat.
Include <sys/types.h> where needed, it does not belong in config.h.
Remove <stdio.h> from config.h; if it is missing somewhere, it should
be added, but i cannot find a *.c file where it is missing.
@
text
@d1 1
a1 1
/*	$Id: manpage.c,v 1.7 2014/01/06 03:02:46 schwarze Exp $ */
d90 2
a91 1
	search.deftype = TYPE_Nm | TYPE_Nd;
d94 1
a94 1
	ch = mansearch(&search, &paths, argc, argv, "Nd", &res, &sz);
@


1.7
log
@Drop Nd from the mpages table, it is still in the keys table.
This shrinks the database in standard mode by 3%, in -Q mode by 9%,
without loss of functionality.
@
text
@d1 1
a1 1
/*	$Id: manpage.c,v 1.6 2013/12/31 03:41:14 schwarze Exp $ */
a17 1
#ifdef HAVE_CONFIG_H
d19 2
a20 1
#endif
@


1.6
log
@Experimental feature to let apropos(1) show different keys than .Nd.
This really takes us beyond what grep -R /usr/*/man/ can do
because now you can search for pages by *one* criterion and then
display the contents of *another* macro from those pages, like in
$ apropos -O Ox Fa~wchar
to get an impression how long wide character handling is available.
@
text
@d1 1
a1 1
/*	$Id: manpage.c,v 1.5 2013/12/27 18:51:25 schwarze Exp $ */
d93 1
a93 1
	ch = mansearch(&search, &paths, argc, argv, NULL, &res, &sz);
d110 1
a110 1
			i + 1, res[i].names, res[i].desc);
a111 1
		free(res[i].desc);
@


1.5
log
@Change the mansearch() interface to use the mlinks table in the database
and return a list of names with sections, used by apropos(1) for display.
While here, improve uniformity of the interface by allocating the file
name dynamically, just like the names list and the description.
@
text
@d1 1
a1 1
/*	$Id: manpage.c,v 1.4 2013/06/05 02:00:26 schwarze Exp $ */
d4 1
d93 1
a93 1
	ch = mansearch(&search, &paths, argc, argv, &res, &sz);
d113 1
@


1.4
log
@Some places used PATH_MAX from <limits.h>, some MAXPATHLEN from <sys/param.h>.
Consistently use the PATH_MAX since it is specified by POSIX,
while MAXPATHLEN is not.
In preparation for using this at a few more places.
@
text
@d1 1
a1 1
/*	$Id: manpage.c,v 1.3 2012/06/09 17:49:13 kristaps Exp $ */
d109 2
a110 1
			i + 1, res[i].file, res[i].desc);
d115 2
d133 2
d141 2
@


1.3
log
@Allow compilation on Mac OSX.
@
text
@d1 1
a1 1
/*	$Id: manpage.c,v 1.2 2012/06/09 14:11:16 kristaps Exp $ */
a19 1
#include <sys/param.h>
d23 1
d43 1
a43 1
	char		 buf[MAXPATHLEN];
d135 1
a135 1
	strlcpy(buf, res[i - 1].file, MAXPATHLEN);
@


1.2
log
@Merge whatis.1 into apropos.1 (and remove), add whatis bits to apropos
(via mansearch), and merge mandocdb.h into mansearch.h (and remove).
@
text
@d1 1
a1 1
/*	$Id: manpage.c,v 1.1 2012/06/08 10:44:52 kristaps Exp $ */
d24 1
@


1.1
log
@Flip apropos to use mansearch instead of apropos_db.
This makes the utility much smaller and simpler.
A lot of functionality has been omitted while the sqlite3 search routines
improve (logical operations, etc.).
It still needs work to make the output more conventional.
Also add the manpage utility, which I use extensively as a mind-meld of
apropos and man.
@
text
@d1 1
a1 1
/*	$Id: mandocdb.c,v 1.46 2012/03/23 06:52:17 kristaps Exp $ */
d39 1
d41 1
a41 2
	char		*conf_file, *defpaths, *auxpaths, *cp,
			*arch, *sec;
d57 1
a57 1
	auxpaths = defpaths = conf_file = arch = sec = NULL;
d59 1
d73 1
a73 1
			arch = optarg;
d76 1
a76 1
			sec = optarg;
d88 2
d91 1
a91 1
	ch = mansearch(&paths, arch, sec, argc, argv, &res, &sz);
@
