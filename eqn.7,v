head	1.35;
access;
symbols
	VERSION_1_13_3:1.34
	VERSION_1_13_2:1.31
	VERSION_1_12_4:1.29
	VERSION_1_13_1:1.29
	VERSION_1_12_3:1.29
	VERSION_1_12_2:1.29
	VERSION_1_12:1.29.0.2
	VERSION_1_12_1:1.28
	VERSION_1_12_0:1.28
	VERSION_1_11_7:1.27
	VERSION_1_11_6:1.25
	VERSION_1_11_5:1.25
	VERSION_1_11_4:1.2
	VERSION_1_11_3:1.2
	VERSION_1_11_2:1.2
	VERSION_1_11_1:1.2
	VERSION_1_10_10:1.2;
locks; strict;
comment	@# @;


1.35
date	2015.03.30.16.06.14;	author schwarze;	state Exp;
branches;
next	1.34;

1.34
date	2015.03.09.20.17.23;	author schwarze;	state Exp;
branches;
next	1.33;

1.33
date	2015.01.29.00.33.57;	author schwarze;	state Exp;
branches;
next	1.32;

1.32
date	2015.01.20.19.39.34;	author schwarze;	state Exp;
branches;
next	1.31;

1.31
date	2014.10.12.11.57.38;	author schwarze;	state Exp;
branches;
next	1.30;

1.30
date	2014.10.10.08.44.24;	author kristaps;	state Exp;
branches;
next	1.29;

1.29
date	2013.07.13.19.41.16;	author schwarze;	state Exp;
branches;
next	1.28;

1.28
date	2011.09.25.18.37.09;	author schwarze;	state Exp;
branches;
next	1.27;

1.27
date	2011.09.02.19.37.35;	author kristaps;	state Exp;
branches;
next	1.26;

1.26
date	2011.08.18.08.58.43;	author kristaps;	state Exp;
branches;
next	1.25;

1.25
date	2011.07.23.19.04.47;	author kristaps;	state Exp;
branches;
next	1.24;

1.24
date	2011.07.23.18.44.42;	author kristaps;	state Exp;
branches;
next	1.23;

1.23
date	2011.07.23.18.41.18;	author kristaps;	state Exp;
branches;
next	1.22;

1.22
date	2011.07.23.12.10.16;	author kristaps;	state Exp;
branches;
next	1.21;

1.21
date	2011.07.23.12.08.43;	author kristaps;	state Exp;
branches;
next	1.20;

1.20
date	2011.07.23.12.01.54;	author kristaps;	state Exp;
branches;
next	1.19;

1.19
date	2011.07.23.09.47.25;	author kristaps;	state Exp;
branches;
next	1.18;

1.18
date	2011.07.22.14.59.02;	author kristaps;	state Exp;
branches;
next	1.17;

1.17
date	2011.07.22.14.55.07;	author kristaps;	state Exp;
branches;
next	1.16;

1.16
date	2011.07.22.14.26.32;	author kristaps;	state Exp;
branches;
next	1.15;

1.15
date	2011.07.22.13.48.52;	author kristaps;	state Exp;
branches;
next	1.14;

1.14
date	2011.07.22.12.55.02;	author kristaps;	state Exp;
branches;
next	1.13;

1.13
date	2011.07.21.23.30.39;	author kristaps;	state Exp;
branches;
next	1.12;

1.12
date	2011.07.21.15.21.13;	author kristaps;	state Exp;
branches;
next	1.11;

1.11
date	2011.07.21.14.13.00;	author kristaps;	state Exp;
branches;
next	1.10;

1.10
date	2011.07.21.13.37.04;	author kristaps;	state Exp;
branches;
next	1.9;

1.9
date	2011.07.21.13.18.24;	author kristaps;	state Exp;
branches;
next	1.8;

1.8
date	2011.07.21.12.34.09;	author kristaps;	state Exp;
branches;
next	1.7;

1.7
date	2011.07.21.11.57.56;	author kristaps;	state Exp;
branches;
next	1.6;

1.6
date	2011.07.21.11.34.53;	author kristaps;	state Exp;
branches;
next	1.5;

1.5
date	2011.07.21.10.24.35;	author kristaps;	state Exp;
branches;
next	1.4;

1.4
date	2011.07.18.13.47.38;	author kristaps;	state Exp;
branches;
next	1.3;

1.3
date	2011.07.17.14.08.49;	author kristaps;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.17.15.12.42;	author kristaps;	state Exp;
branches;
next	1.1;

1.1
date	2011.02.09.10.03.02;	author kristaps;	state Exp;
branches;
next	;


desc
@@


1.35
log
@Escape punctuation characters that have a different meaning in -Tpdf.

~, `, and ' get translated to non-ASCII characters by most troff
implementations when generating PostScript/PDF output.  When the
original ASCII character is meant, it needs to be manually escaped.

Patch from bentley@@.
@
text
@.\"	$Id: eqn.7,v 1.34 2015/03/09 20:17:23 schwarze Exp $
.\"
.\" Copyright (c) 2011 Kristaps Dzonsons <kristaps@@bsd.lv>
.\" Copyright (c) 2014 Ingo Schwarze <schwarze@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: March 9 2015 $
.Dt EQN 7
.Os
.Sh NAME
.Nm eqn
.Nd eqn language reference for mandoc
.Sh DESCRIPTION
The
.Nm eqn
language is an equation-formatting language.
It is used within
.Xr mdoc 7
and
.Xr man 7
.Ux
manual pages.
It describes the
.Em structure
of an equation, not its mathematical meaning.
This manual describes the
.Nm
language accepted by the
.Xr mandoc 1
utility, which corresponds to the Second Edition
.Nm
specification (see
.Sx SEE ALSO
for references).
.Pp
Equations within
.Xr mdoc 7
or
.Xr man 7
documents are enclosed by the standalone
.Sq \&.EQ
and
.Sq \&.EN
tags.
Equations are multi-line blocks consisting of formulas and control
statements.
.Sh EQUATION STRUCTURE
Each equation is bracketed by
.Sq \&.EQ
and
.Sq \&.EN
strings.
.Em Note :
these are not the same as
.Xr roff 7
macros, and may only be invoked as
.Sq \&.EQ .
.Pp
The equation grammar is as follows, where quoted strings are
case-sensitive literals in the input:
.Bd -literal -offset indent
eqn     : box | eqn box
box     : text
        | \(dq{\(dq eqn \(dq}\(dq
        | \(dqdefine\(dq text text
        | \(dqndefine\(dq text text
        | \(dqtdefine\(dq text text
        | \(dqgfont\(dq text
        | \(dqgsize\(dq text
        | \(dqset\(dq text text
        | \(dqundef\(dq text
        | \(dqsqrt\(dq box
        | box pos box
        | box mark
        | \(dqmatrix\(dq \(dq{\(dq [col \(dq{\(dq list \(dq}\(dq ]*
        | pile \(dq{\(dq list \(dq}\(dq
        | font box
        | \(dqsize\(dq text box
        | \(dqleft\(dq text eqn [\(dqright\(dq text]
col     : \(dqlcol\(dq | \(dqrcol\(dq | \(dqccol\(dq | \(dqcol\(dq
text    : [^space\e\(dq]+ | \e\(dq.*\e\(dq
pile    : \(dqlpile\(dq | \(dqcpile\(dq | \(dqrpile\(dq | \(dqpile\(dq
pos     : \(dqover\(dq | \(dqsup\(dq | \(dqsub\(dq | \(dqto\(dq | \(dqfrom\(dq
mark	: \(dqdot\(dq | \(dqdotdot\(dq | \(dqhat\(dq | \(dqtilde\(dq | \(dqvec\(dq
        | \(dqdyad\(dq | \(dqbar\(dq | \(dqunder\(dq
font    : \(dqroman\(dq | \(dqitalic\(dq | \(dqbold\(dq | \(dqfat\(dq
list    : eqn
        | list \(dqabove\(dq eqn
space   : [\e^~ \et]
.Ed
.Pp
White-space consists of the space, tab, circumflex, and tilde
characters.
It is required to delimit tokens consisting of alphabetic characters
and it is ignored at other places.
Braces and quotes also delimit tokens.
If within a quoted string, these space characters are retained.
Quoted strings are also not scanned for keywords, glyph names,
and expansion of definitions.
To print a literal quote character, it can be prepended with a
backslash or expressed with the \e(dq escape sequence.
.Pp
Subequations can be enclosed in braces to pass them as arguments
to operation keywords, overriding standard operation precedence.
Braces can be nested.
To set a brace verbatim, it needs to be enclosed in quotes.
.Pp
The following text terms are translated into a rendered glyph, if
available: alpha, beta, chi, delta, epsilon, eta, gamma, iota, kappa,
lambda, mu, nu, omega, omicron, phi, pi, psi, rho, sigma, tau, theta,
upsilon, xi, zeta, DELTA, GAMMA, LAMBDA, OMEGA, PHI, PI, PSI, SIGMA,
THETA, UPSILON, XI, inter (intersection), union (union), prod (product),
int (integral), sum (summation), grad (gradient), del (vector
differential), times (multiply), cdot (center-dot), nothing (zero-width
space), approx (approximately equals), prime (prime), half (one-half),
partial (partial differential), inf (infinity), >> (much greater), <<
(much less), \-> (left arrow), <\- (right arrow), +\- (plus-minus), !=
(not equal), == (equivalence), <= (less-than-equal), and >=
(more-than-equal).
The character escape sequences documented in
.Xr mandoc_char 7
can be used, too.
.Pp
The following control statements are available:
.Bl -tag -width Ds
.It Cm define
Replace all occurrences of a key with a value.
Its syntax is as follows:
.Pp
.D1 Cm define Ar key cvalc
.Pp
The first character of the value string,
.Ar c ,
is used as the delimiter for the value
.Ar val .
This allows for arbitrary enclosure of terms (not just quotes), such as
.Pp
.D1 Cm define Ar foo \(aqbar baz\(aq
.D1 Cm define Ar foo cbar bazc
.Pp
It is an error to have an empty
.Ar key
or
.Ar val .
Note that a quoted
.Ar key
causes errors in some
.Nm
implementations and should not be considered portable.
It is not expanded for replacements.
Definitions may refer to other definitions; these are evaluated
recursively when text replacement occurs and not when the definition is
created.
.Pp
Definitions can create arbitrary strings, for example, the following is
a legal construction.
.Bd -literal -offset indent
define foo \(aqdefine\(aq
foo bar \(aqbaz\(aq
.Ed
.Pp
Self-referencing definitions will raise an error.
The
.Cm ndefine
statement is a synonym for
.Cm define ,
while
.Cm tdefine
is discarded.
.It Cm gfont
Set the default font of subsequent output.
Its syntax is as follows:
.Pp
.D1 Cm gfont Ar font
.Pp
In mandoc, this value is discarded.
.It Cm gsize
Set the default size of subsequent output.
Its syntax is as follows:
.Pp
.D1 Cm gsize Oo +|\- Oc Ns Ar size
.Pp
The
.Ar size
value should be an integer.
If prepended by a sign,
the font size is changed relative to the current size.
.It Cm set
Set an equation mode.
In mandoc, both arguments are thrown away.
Its syntax is as follows:
.Pp
.D1 Cm set Ar key val
.Pp
The
.Ar key
and
.Ar val
are not expanded for replacements.
This statement is a GNU extension.
.It Cm undef
Unset a previously-defined key.
Its syntax is as follows:
.Pp
.D1 Cm define Ar key
.Pp
Once invoked, the definition for
.Ar key
is discarded.
The
.Ar key
is not expanded for replacements.
This statement is a GNU extension.
.El
.Pp
Operation keywords have the following semantics:
.Bl -tag -width Ds
.It Cm above
See
.Cm pile .
.It Cm bar
Draw a line over the preceding box.
.It Cm bold
Set the following box using bold font.
.It Cm ccol
Like
.Cm cpile ,
but for use in
.Cm matrix .
.It Cm cpile
Like
.Cm pile ,
but with slightly increased vertical spacing.
.It Cm dot
Set a single dot over the preceding box.
.It Cm dotdot
Set two dots (dieresis) over the preceding box.
.It Cm dyad
Set a dyad symbol (left-right arrow) over the preceding box.
.It Cm fat
A synonym for
.Cm bold .
.It Cm font
Set the second argument using the font specified by the first argument;
currently not recognized by the
.Xr mandoc 1
.Nm
parser.
.It Cm from
Set the following box below the preceding box,
using a slightly smaller font.
Used for sums, integrals, limits, and the like.
.It Cm hat
Set a hat (circumflex) over the preceding box.
.It Cm italic
Set the following box using italic font.
.It Cm lcol
Like
.Cm lpile ,
but for use in
.Cm matrix .
.It Cm left
Set the first argument as a big left delimiter before the second argument.
As an optional third argument,
.Cm right
can follow.
In that case, the fourth argument is set as a big right delimiter after
the second argument.
.It Cm lpile
Like
.Cm cpile ,
but subequations are left-justified.
.It Cm matrix
Followed by a list of columns enclosed in braces.
All columns need to have the same number of subequations.
The columns are set as a matrix.
The difference compared to multiple subsequent
.Cm pile
operators is that in a
.Cm matrix ,
corresponding subequations in all columns line up horizontally,
while each
.Cm pile
does vertical spacing independently.
.It Cm over
Set a fraction.
The preceding box is the numerator, the following box is the denominator.
.It Cm pile
Followed by a list of subequations enclosed in braces,
the subequations being separated by
.Cm above
keywords.
Sets the subequations one above the other, each of them centered.
Typically used to represent vectors in coordinate representation.
.It Cm rcol
Like
.Cm rpile ,
but for use in
.Cm matrix .
.It Cm right
See
.Cm left ;
.Cm right
cannot be used without
.Cm left .
To set a big right delimiter without a big left delimiter, the following
construction can be used:
.Pp
.D1 Cm left No \(dq\(dq Ar box Cm right Ar delimiter
.It Cm roman
Set the following box using the default font.
.It Cm rpile
Like
.Cm cpile ,
but subequations are right-justified.
.It Cm size
Set the second argument with the font size specified by the first
argument; currently ignored by
.Xr mandoc 1 .
By prepending a plus or minus sign to the first argument,
the font size can be selected relative to the current size.
.It Cm sqrt
Set the square root of the following box.
.It Cm sub
Set the following box as a subscript to the preceding box.
.It Cm sup
Set the following box as a superscript to the preceding box.
As a special case, if a
.Cm sup
clause immediately follows a
.Cm sub
clause as in
.Pp
.D1 Ar mainbox Cm sub Ar subbox Cm sup Ar supbox
.Pp
both are set with respect to the same
.Ar mainbox ,
that is,
.Ar supbox
is set above
.Ar subbox .
.It Cm tilde
Set a tilde over the preceding box.
.It Cm to
Set the following box above the preceding box,
using a slightly smaller font.
Used for sums and integrals and the like.
As a special case, if a
.Cm to
clause immediately follows a
.Cm from
clause as in
.Pp
.D1 Ar mainbox Cm from Ar frombox Cm to Ar tobox
.Pp
both are set below and above the same
.Ar mainbox .
.It Cm under
Underline the preceding box.
.It Cm vec
Set a vector symbol (right arrow) over the preceding box.
.El
.Pp
The binary operations
.Cm from ,
.Cm to ,
.Cm sub ,
and
.Cm sup
group to the right, that is,
.Pp
.D1 Ar mainbox Cm sup Ar supbox Cm sub Ar subbox
.Pp
is the same as
.Pp
.D1 Ar mainbox Cm sup Brq Ar supbox Cm sub Ar subbox
.Pp
and different from
.Pp
.D1 Bro Ar mainbox Cm sup Ar supbox Brc Cm sub Ar subbox .
.Pp
By contrast,
.Cm over
groups to the left.
.Pp
In the following list, earlier operations bind more tightly than
later operations:
.Pp
.Bl -enum -compact
.It
.Cm dyad ,
.Cm vec ,
.Cm under ,
.Cm bar ,
.Cm tilde ,
.Cm hat ,
.Cm dot ,
.Cm dotdot
.It
.Cm fat ,
.Cm roman ,
.Cm italic ,
.Cm bold ,
.Cm size
.It
.Cm sub ,
.Cm sup
.It
.Cm sqrt
.It
.Cm over
.It
.Cm from ,
.Cm to
.El
.Sh COMPATIBILITY
This section documents the compatibility of mandoc
.Nm
and the troff
.Nm
implementation (including GNU troff).
.Pp
.Bl -dash -compact
.It
The text string
.Sq \e\(dq
is interpreted as a literal quote in troff.
In mandoc, this is interpreted as a comment.
.It
In troff, The circumflex and tilde white-space symbols map to
fixed-width spaces.
In mandoc, these characters are synonyms for the space character.
.It
The troff implementation of
.Nm
allows for equation alignment with the
.Cm mark
and
.Cm lineup
tokens.
mandoc discards these tokens.
The
.Cm back Ar n ,
.Cm fwd Ar n ,
.Cm up Ar n ,
and
.Cm down Ar n
commands are also ignored.
.El
.Sh SEE ALSO
.Xr mandoc 1 ,
.Xr man 7 ,
.Xr mandoc_char 7 ,
.Xr mdoc 7 ,
.Xr roff 7
.Rs
.%A Brian W. Kernighan
.%A Lorinda L. Cherry
.%T System for Typesetting Mathematics
.%J Communications of the ACM
.%V 18
.%P 151\(en157
.%D March, 1975
.Re
.Rs
.%A Brian W. Kernighan
.%A Lorinda L. Cherry
.%T Typesetting Mathematics, User's Guide
.%D 1976
.Re
.Rs
.%A Brian W. Kernighan
.%A Lorinda L. Cherry
.%T Typesetting Mathematics, User's Guide (Second Edition)
.%D 1978
.Re
.Sh HISTORY
The eqn utility, a preprocessor for troff, was originally written by
Brian W. Kernighan and Lorinda L. Cherry in 1975.
The GNU reimplementation of eqn, part of the GNU troff package, was
released in 1989 by James Clark.
The eqn component of
.Xr mandoc 1
was added in 2011.
.Sh AUTHORS
This
.Nm
reference was written by
.An Kristaps Dzonsons Aq Mt kristaps@@bsd.lv .
@


1.34
log
@use \(dq rather than \*q; patch from bentley@@
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.33 2015/01/29 00:33:57 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 29 2015 $
d149 1
a149 1
.D1 Cm define Ar foo 'bar baz'
d169 2
a170 2
define foo 'define'
foo bar 'baz'
@


1.33
log
@Radical cleanup of COMPATIBILITY sections:
Remove lots of lies, dozens of irrelevant implementation details,
and all references to groff versions older than 1.17.  Move relevant
information to the pages where it belongs, and out of mandoc(1) in
particular.  Add some missing general remarks to roff(7), where it
fits the character and purpose of the page much better.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.32 2015/01/20 19:39:34 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 20 2015 $
d75 9
a83 9
        | \*q{\*q eqn \*q}\*q
        | \*qdefine\*q text text
        | \*qndefine\*q text text
        | \*qtdefine\*q text text
        | \*qgfont\*q text
        | \*qgsize\*q text
        | \*qset\*q text text
        | \*qundef\*q text
        | \*qsqrt\*q box
d86 2
a87 2
        | \*qmatrix\*q \*q{\*q [col \*q{\*q list \*q}\*q ]*
        | pile \*q{\*q list \*q}\*q
d89 9
a97 9
        | \*qsize\*q text box
        | \*qleft\*q text eqn [\*qright\*q text]
col     : \*qlcol\*q | \*qrcol\*q | \*qccol\*q | \*qcol\*q
text    : [^space\e\*q]+ | \e\*q.*\e\*q
pile    : \*qlpile\*q | \*qcpile\*q | \*qrpile\*q | \*qpile\*q
pos     : \*qover\*q | \*qsup\*q | \*qsub\*q | \*qto\*q | \*qfrom\*q
mark	: \*qdot\*q | \*qdotdot\*q | \*qhat\*q | \*qtilde\*q | \*qvec\*q
        | \*qdyad\*q | \*qbar\*q | \*qunder\*q
font    : \*qroman\*q | \*qitalic\*q | \*qbold\*q | \*qfat\*q
d99 1
a99 1
        | list \*qabove\*q eqn
d437 1
a437 1
.Sq \e\*q
@


1.32
log
@change spelling of centre to center: consistent with other man pages
and the name of the syntax elements being described; from tedu@@
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.31 2014/10/12 11:57:38 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: October 12 2014 $
a459 5
.It
Inline equations and the
.Cm delim
control statement are not yet implemented in
.Xr mandoc 1 .
@


1.31
log
@document the semantics of operation keywords
and some other minor improvements
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.30 2014/10/10 08:44:24 kristaps Exp $
d18 1
a18 1
.Dd $Mdocdate: October 10 2014 $
d125 1
a125 1
differential), times (multiply), cdot (centre-dot), nothing (zero-width
@


1.30
log
@Re-write of eqn(7) parser and MathML output.
This adds parser-level support for the grammar described by the eqn
second-edition technical paper, "Typesetting Mathematics — User's Guide"
(Kernighan, Cherry).
The reason for this re-write is the grouping rules, which were not
possible given the existing implementation.
The re-write has also considerably simplified the HTML (and, if it ever
is completed, terminal) front-end.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.29 2013/07/13 19:41:16 schwarze Exp $
d4 1
d18 1
a18 1
.Dd $Mdocdate: July 13 2013 $
d41 3
a43 1
utility, which corresponds to the Second Edition eqn specification (see
d81 1
d83 1
d105 3
d109 9
a117 1
Quoted strings are also not scanned for replacement definitions.
d128 1
a128 1
(much less), \-> (left arrow), <\- (right arrow), += (plus-minus), !=
d131 3
d141 1
a141 1
.D1 define Ar key cvalc
d149 2
a150 2
.D1 define Ar foo 'bar baz'
.D1 define Ar foo cbar bazc
d185 1
a185 1
.D1 gfont Ar font
d192 1
a192 1
.D1 gsize Ar size
d197 2
d204 1
a204 1
.D1 set Ar key val
d216 1
a216 1
.D1 define Ar key
d226 201
d460 5
@


1.29
log
@For citing the names and email addresses of authors,
consistently use the style ".An name Aq Mt email".

Triggered by a question from Jan Stary <hans at stare dot cz>,
ok jmc@@.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.28 2011/09/25 18:37:09 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: September 25 2011 $
a77 1
        | \*qset\*q text text
@


1.28
log
@typos found by jmc@@
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.27 2011/09/02 19:37:35 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: September 2 2011 $
d279 1
a279 2
.An Kristaps Dzonsons ,
.Mt kristaps@@bsd.lv .
@


1.27
log
@Fix typos and spelling errors found by demandoc -w | spell -b.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.26 2011/08/18 08:58:43 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: August 18 2011 $
d26 1
a26 1
language is a equation-formatting language.
d40 1
a40 1
utility, which correspond to the Second Edition eqn specification (see
d135 2
a136 1
.Ar key or
@


1.26
log
@Replace the old `An'/`Aq' AUTHORS note with `An'/`Mt'.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.25 2011/07/23 19:04:47 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: July 23 2011 $
d120 1
a120 1
Replace all occurances of a key with a value.
@


1.25
log
@Clarify what eqn actually is.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.24 2011/07/23 18:44:42 kristaps Exp $
d278 2
a279 1
.An Kristaps Dzonsons Aq kristaps@@bsd.lv .
@


1.24
log
@Note GNU extensions in eqn.7.  Also add `col' and `pile', which are
mentioned briefly in the eqn User's Manual, but otherwise are
unspecified.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.23 2011/07/23 18:41:18 kristaps Exp $
d33 3
@


1.23
log
@Add support for tdefine and ndefine.  Consolidate some error messages.  Add
somem more version notes (getting there).  Have the equation nanme be captured.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.22 2011/07/23 12:10:16 kristaps Exp $
d84 1
a84 1
col     : \*qlcol\*q | \*qrcol\*q | \*qccol\*q
d86 1
a86 1
pile    : \*qlpile\*q | \*qcpile\*q | \*qrpile\*q
d187 1
d200 1
@


1.22
log
@Add `fat' font.  This pretty much brings us in line with the second
edition of eqn.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.21 2011/07/23 12:08:43 kristaps Exp $
d33 1
a33 1
This manual describes the subset of the
d37 3
a39 1
utility.
d71 2
d152 7
@


1.21
log
@Ignore `back', `fwd', `up', `down', `mark', and `lineup'.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.20 2011/07/23 12:01:54 kristaps Exp $
d86 1
a86 1
font    : \*qroman\*q | \*qitalic\*q | \*qbold\*q
@


1.20
log
@Add matrix support.  Also remove "above" notion, as all elements in a
list are delimited by their "aboveness" and it's superfluous.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.19 2011/07/23 09:47:25 kristaps Exp $
d206 16
@


1.19
log
@The circumflex is also a special space character.
Note this and clean up some documentation in eqn.7.
Also add some version notes, although I'm not ready for a release yet.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.18 2011/07/22 14:59:02 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: July 22 2011 $
d75 1
d80 1
d86 1
a86 1
font    : \*qroman\*q | \*qitalic\*q | \*\*qbold\*q
@


1.18
log
@Check for and throw away `gfont' eqn macros.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.17 2011/07/22 14:55:07 kristaps Exp $
d67 6
a72 6
        | "{" eqn "}"
        | "define" text text
        | "gfont" text
        | "gsize" text
        | "set" text text
        | "undef" text
d75 1
a75 1
        | pile "{" list "}"
d77 11
a87 10
        | "size" text box
        | "left" text eqn ["right" text]
text    : TEXT
pile    : "lpile" | "cpile" | "rpile"
pos     : "over" | "sup" | "sub" | "to" | "from"
mark	: "dot" | "dotdot" | "hat" | "tilde" | "vec"
        | "dyad" | "bar" | "under"
font    : "roman" | "italic" | "bold"
list    : eqn 
        | list "above" eqn
d90 4
a93 5
Data in TEXT form is a non-empty sequence of non-space characters or a
non-empty quoted string.
Unless within a quoted string, white-space (and enclosing literal quote
pairs) is thrown away.
Quoted strings are not scanned for replacement definitions.
d95 1
a95 1
The following TEXT terms are translated into a rendered glyph, if
d200 4
@


1.17
log
@Add support for `gsize' eqn token (introduced in second-edition troff).
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.16 2011/07/22 14:26:32 kristaps Exp $
d69 1
d146 7
d157 1
a157 1
.D1 define Ar size
d164 1
a164 1
Both arguments are thrown away.
@


1.16
log
@Add all rendered symbols used by eqn.  I use the Second-Edition User's
Manual (1978) for this, so it should catch most of them.  They just map
into the mandoc_char escaped characters.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.15 2011/07/22 13:48:52 kristaps Exp $
d69 1
d145 9
@


1.15
log
@Clearer documentation of grammar in eqn.7 and addition of Greek symbols.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.14 2011/07/22 12:55:02 kristaps Exp $
d92 13
a104 5
The following text tokens are translated into an acceptable front-end
format, if available: alpha, beta, chi, delta, epsilon, eta, gamma,
iota, kappa, lambda, mu, nu, omega, omicron, phi, pi, psi, rho, sigma,
tau, theta, upsilon, xi, zeta, DELTA, GAMMA, LAMBDA, OMEGA, PHI, PI,
PSI, SIGMA, THETA, UPSILON, and XI.
@


1.14
log
@Fix left/right nesting in eqn.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.13 2011/07/21 23:30:39 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: July 21 2011 $
d62 2
a63 1
The equation grammar is as follows:
d67 4
a70 4
        | { eqn }
        | DEFINE text text
        | SET text text
        | UNDEF text
d73 1
a73 1
        | pile { list }
d75 2
a76 2
        | SIZE text box
        | LEFT text eqn [RIGHT text]
d78 7
a84 20
pile    : LPILE
        | CPILE
        | RPILE
pos     : OVER
        | SUP
        | SUB
        | TO
        | FROM
mark	: DOT
        | DOTDOT
        | HAT
        | TILDE
        | VEC
        | DYAD
        | BAR
        | UNDER
font    : ROMAN
        | ITALIC
        | BOLD
list    : eqn | list ABOVE eqn
d92 5
d203 1
a203 1
The eqn utility, a preprocessor for troff, was originally written by 
@


1.13
log
@Complete eqn.7 parsing.  Features all productions from the original 1975
CACM paper in an LR(1) parse (1 -> eqn_rewind()).  Right now the code is
a little jungly, but will clear up as I consolidate parse components.
The AST structure will also be cleaned up, as right now it's pretty ad
hoc (this won't change the parse itself).  I added the mandoc_strndup()
function will here.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.12 2011/07/21 15:21:13 kristaps Exp $
d75 1
a75 1
        | LEFT text box [RIGHT text]
@


1.12
log
@Support `size' constructs in eqn.7.  Generalise mandoc_strontou to this
effect.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.11 2011/07/21 14:13:00 kristaps Exp $
d72 1
d75 1
d77 3
d96 1
@


1.11
log
@Full support for eqn positionals (above, over, sup, sub, etc.).
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.10 2011/07/21 13:37:04 kristaps Exp $
d73 1
@


1.10
log
@Add eqn subexpression fonts.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.9 2011/07/21 13:18:24 kristaps Exp $
d70 1
d74 5
@


1.9
log
@Add support for markers.  These decorate the last box: see eqn.7.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.8 2011/07/21 12:34:09 kristaps Exp $
d71 1
d81 3
@


1.8
log
@Document `{, }' subexpressions in eqn.7.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.7 2011/07/21 11:57:56 kristaps Exp $
d66 1
a66 1
	| { eqn }
d70 1
d72 8
@


1.7
log
@Make `undef' not expand its argument before undefining it.  Document
this and have the same behaviour apply to `set' and `define'.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.6 2011/07/21 11:34:53 kristaps Exp $
d66 1
@


1.6
log
@Flip eqn into using parsed nodes.  I've temporarily disabled printing
these in the front-ends except for -Ttree, which will display the parsed
tree.

While here, fix that quoted strings aren't scanned for replacement parts.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.5 2011/07/21 10:24:35 kristaps Exp $
d103 1
d119 9
d137 3
@


1.5
log
@Finish the eqn syntactic parser.  This correctly parses terms and does
the proper `define' dance, which amounts to pure word-replace (you can,
say, define `foo' as `define' then define `define' as something else).
eqn.c is now ready for some semantic parsing of `box' and `eqn'
productions as defined by the grammar.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.4 2011/07/18 13:47:38 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: July 18 2011 $
d76 1
@


1.4
log
@Note that equation definitions are nestable.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.3 2011/07/17 14:08:49 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: July 17 2011 $
d74 2
a75 2
White-space (and enclosing literal quote pairs) is thrown away and
productions may not be broken by newlines.
d83 10
a92 1
.D1 define Ar key val
d96 1
a96 1
.Ar value .
d105 8
d127 14
d156 20
a175 10
.\" .Sh HISTORY
.\" The tbl utility, a preprocessor for troff, was originally written by M.
.\" E. Lesk at Bell Labs in 1975.
.\" The GNU reimplementation of tbl, part of the groff package, was released
.\" in 1990 by James Clark.
.\" A standalone tbl implementation was written by Kristaps Dzonsons in
.\" 2010.
.\" This formed the basis of the implementation that is part of the
.\" .Xr mandoc 1
.\" utility.
d177 1
a177 1
This partial
@


1.3
log
@Provide implementations of `define', `set', and `unset'.
Tie them into the stream of data.
Document these appropriate, bringing in the grammar as defined by the
original eqn manual (Kernighan/Richie).
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.2 2011/03/17 15:12:42 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: March 17 2011 $
d93 4
d98 1
a98 1
Set an equation mode.  
@


1.2
log
@Note the development status of eqn.7 and tbl.7.
@
text
@d1 1
a1 1
.\"	$Id: eqn.7,v 1.1 2011/02/09 10:03:02 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: February 9 2011 $
d43 2
a44 2
are enclosed by the
.Sq EQ
d46 38
a83 4
.Sq EN
macro tags, whose precise syntax is documented in
.Xr roff 7 .
Equations consist of multi-line equation data.
d85 6
a90 3
For the time being,
.Xr mandoc 1
reproduces the contents of
d92 9
a100 1
equations verbatim in its output.
d102 4
a105 6
The
.Nm
implementation in
.Xr mandoc 1
is
.Ud
@


1.1
log
@Add stub for eqn.7 manual and flip it on.  Also note COMPATIBILITY issue
of how we considered .TS (etc.) macros and how the preprocessors do.
@
text
@d1 1
a1 1
.\"	$Id: tbl.7,v 1.11 2011/01/17 21:29:04 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: January 17 2011 $
d50 13
@
