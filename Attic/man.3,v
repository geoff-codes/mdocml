head	1.31;
access;
symbols
	VERSION_1_10_10:1.30
	VERSION_1_10_9:1.29
	VERSION_1_10_8:1.27
	VERSION_1_10_7:1.26
	VERSION_1_10_6:1.24
	VERSION_1_10_5:1.22
	VERSION_1_10_5_PREPDF:1.22
	VERSION_1_10_4:1.22
	VERSION_1_10_3:1.21
	VERSION_1_10_2:1.18
	VERSION_1_10_1:1.18
	VERSION_1_9_24:1.16
	VERSION_1_9_25:1.16
	VERSION_1_9_23:1.15
	VERSION_1_9_22:1.15
	VERSION_1_9_21:1.15
	VERSION_1_9_20:1.13
	VERSION_1_9_19:1.13
	VERSION_1_9_18:1.13
	VERSION_1_9_17:1.12
	VERSION_1_9_16:1.12
	VERSION_1_9_15:1.12
	VERSION_1_9_15-pre2:1.10
	VERSION_1_9_15-pre1:1.10
	VERSION_1_9_14:1.10
	VERSION_1_9_13:1.10
	VERSION_1_9_12:1.10
	VERSION_1_9_11:1.10
	VERSION_1_9_10:1.10
	VERSION_1_9_9:1.10
	VERSION_1_9_8:1.10
	VERSION_1_9_7:1.10
	VERSION_1_9_6:1.9
	VERSION_1_9_5:1.9
	VERSION_1_9_2:1.8
	VERSION_1_9_1:1.8
	VERSION_1_9_0:1.8
	VERSION_1_8_5:1.7
	VERSION_1_8_4:1.7
	VERSION_1_8_3:1.7
	VERSION_1_8_2:1.7
	VERSION_1_8_1:1.6
	VERSION_1_8_0:1.6
	VERSION_1_7_24:1.6
	VERSION_1_7_23:1.6
	VERSION_1_7_22:1.5
	VERSION_1_7_21:1.5
	VERSION_1_7_20:1.5
	VERSION_1_7_19:1.5
	VERSION_1_7_17:1.5
	VERSION_1_7_16:1.5
	VERSION_1_7_15:1.5
	VERSION_1_7_14:1.5
	VERSION_1_7_13:1.3
	VERSION_1_7_12:1.1
	OPENBSD_CHECKIN:1.1
	VERSION_1_7_10:1.1;
locks; strict;
comment	@# @;


1.31
date	2011.03.22.10.02.50;	author kristaps;	state dead;
branches;
next	1.30;

1.30
date	2011.02.09.09.18.15;	author kristaps;	state Exp;
branches;
next	1.29;

1.29
date	2011.01.03.11.31.26;	author kristaps;	state Exp;
branches;
next	1.28;

1.28
date	2011.01.01.12.59.17;	author kristaps;	state Exp;
branches;
next	1.27;

1.27
date	2010.12.17.11.41.45;	author kristaps;	state Exp;
branches;
next	1.26;

1.26
date	2010.12.05.16.14.16;	author kristaps;	state Exp;
branches;
next	1.25;

1.25
date	2010.10.10.09.47.05;	author kristaps;	state Exp;
branches;
next	1.24;

1.24
date	2010.08.20.01.02.07;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2010.08.16.09.51.17;	author kristaps;	state Exp;
branches;
next	1.22;

1.22
date	2010.07.07.15.04.54;	author kristaps;	state Exp;
branches;
next	1.21;

1.21
date	2010.06.27.16.18.13;	author kristaps;	state Exp;
branches;
next	1.20;

1.20
date	2010.06.27.15.52.41;	author kristaps;	state Exp;
branches;
next	1.19;

1.19
date	2010.06.26.15.36.37;	author kristaps;	state Exp;
branches;
next	1.18;

1.18
date	2010.05.25.22.16.59;	author kristaps;	state Exp;
branches;
next	1.17;

1.17
date	2010.05.25.21.46.48;	author kristaps;	state Exp;
branches;
next	1.16;

1.16
date	2010.04.13.05.26.49;	author kristaps;	state Exp;
branches;
next	1.15;

1.15
date	2010.03.31.06.37.57;	author kristaps;	state Exp;
branches;
next	1.14;

1.14
date	2010.03.30.19.20.33;	author kristaps;	state Exp;
branches;
next	1.13;

1.13
date	2010.03.27.10.04.56;	author kristaps;	state Exp;
branches;
next	1.12;

1.12
date	2010.02.17.19.22.01;	author kristaps;	state Exp;
branches;
next	1.11;

1.11
date	2010.01.07.19.10.09;	author kristaps;	state Exp;
branches;
next	1.10;

1.10
date	2009.10.03.16.36.06;	author kristaps;	state Exp;
branches;
next	1.9;

1.9
date	2009.09.16.09.41.24;	author kristaps;	state Exp;
branches;
next	1.8;

1.8
date	2009.08.17.11.10.02;	author kristaps;	state Exp;
branches;
next	1.7;

1.7
date	2009.07.20.13.45.11;	author kristaps;	state Exp;
branches;
next	1.6;

1.6
date	2009.07.05.19.30.49;	author kristaps;	state Exp;
branches;
next	1.5;

1.5
date	2009.06.11.07.26.35;	author kristaps;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.10.20.18.43;	author kristaps;	state Exp;
branches;
next	1.3;

1.3
date	2009.04.12.19.45.26;	author kristaps;	state Exp;
branches;
next	1.2;

1.2
date	2009.04.12.19.19.57;	author kristaps;	state Exp;
branches;
next	1.1;

1.1
date	2009.03.27.14.56.15;	author kristaps;	state Exp;
branches;
next	;


desc
@@


1.31
log
@Step 3: consolidate manuals.  The parse functions in mdoc.h, roff.h, and
man.h are now part of libmandoc.h, so remove these from their respective
manuals (they're no longer public-facing and we don't need a libmandoc.3
(yet?)).  Before that, move the juicy data (parse tree syntax) into
new-born mandoc.3.  Peck around in Makefile and index.sgml to reflect
reality.
@
text
@@


1.30
log
@Allow -man to process EQN as well.  Also fix a segfault in missing case
statements in the post-handler for EQN in -mdoc and -man.
@
text
@a0 283
.\"	$Id: man.3,v 1.29 2011/01/03 11:31:26 kristaps Exp $
.\"
.\" Copyright (c) 2009-2010 Kristaps Dzonsons <kristaps@@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: January 3 2011 $
.Dt MAN 3
.Os
.Sh NAME
.Nm man ,
.Nm man_addeqn ,
.Nm man_addspan ,
.Nm man_alloc ,
.Nm man_endparse ,
.Nm man_free ,
.Nm man_meta ,
.Nm man_node ,
.Nm man_parseln ,
.Nm man_reset
.Nd man macro compiler library
.Sh SYNOPSIS
.In mandoc.h
.In man.h
.Vt extern const char * const * man_macronames;
.Ft int
.Fo man_addeqn
.Fa "struct man *man"
.Fa "const struct eqn *eqn"
.Fc
.Ft int
.Fo man_addspan
.Fa "struct man *man"
.Fa "const struct tbl_span *span"
.Fc
.Ft "struct man *"
.Fo man_alloc
.Fa "struct regset *regs"
.Fa "void *data"
.Fa "mandocmsg msgs"
.Fc
.Ft int
.Fn man_endparse "struct man *man"
.Ft void
.Fn man_free "struct man *man"
.Ft "const struct man_meta *"
.Fn man_meta "const struct man *man"
.Ft "const struct man_node *"
.Fn man_node "const struct man *man"
.Ft int
.Fo man_parseln
.Fa "struct man *man"
.Fa "int line"
.Fa "char *buf"
.Fc
.Ft void
.Fn man_reset "struct man *man"
.Sh DESCRIPTION
The
.Nm
library parses lines of
.Xr man 7
input into an abstract syntax tree (AST).
.Pp
In general, applications initiate a parsing sequence with
.Fn man_alloc ,
parse each line in a document with
.Fn man_parseln ,
close the parsing session with
.Fn man_endparse ,
operate over the syntax tree returned by
.Fn man_node
and
.Fn man_meta ,
then free all allocated memory with
.Fn man_free .
The
.Fn man_reset
function may be used in order to reset the parser for another input
sequence.
.Pp
Beyond the full set of macros defined in
.Xr man 7 ,
the
.Nm
library also accepts the following macro:
.Pp
.Bl -tag -width Ds -compact
.It PD
Has no effect.
Handled as a current-scope line macro.
.El
.Ss Types
.Bl -ohang
.It Vt struct man
An opaque type.
Its values are only used privately within the library.
.It Vt struct man_node
A parsed node.
See
.Sx Abstract Syntax Tree
for details.
.El
.Ss Functions
If
.Fn man_addeqn ,
.Fn man_addspan ,
.Fn man_parseln ,
or
.Fn man_endparse
return 0, calls to any function but
.Fn man_reset
or
.Fn man_free
will raise an assertion.
.Bl -ohang
.It Fn man_addeqn
Add an equation to the parsing stream.
Returns 0 on failure, 1 on success.
.It Fn man_addspan
Add a table span to the parsing stream.
Returns 0 on failure, 1 on success.
.It Fn man_alloc
Allocates a parsing structure.
The
.Fa data
pointer is passed to
.Fa msgs .
Always returns a valid pointer.
The pointer must be freed with
.Fn man_free .
.It Fn man_reset
Reset the parser for another parse routine.
After its use,
.Fn man_parseln
behaves as if invoked for the first time.
.It Fn man_free
Free all resources of a parser.
The pointer is no longer valid after invocation.
.It Fn man_parseln
Parse a nil-terminated line of input.
This line should not contain the trailing newline.
Returns 0 on failure, 1 on success.
The input buffer
.Fa buf
is modified by this function.
.It Fn man_endparse
Signals that the parse is complete.
Returns 0 on failure, 1 on success.
.It Fn man_node
Returns the first node of the parse.
.It Fn man_meta
Returns the document's parsed meta-data.
.El
.Ss Variables
The following variables are also defined:
.Bl -ohang
.It Va man_macronames
An array of string-ified token names.
.El
.Ss Abstract Syntax Tree
The
.Nm
functions produce an abstract syntax tree (AST) describing input in a
regular form.
It may be reviewed at any time with
.Fn man_nodes ;
however, if called before
.Fn man_endparse ,
or after
.Fn man_endparse
or
.Fn man_parseln
fail, it may be incomplete.
.Pp
This AST is governed by the ontological rules dictated in
.Xr man 7
and derives its terminology accordingly.
.Pp
The AST is composed of
.Vt struct man_node
nodes with element, root and text types as declared by the
.Va type
field.
Each node also provides its parse point (the
.Va line ,
.Va sec ,
and
.Va pos
fields), its position in the tree (the
.Va parent ,
.Va child ,
.Va next
and
.Va prev
fields) and some type-specific data.
.Pp
The tree itself is arranged according to the following normal form,
where capitalised non-terminals represent nodes.
.Pp
.Bl -tag -width "ELEMENTXX" -compact
.It ROOT
\(<- mnode+
.It mnode
\(<- ELEMENT | TEXT | BLOCK
.It BLOCK
\(<- HEAD BODY
.It HEAD
\(<- mnode*
.It BODY
\(<- mnode*
.It ELEMENT
\(<- ELEMENT | TEXT*
.It TEXT
\(<- [[:alpha:]]*
.El
.Pp
The only elements capable of nesting other elements are those with
next-lint scope as documented in
.Xr man 7 .
.Sh EXAMPLES
The following example reads lines from stdin and parses them, operating
on the finished parse tree with
.Fn parsed .
This example does not error-check nor free memory upon failure.
.Bd -literal -offset indent
struct regset regs;
struct man *man;
struct man_node *node;
char *buf;
size_t len;
int line;

bzero(&regs, sizeof(struct regset));
line = 1;
man = man_alloc(&regs, NULL, NULL);
buf = NULL;
alloc_len = 0;

while ((len = getline(&buf, &alloc_len, stdin)) >= 0) {
    if (len && buflen[len - 1] = '\en')
        buf[len - 1] = '\e0';
    if ( ! man_parseln(man, line, buf))
        errx(1, "man_parseln");
    line++;
}

free(buf);

if ( ! man_endparse(man))
    errx(1, "man_endparse");
if (NULL == (node = man_node(man)))
    errx(1, "man_node");

parsed(man, node);
man_free(man);
.Ed
.Pp
To compile this, execute
.Pp
.Dl % cc main.c libman.a libmandoc.a
.Pp
where
.Pa main.c
is the example file.
.Sh SEE ALSO
.Xr mandoc 1 ,
.Xr man 7
.Sh AUTHORS
The
.Nm
library was written by
.An Kristaps Dzonsons Aq kristaps@@bsd.lv .
@


1.29
log
@Same treatment for MAN_HALT as for MDOC_HALT.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.28 2011/01/01 12:59:17 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: January 1 2011 $
d22 2
d37 5
d116 1
d127 3
@


1.28
log
@Add -man support for tables.  Like -mdoc, this consists of an
external-facing function man_addspan() (this required shuffling around
the descope routine) and hooks elsewhere.

Also fixed mdoc.c's post-validation of tables.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.27 2010/12/17 11:41:45 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: December 17 2010 $
d108 10
d128 2
a129 2
Returns NULL on failure.
If non-NULL, the pointer must be freed with
a147 5
Note that if
.Fn man_endparse
is called subsequent to
.Fn man_node ,
the resulting tree is incomplete.
a150 5
Note that if
.Fn man_parseln
or
.Fn man_endparse
return 0, the tree will be incomplete.
a152 5
If this information has not yet been supplied or
.Fn man_parseln
or
.Fn man_endparse
return 0, the data will be incomplete.
@


1.27
log
@Correctly labelled command-line as `Dl'.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.26 2010/12/05 16:14:16 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: December 5 2010 $
d34 5
d109 3
@


1.26
log
@Remove `Sp', `Vb', and `Ve' (as per schwarze@@'s changes in OpenBSD),
which are now accomodated for the new libroff modifications.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.25 2010/10/10 09:47:05 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: October 10 2010 $
d257 1
a257 1
.D1 % cc main.c libman.a libmandoc.a
@


1.25
log
@Cleaned up library manuals: removed old escapes, added EXAMPLES, stripped
out some superfluous stuff.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.24 2010/08/20 01:02:07 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: August 20 2010 $
d84 1
a84 1
library also accepts the following macros:
d88 1
a88 17
Has no effect.  Handled as a current-scope line macro.
.It Sp
A synonym for
.Sq sp 0.5v
.Pq part of the standard preamble for Perl documentation .
Handled as a line macro.
.It Vb
A synonym for
.Sq nf
.Pq part of the standard preamble for Perl documentation .
Handled as a current-scope line macro.
.It Ve
A synonym for
.Sq fi ,
closing
.Sq Vb
.Pq part of the standard preamble for Perl documentation .
@


1.24
log
@Implement a simple, consistent user interface for error handling.
We now have sufficient practical experience to know what we want,
so this is intended to be final:
- provide -Wlevel (warning, error or fatal) to select what you care about
- provide -Wstop to stop after parsing a file with warnings you care about
- provide consistent exit status codes for those warnings you care about
- fully document what warnings, errors and fatal errors mean
- remove all other cruft from the user interface, less is more:
- remove all -f knobs along with the whole -f option
- remove the old -Werror because calling warnings "fatal" is silly
- always finish parsing each file, unless fatal errors prevent that
This commit also includes a couple of related simplifications behind
the scenes regarding error handling.
Feedback and OK  kristaps@@;  Joerg Sonnenberger (NetBSD) and
Sascha Wildner (DragonFly BSD) agree with the general direction.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.23 2010/08/16 09:51:17 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: August 16 2010 $
a78 3
See the
.Sx EXAMPLES
section for a full example.
a106 33
.Pp
Furthermore, the following escapes are accepted to allow
.Xr pod2man 1
documents to be correctly formatted:
\e*(-- (dash),
\e*(PI (pi),
\e*(L" (left double-quote),
\e*(R" (right double-quote),
\e*(C` (left single-quote),
\e*(C' (right single-quote),
\e*(Aq (apostrophe),
\e*^ (hat),
\e*, (comma),
\e*~ (tilde),
\e*/ (forward slash),
\e*: (umlaut),
\e*8 (beta),
\e*o (degree),
\e*(D- (Eth),
\e*(d- (eth),
\e*(Th (Thorn),
and
\e*(th (thorn).
.Sh REFERENCE
This section further defines the
.Sx Types ,
.Sx Functions
and
.Sx Variables
available to programmers.
Following that, the
.Sx Abstract Syntax Tree
section documents the output tree.
a107 5
Both functions (see
.Sx Functions )
and variables (see
.Sx Variables )
may use the following types:
d110 1
a110 2
An opaque type defined in
.Pa man.c .
a111 3
.It Vt mandocmsg
A function callback type defined in
.Pa mandoc.h .
a113 2
Defined in
.Pa man.h .
a118 1
Function descriptions follow:
d271 5
a275 1
Please see
d277 1
a277 1
in the source archive for a rigorous reference.
@


1.23
log
@Remove \*(C+ from the pre-predefined strings.  It is always `ds'-defined
when being used in manuals.  Since we now support `ds', it's no longer
necessary to account for it.  From a bug report originally by Thomas
Jeunet.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.22 2010/07/07 15:04:54 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: July 7 2010 $
a37 1
.Fa "int pflags"
a173 4
The
.Fa pflags
arguments are defined in
.Pa man.h .
d296 1
a296 1
man = man_alloc(&regs, NULL, 0, NULL);
@


1.22
log
@Re-constitution of `ds' symbol processing.  First, push the
roff_getstr() family of functions into roff.c with the "first_string"
directly in struct roff.  Second, pre-process each line for reserved
words in libroff, splicing and re-running a line if it has one (this
allows defined symbols to be macros).  Remove term.c's invocation of the
roff_getstrn() function.  Removed function documentation in roff.3 and
added roff.7 `ds' documentation.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.21 2010/06/27 16:18:13 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: June 27 2010 $
a118 1
\e*(C+ (C++),
@


1.21
log
@Following clue-stick applied by schwarze@@, back out const-ness of regset
passed in to libmdoc and libman.

Fix mdoc.3 and man.3 EXAMPLE sections to include regset.

Add MDOC_SYNPRETTY flag cueing front-end to nicely format certain values
as if SEC_SYNOPSIS were the current section.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.20 2010/06/27 15:52:41 kristaps Exp $
a31 1
.In regs.h
@


1.20
log
@Downstream maintainers: this removes UGLY!  I don't want diverging
functionality and UGLY works quite well thanks to schwarze@@'s careful
attention.

This also backs out function-prototype changes for struct regset,
instead stuffing a pointer to the regset directly into struct
mdoc/man/roff.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.19 2010/06/26 15:36:37 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: June 26 2010 $
d37 1
a37 1
.Fa "const struct regset *regs"
d294 1
d301 1
d303 1
a303 1
man = man_alloc(NULL, 0, NULL);
@


1.19
log
@Churn-ish check-in getting mdoc_parseln() and man_parseln() to accept a
const struct regset pointer.  No functionality.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.18 2010/05/25 22:16:59 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: May 25 2010 $
d36 6
a41 1
.Fn man_alloc "void *data" "int pflags" "mandocmsg msgs"
a52 1
.Fa "const struct regset *regs"
@


1.18
log
@Added roff.3, which documents the roff parser interface.

Small fix in mdoc.3 and man.3 pointing to old mdoc_cb and man_cb.

Fix in Makefile adding mandoc.h to HEADS.

Collapsed all HTML files into HTMLS variable (too confusing otherwise).

Removed "htmls" command from Makefile (only I used it and it's just
taking up space).
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.17 2010/05/25 21:46:48 kristaps Exp $
d32 1
d46 6
a51 1
.Fn man_parseln "struct man *man" "int line" "char *buf"
@


1.17
log
@Clean-up: added `Nm mdoc' to mdoc.3.

Clean-up: new-sentence, new-line for man.3.

Clean-up: alpha-ordered man.3 `Nm' sections and prototypes.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.16 2010/04/13 05:26:49 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: April 13 2010 $
d165 2
a166 3
pointer is passed to callbacks in
.Fa cb ,
which are documented further in the header file.
@


1.16
log
@As per Jason McIntyre's heartful urgings, do away with '.' separators between logical sections.
Change email address to BSD.lv one (this is not an academic project...)
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.15 2010/03/31 06:37:57 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: March 31 2010 $
a22 1
.Nm man_parseln ,
d24 2
d27 1
a27 2
.Nm man_meta ,
.Nm man_free ,
d31 1
d35 3
a37 3
.Fn man_alloc "void *data" "int pflags" "const struct man_cb *cb"
.Ft void
.Fn man_reset "struct man *man"
d40 2
a41 2
.Ft int
.Fn man_parseln "struct man *man" "int line" "char *buf"
a43 2
.Ft "const struct man_meta *"
.Fn man_meta "const struct man *man"
d45 3
a47 1
.Fn man_endparse "struct man *man"
d53 1
a53 3
input (and
.Em only
man) into an abstract syntax tree (AST).
d70 2
a71 1
sequence.  See the
a81 12
.It am
.It ami
.It de
.It dei
.It ig
Instructional macros in the original roff language.  Blocks begun by
these macros end with
.Sq ..
and may begin anywhere, although they may not break the next-line
scoping rules specified in
.Xr man 7 .
These blocks are discarded.
a88 2
.It UC
Has no effect.  Handled as a current-scope line macro.
d132 2
a133 1
available to programmers.  Following that, the
d147 3
a149 3
.It Vt struct man_cb
A set of message callbacks defined in
.Pa man.h .
d151 2
a152 1
A parsed node.  Defined in
d162 2
a163 1
Allocates a parsing structure.  The
d172 2
a173 1
Returns NULL on failure.  If non-NULL, the pointer must be freed with
d176 2
a177 1
Reset the parser for another parse routine.  After its use,
d181 2
a182 2
Free all resources of a parser.  The pointer is no longer valid after
invocation.
d184 4
a187 2
Parse a nil-terminated line of input.  This line should not contain the
trailing newline.  Returns 0 on failure, 1 on success.  The input buffer
d191 2
a192 1
Signals that the parse is complete.  Note that if
d196 2
a197 1
the resulting tree is incomplete.  Returns 0 on failure, 1 on success.
d199 2
a200 1
Returns the first node of the parse.  Note that if
d206 2
a207 2
Returns the document's parsed meta-data.  If this information has not
yet been supplied or
d223 2
a224 1
regular form.  It may be reviewed at any time with
d234 1
a234 2
This AST is governed by the ontological
rules dictated in
d240 1
a240 2
nodes with element, root and text types as declared
by the
d242 2
a243 1
field.  Each node also provides its parse point (the
d314 4
d324 1
a324 1
utility was written by
@


1.15
log
@Whitespace fix.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.14 2010/03/30 19:20:33 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: March 30 2010 $
a19 2
.
.
a29 2
.
.
a46 2
.
.
a54 1
.
a73 1
.
a79 1
.
a93 1
.
a95 1
.
a100 1
.
a102 1
.
a107 1
.
a139 2
.
.
a148 2
.
.
a155 1
.
a159 1
.
a162 1
.
a169 2
.
.
a172 1
.
a184 1
.
a188 1
.
a191 1
.
a196 1
.
a202 1
.
a216 2
.
.
a219 1
.
a222 2
.
.
a235 1
.
a240 1
.
a258 1
.
a278 1
.
a282 2
.
.
a317 2
.
.
a320 2
.
.
@


1.14
log
@Escape TH -> Th (noticed by Joerg Sonnenberger).
Moved pod2man escapes into man.3 (they're not part of -man or -mdoc, technically).
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.13 2010/03/27 10:04:56 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: March 27 2010 $
d133 1
a133 1
documents to be correctly formatted: 
@


1.13
log
@Fixed re-adjustment of scope in exiting roff instructions (libman).
Added title-case check for (libman).
Fixed premature closure of roff instruction scope (libman).
Added documentation of ignored roff macros to man(3).
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.12 2010/02/17 19:22:01 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: February 17 2010 $
d130 24
@


1.12
log
@Removed offsets from most parts (no reason for indentation).
Using POSIX2008 idioms for examples (thanks Joerg Sonnenberger).
Removed references to fgetln().
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.11 2010/01/07 19:10:09 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: January 7 2010 $
d20 2
a21 1
.\" SECTION
d23 1
d32 2
a33 1
.\" SECTION
d51 2
a52 1
.\" SECTION
d55 1
a55 1
.Nm man
d61 1
a61 1
.\" PARAGRAPH
d81 8
a88 1
.\" PARAGRAPH
d90 43
d141 2
a142 1
.\" SUBSECTION
d150 1
a150 1
.\" LIST-ITEM
d155 1
a155 1
.\" LIST-ITEM
d159 1
a159 1
.\" LIST-ITEM
d167 2
a168 1
.\" SUBSECTION
d172 1
a172 1
.\" LIST-ITEM
d185 1
a185 1
.\" LIST-ITEM
d190 1
a190 1
.\" LIST-ITEM
d194 1
a194 1
.\" LIST-ITEM
d200 1
a200 1
.\" LIST-ITEM
d207 1
a207 1
.\" LIST-ITEM
d222 2
a223 1
.\" SUBSECTION
d227 1
a227 1
.\" LIST-ITEM
d231 2
a232 1
.\" SUBSECTION
d246 1
a246 1
.\" PARAGRAPH
d252 1
a252 1
.\" PARAGRAPH
d271 1
a271 1
.\" PARAGRAPH
a276 1
.\" LIST-ITEM
d292 1
a292 1
.\" PARAGRAPH
d297 2
a298 1
.\" SECTION
d334 2
a335 1
.\" SECTION
d339 2
a340 1
.\" SECTION
@


1.11
log
@Fix white-space issues found by mandoc's better white-space finder.
Fixed bogus `\\' escapes in some manuals.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.10 2009/10/03 16:36:06 kristaps Exp $
d3 1
a3 1
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@kth.se>
d17 1
a17 1
.Dd $Mdocdate$
d94 1
a94 1
.Bl -ohang -offset "XXXX"
d115 1
a115 1
.Bl -ohang -offset "XXXX"
d169 1
a169 1
.Bl -ohang -offset "XXXX"
d218 1
a218 1
.Bl -tag -width "ELEMENTXX" -compact -offset "XXXX"
d245 2
a246 5
Note that, if the last line of the file isn't newline-terminated, this
will truncate the file's last character (see
.Xr fgetln 3 ) .
Further, this example does not error-check nor free memory upon failure.
.Bd -literal -offset "XXXX"
d255 2
d258 6
a263 5
while ((buf = fgetln(fp, &len))) {
	buf[len - 1] = '\e0';
	if ( ! man_parseln(man, line, buf))
		errx(1, "man_parseln");
	line++;
d266 2
d269 1
a269 1
	errx(1, "man_endparse");
d271 1
a271 1
	errx(1, "man_node");
d285 1
a285 1
.An Kristaps Dzonsons Aq kristaps@@kth.se .
@


1.10
log
@Fixed mandoc.1 examples (new -Thtml options).
Fixed manuals to use `In', not `Fd'.
Moved buf* functions into html.c.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.9 2009/09/16 09:41:24 kristaps Exp $
d260 1
a260 1
	buf[len - 1] = '\\0';
@


1.9
log
@Made tree/term/out() functions return void.
Put err() functions back into front-ends (no use making it needlessly complex).
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.8 2009/08/17 11:10:02 kristaps Exp $
d32 1
a32 1
.Fd #include "man.h"
@


1.8
log
@Updated libman AST documentation.
Version (not yet finalised, but tagging in Makefile): 1.9.0.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.7 2009/07/20 13:45:11 kristaps Exp $
d32 1
a32 1
.Fd #include <man.h>
@


1.7
log
@Removed trailing whitespace in manuals.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.6 2009/07/05 19:30:49 kristaps Exp $
d223 7
a229 1
\(<- ELEMENT | TEXT
@


1.6
log
@Fixed man.3 mdoc.3 const-nesses.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.5 2009/06/11 07:26:35 kristaps Exp $
d52 1
a52 1
library parses lines of 
d61 1
a61 1
parse each line in a document with 
d66 1
a66 1
.Fn man_node 
d79 1
a79 1
This section further defines the 
d81 1
a81 1
.Sx Functions 
d85 1
a85 1
.Sx Abstract Syntax Tree 
d108 1
a108 1
See 
d121 2
a122 2
.Fa cb , 
which are documented further in the header file.  
d131 1
a131 1
Reset the parser for another parse routine.  After its use, 
d141 1
a141 1
trailing newline.  Returns 0 on failure, 1 on success.  The input buffer 
d146 1
a146 1
Signals that the parse is complete.  Note that if 
d153 1
a153 1
Returns the first node of the parse.  Note that if 
d160 1
a160 1
yet been supplied or 
d176 1
a176 1
The 
d184 1
a184 1
.Fn man_endparse 
d187 1
a187 1
fail, it may be incomplete.  
d193 1
a193 1
and derives its terminology accordingly.  
d196 1
a196 1
The AST is composed of 
d209 1
a209 1
.Va next 
d211 1
a211 1
.Va prev 
d237 1
a237 1
on the finished parse tree with 
d240 1
a240 1
will truncate the file's last character (see 
d276 1
a276 1
utility was written by 
@


1.5
log
@Fixed email address in manual AUTHOR reference.
Set max right margin to 80 columns (schwarze@@openbsd.org).
Fixed centre-field heading position (schwarze@@openbsd.org).
Also fixed -Tman centre-field.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.4 2009/06/10 20:18:43 kristaps Exp $
d43 1
a43 1
.Fn man_node "struct man *man"
d45 1
a45 1
.Fn man_meta "struct man *man"
@


1.4
log
@Fixed license email address.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.3 2009/04/12 19:45:26 kristaps Exp $
d277 1
a277 1
.An Kristaps Dzonsons Aq kristaps@@openbsd.org .
@


1.3
log
@Using proper license template (const).
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.2 2009/04/12 19:19:57 kristaps Exp $
d3 1
a3 1
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@openbsd.org>
@


1.2
log
@Manual .Dt fields CAPITALISED.
Indent set to 5 chars (nroff compat).
Half-indent set to 3 chars (nroff compat).
Default behaviour is loose-y (ignore macro/char/escape).
Added -fstrict.
Added unknown-character ignoring.
@
text
@d1 1
a1 1
.\" $Id: man.3,v 1.1 2009/03/27 14:56:15 kristaps Exp $
d6 10
a15 3
.\" purpose with or without fee is hereby granted, provided that the
.\" above copyright notice and this permission notice appear in all
.\" copies.
a16 9
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
.\" WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
.\" AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
.\" DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
.\" PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
.\" TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
.\" PERFORMANCE OF THIS SOFTWARE.
.\" 
@


1.1
log
@Added some new manuals (mdoc.3 mandoc_char.7).
Support for .br in libman.
@
text
@d1 1
a1 1
.\" $Id: mdoc.3,v 1.24 2009/03/26 16:23:22 kristaps Exp $
d20 1
a20 1
.Dt man 3
@
