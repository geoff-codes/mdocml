head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2015.10.06.18.32.19;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2015.03.20.15.25.12;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2015.03.19.14.57.29;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.3
log
@modernize style: "return" is not a function
@
text
@#include "config.h"

#if HAVE_VASPRINTF

int dummy;

#else

/*	$Id: compat_vasprintf.c,v 1.2 2015/03/20 15:25:12 schwarze Exp $	*/
/*
 * Copyright (c) 2015 Ingo Schwarze <schwarze@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * This fallback implementation is not efficient:
 * It does the formatting twice.
 * Short of fiddling with the unknown internals of the system's
 * printf(3) or completely reimplementing printf(3), i can't think
 * of another portable solution.
 */

#include <stdarg.h>
#include <stdio.h>
#include <stdlib.h>

int
vasprintf(char **ret, const char *format, va_list ap)
{
	char	 buf[2];
	va_list	 ap2;
	int	 sz;

	va_copy(ap2, ap);
	sz = vsnprintf(buf, sizeof(buf), format, ap2);
	va_end(ap2);

	if (sz != -1 && (*ret = malloc(sz + 1)) != NULL) {
		if (vsnprintf(*ret, sz + 1, format, ap) == sz)
			return sz;
		free(*ret);
	}
	*ret = NULL;
	return -1;
}

#endif
@


1.2
log
@Patch from Christian Neukirchen <chneukirchen at gmail dot com>:
He reports that on some platforms, it is not possible to use the
same va_list twice.  So use va_copy(3) for additional safety.
@
text
@d9 1
a9 1
/*	$Id: compat_vasprintf.c,v 1.1 2015/03/19 14:57:29 schwarze Exp $	*/
d49 1
a49 1
			return(sz);
d53 1
a53 1
	return(-1);
@


1.1
log
@Compat glue needed for Solaris 9 and 10.

Thanks to Sevan Janiyan <venture37 at geeklan dot co dot uk> for
reporting the Solaris 10 issues, to Jan Holzhueter <jh at opencsw
dot org> for some additional insight, and to OpenCSW in general for
providing me with a Solaris 9/10/11 testing environment.
@
text
@d9 1
a9 1
/*	$Id$	*/
d40 1
d43 5
a47 2
	if ((sz = vsnprintf(buf, sizeof(buf), format, ap)) != -1 &&
	    (*ret = malloc(sz + 1)) != NULL) {
@
